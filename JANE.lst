Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 1
JANE.ASM



      1						 .486p
      2	00000000				 .model	flat
      3
      4		  =0000			 UNICODE equ	 0
      5					 INCLUDE ..\win32\Win32.INC
1     6					 ;Commented out	because	of errors:
1     7					 ;PROCESS_ALL_ACCESS
1     8					 ;THREAD_ALL_ACCESS
1     9					 ;SECTION_ALL_ACCESS
1    10
1    11					 ;Changed because of errors:
1    12
1    13					 ;From:	PostQuitMessage	    PROCDESC	WINAPI	:SWORD
1    14					 ;To:	PostQuitMessage	    PROCDESC	WINAPI	:DWORD
1    15
1    16
1    17					 ;Main include file for	Win32 applications built with TASM5.
1    18					 ;Supplied on Companion	Disk for book
1    19					 ;"Windows Assembly Language and Systems Programming"
1    20					 ;by Barry Kauler, published by	R&D Books / Miller Freeman, USA, 1997.
1    21					 ;
1    22					 ;I have inserted some comments, marked	by "*bk*".
1    23					 ;some unicode support,	but a bit patchy.  What	is missing mainly is
1    24					 ;the prototypes and structures	for UNICODE characters.	 All API
1    25					 ;functions ending in "....A" are ANSI character, while	UNICODE
1    26					 ;functions end	in "....W".  Maybe someone will	be moved to fix	this?
1    27					 ;Also,	I have stuck stuff into	this file "here	and there" and it
1    28					 ;could	do with	a bit of organising.
1    29
1    30
1    31					 ;I would like to acknowledge Sven Schreiber:
1    32					 ;				   W32Main.inc
1    33					 ;			   Win32 Main Header File V1.00
1    34					 ;		 03-14-1996 Sven B. Schreiber sbs@psbs.franken.de
1    35					 ;			  This is Public Domain	Software
1    36					 ;His file W32MAIN.INC is part of his WALK32 Windows 95	assembly language
1    37					 ;development tools, all public	domain.	 I have	incorporated much of
1    38					 ;W32MAIN.INC into this	file.
1    39
1    40					 ;I would like to acknowledge Wayne Radburn.
1    41					 ;Wayne	has a public domain example assembly language program for Windows 95,
1    42					 ;included on the Companion Disk as SKELETON.ZIP.  It is for MASM 6.11.
1    43					 ;I have "borrowed" from his file WINDOWSA.INC,	which has the API
1    44					 ;prototypes. I	have modified the prototypes to	suit TASM 5.0.
1    45
1    46
1    47
1    48					 ;------------------------------------------------------------------------------
1    49					 ;
1    50		  = ACHAR		 CHAR				 textequ <ACHAR>	 ;ansi char type
1    51		  =0001			 CHAR_				 equ	 1		 ;ansi char size
1    52					 ;
1    53					 ;
1    54					 ;------------------------------------------------------------------------------
1    55
1    56
1    57					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 2
JANE.ASM



1    58					 ;	 BASIC TYPES
1    59					 ;........................................................................
1    60					 ACHAR				 typedef BYTE		 ;ansi character
1    61					 ATOM				 typedef DWORD		 ;string atom
1    62					 BOOL				 typedef DWORD		 ;boolean variable
1    63					 COLORREF			 typedef DWORD		 ;rgb color
1    64					 DWORDLONG			 typedef QWORD		 ;long double word
1    65					 GLOBALHANDLE			 typedef DWORD		 ;global handle
1    66					 HACCEL				 typedef DWORD		 ;accelerator handle
1    67					 HANDLE				 typedef DWORD		 ;unspecified handle
1    68					 HBITMAP			 typedef DWORD		 ;bitmap handle
1    69					 HBRUSH				 typedef DWORD		 ;brush	handle
1    70					 HCOLORSPACE			 typedef DWORD		 ;color	space handle
1    71					 HCURSOR			 typedef DWORD		 ;cursor handle
1    72					 HDC				 typedef DWORD		 ;device context handle
1    73					 HDWP				 typedef DWORD		 ;defer	win pos	handle
1    74					 HENHMETAFILE			 typedef DWORD		 ;enh. metafile	handle
1    75					 HFILE				 typedef DWORD		 ;file handle
1    76					 HFONT				 typedef DWORD		 ;font handle
1    77					 HGLOBAL			 typedef DWORD		 ;global handle
1    78					 HHOOK				 typedef DWORD		 ;hook handle
1    79					 HICON				 typedef DWORD		 ;icon handle
1    80					 HINSTANCE			 typedef DWORD		 ;instance handle
1    81					 HINTERNET			 typedef DWORD		 ;internet handle
1    82					 HLOCAL				 typedef DWORD		 ;local	handle
1    83					 HMENU				 typedef DWORD		 ;menu handle
1    84					 HMETAFILE			 typedef DWORD		 ;metafile handle
1    85					 HPALETTE			 typedef DWORD		 ;palette handle
1    86					 HPEN				 typedef DWORD		 ;pen handle
1    87					 HRGN				 typedef DWORD		 ;region handle
1    88					 HRSRC				 typedef DWORD		 ;resource handle
1    89					 HSTR				 typedef DWORD		 ;string handle
1    90					 HTASK				 typedef DWORD		 ;task handle
1    91					 HTREEITEM			 typedef DWORD		 ;tree view item handle
1    92					 HWND				 typedef DWORD		 ;window handle
1    93					 INTEGER			 typedef DWORD		 ;standard integer
1    94					 LOCALHANDLE			 typedef DWORD		 ;local	handle
1    95					 LONG				 typedef DWORD		 ;long integer
1    96					 LONGINT			 typedef DWORD		 ;long integer
1    97					 LPARAM				 typedef DWORD		 ;long parameter
1    98					 LPBOOL				 typedef DWORD		 ;long ptr to boolean
1    99					 LPBYTE				 typedef DWORD		 ;long ptr to byte
1   100					 LPCSTR				 typedef DWORD		 ;long ptr to string
1   101					 LPCTSTR			 typedef DWORD		 ;long ptr to string
1   102					 LPCVOID			 typedef DWORD		 ;long ptr to buffer
1   103					 LPDWORD			 typedef DWORD		 ;long ptr to dword
1   104					 LPFN				 typedef DWORD		 ;long ptr to function
1   105					 LPINT				 typedef DWORD		 ;long ptr to integer
1   106					 LPLONG				 typedef DWORD		 ;long ptr to long int
1   107					 LPSTR				 typedef DWORD		 ;long ptr to string
1   108					 LPTSTR				 typedef DWORD		 ;long ptr to string
1   109					 LPVOID				 typedef DWORD		 ;long ptr to buffer
1   110					 LPWORD				 typedef DWORD		 ;long ptr to word
1   111					 LRESULT			 typedef DWORD		 ;long result
1   112					 POINTER			 typedef DWORD		 ;pointer to anything
1   113					 PVOID				 typedef DWORD		 ;pointer to buffer
1   114					 SHORTINT			 typedef WORD		 ;short	integer
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 3
JANE.ASM



1   115					 UINT				 typedef DWORD		 ;unsigned integer
1   116					 WCHAR				 typedef WORD		 ;unicode character
1   117					 WNDPROC			 typedef DWORD		 ;window procedure
1   118					 WPARAM				 typedef DWORD		 ;word parameter
1   119					 ;
1   120					 ;
1   121					 ;
1   122		  =0000			 NULL				 equ	 0		 ;null
1   123		  =0000			 FALSE				 equ	 0		 ;boolean false
1   124		  =0001			 TRUE				 equ	 1		 ;boolean true
1   125					 ;
1   126					 ;------------------------------------------------------------------------------
1   127					 ;
1   128		  =0080			 BUTTON				 equ	 0080h		 ;button class
1   129		  =0081			 EDIT				 equ	 0081h		 ;edit class
1   130		  =0082			 STATIC				 equ	 0082h		 ;static class
1   131		  =0083			 LISTBOX			 equ	 0083h		 ;list box class
1   132		  =0084			 SCROLLBAR			 equ	 0084h		 ;scroll bar class
1   133		  =0085			 COMBOBOX			 equ	 0085h		 ;combo	box class
1   134					 ;
1   135					 ;------------------------------------------------------------------------------
1   136					 ;
1   137		  =0104			 MAX_PATH			 equ	 260		 ;maximum path length
1   138		  =0080			 OFS_MAXPATHNAME		 equ	 128		 ;max OF] path len
1   139					 ;
1   140					 ;------------------------------------------------------------------------------
1   141					 ;
1   142		  =FFFFFFFF		 INVALID_HANDLE_VALUE		 equ	 0FFFFFFFFh	 ;invalid handle
1   143		  =FFFFFFFF		 INVALID_FILE_SIZE		 equ	 0FFFFFFFFh	 ;invalid file size
1   144		  =FFFFFFFF		 INVALID_FILE_POINTER		 equ	 0FFFFFFFFh	 ;invalid file pointer
1   145					 ;
1   146					 ;==============================================================================
1   147					 ;
1   148					 ;	 WIN32 CONSTANTS
1   149					 ;
1   150					 ;==============================================================================
1   151					 ;
1   152					 ; ========================
1   153					 ; bitmap compression types
1   154					 ; ========================
1   155					 ;
1   156		  =0000			 BI_RGB				 equ	 0
1   157		  =0001			 BI_RLE8			 equ	 1
1   158		  =0002			 BI_RLE4			 equ	 2
1   159		  =0003			 BI_BITFIELDS			 equ	 3
1   160					 ;
1   161					 ;------------------------------------------------------------------------------
1   162					 ;
1   163					 ; =======================
1   164					 ; button control messages
1   165					 ; =======================
1   166					 ;
1   167		  =00F0			 BM_GETCHECK			 equ	 00F0h
1   168		  =00F1			 BM_SETCHECK			 equ	 00F1h
1   169		  =00F2			 BM_GETSTATE			 equ	 00F2h
1   170		  =00F3			 BM_SETSTATE			 equ	 00F3h
1   171		  =00F4			 BM_SETSTYLE			 equ	 00F4h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 4
JANE.ASM



1   172		  =00F5			 BM_CLICK			 equ	 00F5h
1   173		  =00F6			 BM_GETIMAGE			 equ	 00F6h
1   174		  =00F7			 BM_SETIMAGE			 equ	 00F7h
1   175					 ;
1   176					 ;------------------------------------------------------------------------------
1   177					 ;
1   178					 ; ============================
1   179					 ; button control notifications
1   180					 ; ============================
1   181					 ;
1   182		  =0000			 BN_CLICKED			 equ	 0000h
1   183		  =0001			 BN_PAINT			 equ	 0001h
1   184		  =0002			 BN_HILITE			 equ	 0002h
1   185		  =0003			 BN_UNHILITE			 equ	 0003h
1   186		  =0004			 BN_DISABLE			 equ	 0004h
1   187		  =0005			 BN_DOUBLECLICKED		 equ	 0005h
1   188		  =0006			 BN_SETFOCUS			 equ	 0006h
1   189		  =0007			 BN_KILLFOCUS			 equ	 0007h
1   190					 ;
1   191					 BN_PUSHED			 equ	 BN_HILITE
1   192					 BN_UNPUSHED			 equ	 BN_UNHILITE
1   193					 BN_DBLCLK			 equ	 BN_DOUBLECLICKED
1   194					 ;
1   195					 ;------------------------------------------------------------------------------
1   196					 ;
1   197					 ; =====================
1   198					 ; button control styles
1   199					 ; =====================
1   200					 ;
1   201		  =0000			 BS_PUSHBUTTON			 equ	 0000h
1   202		  =0001			 BS_DEFPUSHBUTTON		 equ	 0001h
1   203		  =0002			 BS_CHECKBOX			 equ	 0002h
1   204		  =0003			 BS_AUTOCHECKBOX		 equ	 0003h
1   205		  =0004			 BS_RADIOBUTTON			 equ	 0004h
1   206		  =0005			 BS_3STATE			 equ	 0005h
1   207		  =0006			 BS_AUTO3STATE			 equ	 0006h
1   208		  =0007			 BS_GROUPBOX			 equ	 0007h
1   209		  =0008			 BS_USERBUTTON			 equ	 0008h
1   210		  =0009			 BS_AUTORADIOBUTTON		 equ	 0009h
1   211		  =000B			 BS_OWNERDRAW			 equ	 000Bh
1   212		  =0020			 BS_LEFTTEXT			 equ	 0020h
1   213		  =0000			 BS_TEXT			 equ	 0000h
1   214		  =0040			 BS_ICON			 equ	 0040h
1   215		  =0080			 BS_BITMAP			 equ	 0080h
1   216		  =0100			 BS_LEFT			 equ	 0100h
1   217		  =0200			 BS_RIGHT			 equ	 0200h
1   218		  =0300			 BS_CENTER			 equ	 0300h
1   219		  =0400			 BS_TOP				 equ	 0400h
1   220		  =0800			 BS_BOTTOM			 equ	 0800h
1   221		  =0C00			 BS_VCENTER			 equ	 0C00h
1   222		  =1000			 BS_PUSHLIKE			 equ	 1000h
1   223		  =2000			 BS_MULTILINE			 equ	 2000h
1   224		  =4000			 BS_NOTIFY			 equ	 4000h
1   225		  =8000			 BS_FLAT			 equ	 8000h
1   226					 ;
1   227					 BS_RIGHTBUTTON			 equ	 BS_LEFTTEXT
1   228					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 5
JANE.ASM



1   229					 ;------------------------------------------------------------------------------
1   230					 ;
1   231					 ; ==================
1   232					 ; combo box messages
1   233					 ; ==================
1   234					 ;
1   235		  =0140			 CB_GETEDITSEL			 equ	 0140h
1   236		  =0141			 CB_LIMITTEXT			 equ	 0141h
1   237		  =0142			 CB_SETEDITSEL			 equ	 0142h
1   238		  =0143			 CB_ADDSTRING			 equ	 0143h
1   239		  =0144			 CB_DELETESTRING		 equ	 0144h
1   240		  =0145			 CB_DIR				 equ	 0145h
1   241		  =0146			 CB_GETCOUNT			 equ	 0146h
1   242		  =0147			 CB_GETCURSEL			 equ	 0147h
1   243		  =0148			 CB_GETLBTEXT			 equ	 0148h
1   244		  =0149			 CB_GETLBTEXTLEN		 equ	 0149h
1   245		  =014A			 CB_INSERTSTRING		 equ	 014Ah
1   246		  =014B			 CB_RESETCONTENT		 equ	 014Bh
1   247		  =014C			 CB_FINDSTRING			 equ	 014Ch
1   248		  =014D			 CB_SELECTSTRING		 equ	 014Dh
1   249		  =014E			 CB_SETCURSEL			 equ	 014Eh
1   250		  =014F			 CB_SHOWDROPDOWN		 equ	 014Fh
1   251		  =0150			 CB_GETITEMDATA			 equ	 0150h
1   252		  =0151			 CB_SETITEMDATA			 equ	 0151h
1   253		  =0152			 CB_GETDROPPEDCONTROLRECT	 equ	 0152h
1   254		  =0153			 CB_SETITEMHEIGHT		 equ	 0153h
1   255		  =0154			 CB_GETITEMHEIGHT		 equ	 0154h
1   256		  =0155			 CB_SETEXTENDEDUI		 equ	 0155h
1   257		  =0156			 CB_GETEXTENDEDUI		 equ	 0156h
1   258		  =0157			 CB_GETDROPPEDSTATE		 equ	 0157h
1   259		  =0158			 CB_FINDSTRINGEXACT		 equ	 0158h
1   260		  =0159			 CB_SETLOCALE			 equ	 0159h
1   261		  =015A			 CB_GETLOCALE			 equ	 015Ah
1   262		  =015B			 CB_GETTOPINDEX			 equ	 015Bh
1   263		  =015C			 CB_SETTOPINDEX			 equ	 015Ch
1   264		  =015D			 CB_GETHORIZONTALEXTENT		 equ	 015Dh
1   265		  =015E			 CB_SETHORIZONTALEXTENT		 equ	 015Eh
1   266		  =015F			 CB_GETDROPPEDWIDTH		 equ	 015Fh
1   267		  =0160			 CB_SETDROPPEDWIDTH		 equ	 0160h
1   268		  =0161			 CB_INITSTORAGE			 equ	 0161h
1   269		  =0162			 CB_MSGMAX			 equ	 0162h
1   270					 ;
1   271					 ;------------------------------------------------------------------------------
1   272					 ;
1   273					 ; =======================
1   274					 ; combo box return values
1   275					 ; =======================
1   276					 ;
1   277		  =0000			 CB_OKAY			 equ	  0
1   278		  =-0001		 CB_ERR				 equ	 -1
1   279		  =-0002		 CB_ERRSPACE			 equ	 -2
1   280					 ;
1   281					 ;------------------------------------------------------------------------------
1   282					 ;
1   283					 ; ======================
1   284					 ; CreateDIBitmap() codes
1   285					 ; ======================
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 6
JANE.ASM



1   286					 ;
1   287		  =0004			 CBM_INIT			 equ	 4
1   288					 ;
1   289					 ;------------------------------------------------------------------------------
1   290					 ;
1   291					 ; ============================
1   292					 ; combo box notification codes
1   293					 ; ============================
1   294					 ;
1   295		  =-0001		 CBN_ERRSPACE			 equ	 -1
1   296		  =0001			 CBN_SELCHANGE			 equ	  1
1   297		  =0002			 CBN_DBLCLK			 equ	  2
1   298		  =0003			 CBN_SETFOCUS			 equ	  3
1   299		  =0004			 CBN_KILLFOCUS			 equ	  4
1   300		  =0005			 CBN_EDITCHANGE			 equ	  5
1   301		  =0006			 CBN_EDITUPDATE			 equ	  6
1   302		  =0007			 CBN_DROPDOWN			 equ	  7
1   303		  =0008			 CBN_CLOSEUP			 equ	  8
1   304		  =0009			 CBN_SELENDOK			 equ	  9
1   305		  =000A			 CBN_SELENDCANCEL		 equ	 10
1   306					 ;
1   307					 ;------------------------------------------------------------------------------
1   308					 ;
1   309					 ; ================
1   310					 ; combo box styles
1   311					 ; ================
1   312					 ;
1   313		  =0001			 CBS_SIMPLE			 equ	 0001h
1   314		  =0002			 CBS_DROPDOWN			 equ	 0002h
1   315		  =0003			 CBS_DROPDOWNLIST		 equ	 0003h
1   316		  =0010			 CBS_OWNERDRAWFIXED		 equ	 0010h
1   317		  =0020			 CBS_OWNERDRAWVARIABLE		 equ	 0020h
1   318		  =0040			 CBS_AUTOHSCROLL		 equ	 0040h
1   319		  =0080			 CBS_OEMCONVERT			 equ	 0080h
1   320		  =0100			 CBS_SORT			 equ	 0100h
1   321		  =0200			 CBS_HASSTRINGS			 equ	 0200h
1   322		  =0400			 CBS_NOINTEGRALHEIGHT		 equ	 0400h
1   323		  =0800			 CBS_DISABLENOSCROLL		 equ	 0800h
1   324		  =2000			 CBS_UPPERCASE			 equ	 2000h
1   325		  =4000			 CBS_LOWERCASE			 equ	 4000h
1   326					 ;
1   327					 ;------------------------------------------------------------------------------
1   328					 ;
1   329					 ; =================
1   330					 ; clipboard formats
1   331					 ; =================
1   332					 ;
1   333		  =0001			 CF_TEXT			 equ	 0001h
1   334		  =0002			 CF_BITMAP			 equ	 0002h
1   335		  =0003			 CF_METAFILEPICT		 equ	 0003h
1   336		  =0004			 CF_SYLK			 equ	 0004h
1   337		  =0005			 CF_DIF				 equ	 0005h
1   338		  =0006			 CF_TIFF			 equ	 0006h
1   339		  =0007			 CF_OEMTEXT			 equ	 0007h
1   340		  =0008			 CF_DIB				 equ	 0008h
1   341		  =0009			 CF_PALETTE			 equ	 0009h
1   342		  =000A			 CF_PENDATA			 equ	 000Ah
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 7
JANE.ASM



1   343		  =000B			 CF_RIFF			 equ	 000Bh
1   344		  =000C			 CF_WAVE			 equ	 000Ch
1   345		  =000D			 CF_UNICODETEXT			 equ	 000Dh
1   346		  =000E			 CF_ENHMETAFILE			 equ	 000Eh
1   347		  =000F			 CF_HDROP			 equ	 000Fh
1   348		  =0010			 CF_LOCALE			 equ	 0010h
1   349		  =0011			 CF_MAX				 equ	 0011h
1   350					 ;
1   351		  =0080			 CF_OWNERDISPLAY		 equ	 0080h
1   352		  =0081			 CF_DSPTEXT			 equ	 0081h
1   353		  =0082			 CF_DSPBITMAP			 equ	 0082h
1   354		  =0083			 CF_DSPMETAFILEPICT		 equ	 0083h
1   355		  =008E			 CF_DSPENHMETAFILE		 equ	 008Eh
1   356					 ;
1   357		  =0200			 CF_PRIVATEFIRST		 equ	 0200h
1   358		  =02FF			 CF_PRIVATELAST			 equ	 02FFh
1   359					 ;
1   360		  =0300			 CF_GDIOBJFIRST			 equ	 0300h
1   361		  =03FF			 CF_GDIOBJLAST			 equ	 03FFh
1   362					 ;
1   363					 ;------------------------------------------------------------------------------
1   364					 ;
1   365					 ; ===========
1   366					 ; color types
1   367					 ; ===========
1   368					 ;
1   369		  =0000			 COLOR_SCROLLBAR		 equ	  0
1   370		  =0001			 COLOR_BACKGROUND		 equ	  1
1   371		  =0002			 COLOR_ACTIVECAPTION		 equ	  2
1   372		  =0003			 COLOR_INACTIVECAPTION		 equ	  3
1   373		  =0004			 COLOR_MENU			 equ	  4
1   374		  =0005			 COLOR_WINDOW			 equ	  5
1   375		  =0006			 COLOR_WINDOWFRAME		 equ	  6
1   376		  =0007			 COLOR_MENUTEXT			 equ	  7
1   377		  =0008			 COLOR_WINDOWTEXT		 equ	  8
1   378		  =0009			 COLOR_CAPTIONTEXT		 equ	  9
1   379		  =000A			 COLOR_ACTIVEBORDER		 equ	 10
1   380		  =000B			 COLOR_INACTIVEBORDER		 equ	 11
1   381		  =000C			 COLOR_APPWORKSPACE		 equ	 12
1   382		  =000D			 COLOR_HIGHLIGHT		 equ	 13
1   383		  =000E			 COLOR_HIGHLIGHTTEXT		 equ	 14
1   384		  =000F			 COLOR_BTNFACE			 equ	 15
1   385		  =0010			 COLOR_BTNSHADOW		 equ	 16
1   386		  =0011			 COLOR_GRAYTEXT			 equ	 17
1   387		  =0012			 COLOR_BTNTEXT			 equ	 18
1   388		  =0013			 COLOR_INACTIVECAPTIONTEXT	 equ	 19
1   389		  =0014			 COLOR_BTNHIGHLIGHT		 equ	 20
1   390		  =0015			 COLOR_3DDKSHADOW		 equ	 21
1   391		  =0016			 COLOR_3DLIGHT			 equ	 22
1   392		  =0017			 COLOR_INFOTEXT			 equ	 23
1   393		  =0018			 COLOR_INFOBK			 equ	 24
1   394					 ;
1   395					 COLOR_DESKTOP			 equ	 COLOR_BACKGROUND
1   396					 COLOR_3DFACE			 equ	 COLOR_BTNFACE
1   397					 COLOR_3DSHADOW			 equ	 COLOR_BTNSHADOW
1   398					 COLOR_3DHIGHLIGHT		 equ	 COLOR_BTNHIGHLIGHT
1   399					 COLOR_3DHILIGHT		 equ	 COLOR_BTNHIGHLIGHT
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 8
JANE.ASM



1   400					 COLOR_BTNHILIGHT		 equ	 COLOR_BTNHIGHLIGHT
1   401					 ;
1   402					 ;------------------------------------------------------------------------------
1   403					 ;
1   404					 ; ===================
1   405					 ; network connections
1   406					 ; ===================
1   407					 ;
1   408		  =0001			 CONNECT_UPDATE_PROFILE		 equ	 00000001h
1   409		  =0002			 CONNECT_UPDATE_RECENT		 equ	 00000002h
1   410		  =0004			 CONNECT_TEMPORARY		 equ	 00000004h
1   411		  =0008			 CONNECT_INTERACTIVE		 equ	 00000008h
1   412		  =0010			 CONNECT_PROMPT			 equ	 00000010h
1   413		  =0020			 CONNECT_NEED_DRIVE		 equ	 00000020h
1   414		  =0040			 CONNECT_REFCOUNT		 equ	 00000040h
1   415		  =0080			 CONNECT_REDIRECT		 equ	 00000080h
1   416		  =0100			 CONNECT_LOCALDRIVE		 equ	 00000100h
1   417		  =0200			 CONNECT_CURRENT_MEDIA		 equ	 00000200h
1   418					 ;
1   419		  =0001			 NETPROPERTY_PERSISTENT		 equ	 1
1   420					 ;
1   421					 ;------------------------------------------------------------------------------
1   422					 ;
1   423					 ; ====================
1   424					 ; thread context flags
1   425					 ; ====================
1   426					 ;
1   427		  =00010000		 CONTEXT_i386			 equ	 00010000h
1   428		  =00010000		 CONTEXT_i486			 equ	 00010000h
1   429					 ;
1   430		  =00010001		 CONTEXT_CONTROL		 equ	 CONTEXT_i386+00000001h
1   431		  =00010002		 CONTEXT_INTEGER		 equ	 CONTEXT_i386+00000002h
1   432		  =00010004		 CONTEXT_SEGMENTS		 equ	 CONTEXT_i386+00000004h
1   433		  =00010008		 CONTEXT_FLOATING_POINT		 equ	 CONTEXT_i386+00000008h
1   434		  =00010010		 CONTEXT_DEBUG_REGISTERS	 equ	 CONTEXT_i386+00000010h
1   435					 ;
1   436		  =00030007		 CONTEXT_FULL		 equ CONTEXT_CONTROL+CONTEXT_INTEGER+CONTEXT_SEGMENTS
1   437					 ;
1   438		  =0050			 SIZE_OF_80387_REGISTERS	 equ	 80
1   439					 ;
1   440					 ;------------------------------------------------------------------------------
1   441					 ;
1   442					 ; ==========
1   443					 ; code	pages
1   444					 ; ==========
1   445					 ;
1   446		  =0000			 CP_ACP				 equ	 0
1   447		  =0001			 CP_OEMCP			 equ	 1
1   448		  =0002			 CP_MACCP			 equ	 2
1   449					 ;
1   450					 ;------------------------------------------------------------------------------
1   451					 ;
1   452					 ; ============
1   453					 ; class styles
1   454					 ; ============
1   455					 ;
1   456		  =0001			 CS_VREDRAW			 equ	 00000001h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 9
JANE.ASM



1   457		  =0002			 CS_HREDRAW			 equ	 00000002h
1   458		  =0004			 CS_KEYCVTWINDOW		 equ	 00000004h
1   459		  =0008			 CS_DBLCLKS			 equ	 00000008h
1   460		  =0020			 CS_OWNDC			 equ	 00000020h
1   461		  =0040			 CS_CLASSDC			 equ	 00000040h
1   462		  =0080			 CS_PARENTDC			 equ	 00000080h
1   463		  =0100			 CS_NOKEYCVT			 equ	 00000100h
1   464		  =0200			 CS_NOCLOSE			 equ	 00000200h
1   465		  =0800			 CS_SAVEBITS			 equ	 00000800h
1   466		  =1000			 CS_BYTEALIGNCLIENT		 equ	 00001000h
1   467		  =2000			 CS_BYTEALIGNWINDOW		 equ	 00002000h
1   468		  =4000			 CS_GLOBALCLASS			 equ	 00004000h
1   469		  =00010000		 CS_IME				 equ	 00010000h
1   470					 ;
1   471					 ;------------------------------------------------------------------------------
1   472					 ;
1   473					 ; ===================
1   474					 ; control color types
1   475					 ; ===================
1   476					 ;
1   477		  =0000			 CTLCOLOR_MSGBOX		 equ	 0
1   478		  =0001			 CTLCOLOR_EDIT			 equ	 1
1   479		  =0002			 CTLCOLOR_LISTBOX		 equ	 2
1   480		  =0003			 CTLCOLOR_BTN			 equ	 3
1   481		  =0004			 CTLCOLOR_DLG			 equ	 4
1   482		  =0005			 CTLCOLOR_SCROLLBAR		 equ	 5
1   483		  =0006			 CTLCOLOR_STATIC		 equ	 6
1   484		  =0007			 CTLCOLOR_MAX			 equ	 7
1   485					 ;
1   486					 ;------------------------------------------------------------------------------
1   487					 ;
1   488					 ; =======================
1   489					 ; CreateWindow() commands
1   490					 ; =======================
1   491					 ;
1   492		  =80000000		 CW_USEDEFAULT			 equ	 80000000h
1   493					 ;
1   494					 ;------------------------------------------------------------------------------
1   495					 ;
1   496					 ; ===================
1   497					 ; device capabilities
1   498					 ; ===================
1   499					 ;
1   500		  =0001			 DC_FIELDS			 equ	  1
1   501		  =0002			 DC_PAPERS			 equ	  2
1   502		  =0003			 DC_PAPERSIZE			 equ	  3
1   503		  =0004			 DC_MINEXTENT			 equ	  4
1   504		  =0005			 DC_MAXEXTENT			 equ	  5
1   505		  =0006			 DC_BINS			 equ	  6
1   506		  =0007			 DC_DUPLEX			 equ	  7
1   507		  =0008			 DC_SIZE			 equ	  8
1   508		  =0009			 DC_EXTRA			 equ	  9
1   509		  =000A			 DC_VERSION			 equ	 10
1   510		  =000B			 DC_DRIVER			 equ	 11
1   511		  =000C			 DC_BINNAMES			 equ	 12
1   512		  =000D			 DC_ENUMRESOLUTIONS		 equ	 13
1   513		  =000E			 DC_FILEDEPENDENCIES		 equ	 14
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 10
JANE.ASM



1   514		  =000F			 DC_TRUETYPE			 equ	 15
1   515		  =0010			 DC_PAPERNAMES			 equ	 16
1   516		  =0011			 DC_ORIENTATION			 equ	 17
1   517		  =0012			 DC_COPIES			 equ	 18
1   518					 ;
1   519					 ;------------------------------------------------------------------------------
1   520					 ;
1   521					 ; ====================
1   522					 ; dib color table id's
1   523					 ; ====================
1   524					 ;
1   525		  =0000			 DIB_RGB_COLORS			 equ	 0
1   526		  =0001			 DIB_PAL_COLORS			 equ	 1
1   527					 ;
1   528					 ;------------------------------------------------------------------------------
1   529					 ;
1   530					 ; ====================
1   531					 ; DLL LibMain() events
1   532					 ; ====================
1   533					 ;
1   534		  =0000			 DLL_PROCESS_DETACH		 equ	 0
1   535		  =0001			 DLL_PROCESS_ATTACH		 equ	 1
1   536		  =0002			 DLL_THREAD_ATTACH		 equ	 2
1   537		  =0003			 DLL_THREAD_DETACH		 equ	 3
1   538					 ;
1   539					 ;------------------------------------------------------------------------------
1   540					 ;
1   541					 ; ======================
1   542					 ; device mode selections
1   543					 ; ======================
1   544					 ;
1   545		  =0001			 DM_UPDATE			 equ	 1
1   546		  =0002			 DM_COPY			 equ	 2
1   547		  =0004			 DM_PROMPT			 equ	 4
1   548		  =0008			 DM_MODIFY			 equ	 8
1   549					 ;
1   550					 DM_IN_BUFFER			 equ	 DM_MODIFY
1   551					 DM_IN_PROMPT			 equ	 DM_PROMPT
1   552					 DM_OUT_BUFFER			 equ	 DM_COPY
1   553					 DM_OUT_DEFAULT			 equ	 DM_UPDATE
1   554					 ;
1   555					 ;------------------------------------------------------------------------------
1   556					 ;
1   557					 ; =============
1   558					 ; dialog styles
1   559					 ; =============
1   560					 ;
1   561		  =0001			 DS_ABSALIGN			 equ	 0001h
1   562		  =0002			 DS_SYSMODAL			 equ	 0002h
1   563		  =0004			 DS_3DLOOK			 equ	 0004h
1   564		  =0008			 DS_FIXEDSYS			 equ	 0008h
1   565		  =0010			 DS_NOFAILCREATE		 equ	 0010h
1   566		  =0020			 DS_LOCALEDIT			 equ	 0020h	 ;edit items get local storage
1   567		  =0040			 DS_SETFONT			 equ	 0040h	 ;user specified font
1   568		  =0080			 DS_MODALFRAME			 equ	 0080h	 ;combinable with WS_CAPTION
1   569		  =0100			 DS_NOIDLEMSG			 equ	 0100h	 ;don't	send WM_ENTERIDLE
1   570		  =0200			 DS_SETFOREGROUND		 equ	 0200h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 11
JANE.ASM



1   571		  =0400			 DS_CONTROL			 equ	 0400h
1   572		  =0800			 DS_CENTER			 equ	 0800h
1   573		  =1000			 DS_CENTERMOUSE			 equ	 1000h
1   574		  =2000			 DS_CONTEXTHELP			 equ	 2000h
1   575					 ;
1   576		  =0081			 DS_MODAL			 equ	 DS_ABSALIGN+DS_MODALFRAME
1   577					 DS_MODELESS			 equ	 DS_ABSALIGN
1   578					 ;
1   579					 ;------------------------------------------------------------------------------
1   580					 ;
1   581					 ; =======================
1   582					 ; DrawText() format flags
1   583					 ; =======================
1   584					 ;
1   585		  =0000			 DT_TOP				 equ	 00000000h
1   586		  =0000			 DT_LEFT			 equ	 00000000h
1   587		  =0001			 DT_CENTER			 equ	 00000001h
1   588		  =0002			 DT_RIGHT			 equ	 00000002h
1   589		  =0004			 DT_VCENTER			 equ	 00000004h
1   590		  =0008			 DT_BOTTOM			 equ	 00000008h
1   591		  =0010			 DT_WORDBREAK			 equ	 00000010h
1   592		  =0020			 DT_SINGLELINE			 equ	 00000020h
1   593		  =0040			 DT_EXPANDTABS			 equ	 00000040h
1   594		  =0080			 DT_TABSTOP			 equ	 00000080h
1   595		  =0100			 DT_NOCLIP			 equ	 00000100h
1   596		  =0200			 DT_EXTERNALLEADING		 equ	 00000200h
1   597		  =0400			 DT_CALCRECT			 equ	 00000400h
1   598		  =0800			 DT_NOPREFIX			 equ	 00000800h
1   599		  =1000			 DT_INTERNAL			 equ	 00001000h
1   600		  =2000			 DT_EDITCONTROL			 equ	 00002000h
1   601		  =4000			 DT_PATH_ELLIPSIS		 equ	 00004000h
1   602		  =8000			 DT_END_ELLIPSIS		 equ	 00008000h
1   603		  =00010000		 DT_MODIFYSTRING		 equ	 00010000h
1   604		  =00020000		 DT_RTLREADING			 equ	 00020000h
1   605		  =00040000		 DT_WORD_ELLIPSIS		 equ	 00040000h
1   606					 ;
1   607					 ;------------------------------------------------------------------------------
1   608					 ;
1   609					 ; =====================
1   610					 ; edit	control	messages
1   611					 ; =====================
1   612					 ;
1   613		  =00B0			 EM_GETSEL			 equ	 00B0h
1   614		  =00B1			 EM_SETSEL			 equ	 00B1h
1   615		  =00B2			 EM_GETRECT			 equ	 00B2h
1   616		  =00B3			 EM_SETRECT			 equ	 00B3h
1   617		  =00B4			 EM_SETRECTNP			 equ	 00B4h
1   618		  =00B5			 EM_SCROLL			 equ	 00B5h
1   619		  =00B6			 EM_LINESCROLL			 equ	 00B6h
1   620		  =00B7			 EM_SCROLLCARET			 equ	 00B7h
1   621		  =00B8			 EM_GETMODIFY			 equ	 00B8h
1   622		  =00B9			 EM_SETMODIFY			 equ	 00B9h
1   623		  =00BA			 EM_GETLINECOUNT		 equ	 00BAh
1   624		  =00BB			 EM_LINEINDEX			 equ	 00BBh
1   625		  =00BC			 EM_SETHANDLE			 equ	 00BCh
1   626		  =00BD			 EM_GETHANDLE			 equ	 00BDh
1   627		  =00BE			 EM_GETTHUMB			 equ	 00BEh
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 12
JANE.ASM



1   628		  =00C1			 EM_LINELENGTH			 equ	 00C1h
1   629		  =00C2			 EM_REPLACESEL			 equ	 00C2h
1   630		  =00C4			 EM_GETLINE			 equ	 00C4h
1   631		  =00C5			 EM_LIMITTEXT			 equ	 00C5h
1   632		  =00C6			 EM_CANUNDO			 equ	 00C6h
1   633		  =00C7			 EM_UNDO			 equ	 00C7h
1   634		  =00C8			 EM_FMTLINES			 equ	 00C8h
1   635		  =00C9			 EM_LINEFROMCHAR		 equ	 00C9h
1   636		  =00CB			 EM_SETTABSTOPS			 equ	 00CBh
1   637		  =00CC			 EM_SETPASSWORDCHAR		 equ	 00CCh
1   638		  =00CD			 EM_EMPTYUNDOBUFFER		 equ	 00CDh
1   639		  =00CE			 EM_GETFIRSTVISIBLELINE		 equ	 00CEh
1   640		  =00CF			 EM_SETREADONLY			 equ	 00CFh
1   641		  =00D0			 EM_SETWORDBREAKPROC		 equ	 00D0h
1   642		  =00D1			 EM_GETWORDBREAKPROC		 equ	 00D1h
1   643		  =00D2			 EM_GETPASSWORDCHAR		 equ	 00D2h
1   644		  =00D3			 EM_SETMARGINS			 equ	 00D3h
1   645		  =00D4			 EM_GETMARGINS			 equ	 00D4h
1   646		  =00D5			 EM_GETLIMITTEXT		 equ	 00D5h
1   647		  =00D6			 EM_POSFROMCHAR			 equ	 00D6h
1   648		  =00D7			 EM_CHARFROMPOS			 equ	 00D7h
1   649					 ;
1   650					 EM_SETLIMITTEXT		 equ	 EM_LIMITTEXT
1   651					 ;
1   652					 ;------------------------------------------------------------------------------
1   653					 ;
1   654					 ; ==========================
1   655					 ; edit	control	notifications
1   656					 ; ==========================
1   657					 ;
1   658		  =0100			 EN_SETFOCUS			 equ	 0100h
1   659		  =0200			 EN_KILLFOCUS			 equ	 0200h
1   660		  =0300			 EN_CHANGE			 equ	 0300h
1   661		  =0400			 EN_UPDATE			 equ	 0400h
1   662		  =0500			 EN_ERRSPACE			 equ	 0500h
1   663		  =0501			 EN_MAXTEXT			 equ	 0501h
1   664		  =0601			 EN_HSCROLL			 equ	 0601h
1   665		  =0602			 EN_VSCROLL			 equ	 0602h
1   666					 ;
1   667					 ;------------------------------------------------------------------------------
1   668					 ;
1   669					 ; ===========
1   670					 ; error codes
1   671					 ; ===========
1   672					 ;
1   673		  =0000			 ERROR_SUCCESS				 equ	    0
1   674		  =0000			 NO_ERROR				 equ	    0
1   675					 ;
1   676		  =0001			 ERROR_INVALID_FUNCTION			 equ	    1
1   677		  =0002			 ERROR_FILE_NOT_FOUND			 equ	    2
1   678		  =0003			 ERROR_PATH_NOT_FOUND			 equ	    3
1   679		  =0004			 ERROR_TOO_MANY_OPEN_FILES		 equ	    4
1   680		  =0005			 ERROR_ACCESS_DENIED			 equ	    5
1   681		  =0006			 ERROR_INVALID_HANDLE			 equ	    6
1   682		  =0007			 ERROR_ARENA_TRASHED			 equ	    7
1   683		  =0008			 ERROR_NOT_ENOUGH_MEMORY		 equ	    8
1   684		  =0009			 ERROR_INVALID_BLOCK			 equ	    9
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 13
JANE.ASM



1   685		  =000A			 ERROR_BAD_ENVIRONMENT			 equ	   10
1   686		  =000B			 ERROR_BAD_FORMAT			 equ	   11
1   687		  =000C			 ERROR_INVALID_ACCESS			 equ	   12
1   688		  =000D			 ERROR_INVALID_DATA			 equ	   13
1   689		  =000E			 ERROR_OUTOFMEMORY			 equ	   14
1   690		  =000F			 ERROR_INVALID_DRIVE			 equ	   15
1   691		  =0010			 ERROR_CURRENT_DIRECTORY		 equ	   16
1   692		  =0011			 ERROR_NOT_SAME_DEVICE			 equ	   17
1   693		  =0012			 ERROR_NO_MORE_FILES			 equ	   18
1   694		  =0013			 ERROR_WRITE_PROTECT			 equ	   19
1   695		  =0014			 ERROR_BAD_UNIT				 equ	   20
1   696		  =0015			 ERROR_NOT_READY			 equ	   21
1   697		  =0016			 ERROR_BAD_COMMAND			 equ	   22
1   698		  =0017			 ERROR_CRC				 equ	   23
1   699		  =0018			 ERROR_BAD_LENGTH			 equ	   24
1   700		  =0019			 ERROR_SEEK				 equ	   25
1   701		  =001A			 ERROR_NOT_DOS_DISK			 equ	   26
1   702		  =001B			 ERROR_SECTOR_NOT_FOUND			 equ	   27
1   703		  =001C			 ERROR_OUT_OF_PAPER			 equ	   28
1   704		  =001D			 ERROR_WRITE_FAULT			 equ	   29
1   705		  =001E			 ERROR_READ_FAULT			 equ	   30
1   706		  =001F			 ERROR_GEN_FAILURE			 equ	   31
1   707		  =0020			 ERROR_SHARING_VIOLATION		 equ	   32
1   708		  =0021			 ERROR_LOCK_VIOLATION			 equ	   33
1   709		  =0022			 ERROR_WRONG_DISK			 equ	   34
1   710		  =0024			 ERROR_SHARING_BUFFER_EXCEEDED		 equ	   36
1   711		  =0026			 ERROR_HANDLE_EOF			 equ	   38
1   712		  =0027			 ERROR_HANDLE_DISK_FULL			 equ	   39
1   713		  =0032			 ERROR_NOT_SUPPORTED			 equ	   50
1   714		  =0033			 ERROR_REM_NOT_LIST			 equ	   51
1   715		  =0034			 ERROR_DUP_NAME				 equ	   52
1   716		  =0035			 ERROR_BAD_NETPATH			 equ	   53
1   717		  =0036			 ERROR_NETWORK_BUSY			 equ	   54
1   718		  =0037			 ERROR_DEV_NOT_EXIST			 equ	   55
1   719		  =0038			 ERROR_TOO_MANY_CMDS			 equ	   56
1   720		  =0039			 ERROR_ADAP_HDW_ERR			 equ	   57
1   721		  =003A			 ERROR_BAD_NET_RESP			 equ	   58
1   722		  =003B			 ERROR_UNEXP_NET_ERR			 equ	   59
1   723		  =003C			 ERROR_BAD_REM_ADAP			 equ	   60
1   724		  =003D			 ERROR_PRINTQ_FULL			 equ	   61
1   725		  =003E			 ERROR_NO_SPOOL_SPACE			 equ	   62
1   726		  =003F			 ERROR_PRINT_CANCELLED			 equ	   63
1   727		  =0040			 ERROR_NETNAME_DELETED			 equ	   64
1   728		  =0041			 ERROR_NETWORK_ACCESS_DENIED		 equ	   65
1   729		  =0042			 ERROR_BAD_DEV_TYPE			 equ	   66
1   730		  =0043			 ERROR_BAD_NET_NAME			 equ	   67
1   731		  =0044			 ERROR_TOO_MANY_NAMES			 equ	   68
1   732		  =0045			 ERROR_TOO_MANY_SESS			 equ	   69
1   733		  =0046			 ERROR_SHARING_PAUSED			 equ	   70
1   734		  =0047			 ERROR_REQ_NOT_ACCEP			 equ	   71
1   735		  =0048			 ERROR_REDIR_PAUSED			 equ	   72
1   736		  =0050			 ERROR_FILE_EXISTS			 equ	   80
1   737		  =0052			 ERROR_CANNOT_MAKE			 equ	   82
1   738		  =0053			 ERROR_FAIL_I24				 equ	   83
1   739		  =0054			 ERROR_OUT_OF_STRUCTURES		 equ	   84
1   740		  =0055			 ERROR_ALREADY_ASSIGNED			 equ	   85
1   741		  =0056			 ERROR_INVALID_PASSWORD			 equ	   86
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 14
JANE.ASM



1   742		  =0057			 ERROR_INVALID_PARAMETER		 equ	   87
1   743		  =0058			 ERROR_NET_WRITE_FAULT			 equ	   88
1   744		  =0059			 ERROR_NO_PROC_SLOTS			 equ	   89
1   745		  =0064			 ERROR_TOO_MANY_SEMAPHORES		 equ	  100
1   746		  =0065			 ERROR_EXCL_SEM_ALREADY_OWNED		 equ	  101
1   747		  =0066			 ERROR_SEM_IS_SET			 equ	  102
1   748		  =0067			 ERROR_TOO_MANY_SEM_REQUESTS		 equ	  103
1   749		  =0068			 ERROR_INVALID_AT_INTERRUPT_TIME	 equ	  104
1   750		  =0069			 ERROR_SEM_OWNER_DIED			 equ	  105
1   751		  =006A			 ERROR_SEM_USER_LIMIT			 equ	  106
1   752		  =006B			 ERROR_DISK_CHANGE			 equ	  107
1   753		  =006C			 ERROR_DRIVE_LOCKED			 equ	  108
1   754		  =006D			 ERROR_BROKEN_PIPE			 equ	  109
1   755		  =006E			 ERROR_OPEN_FAILED			 equ	  110
1   756		  =006F			 ERROR_BUFFER_OVERFLOW			 equ	  111
1   757		  =0070			 ERROR_DISK_FULL			 equ	  112
1   758		  =0071			 ERROR_NO_MORE_SEARCH_HANDLES		 equ	  113
1   759		  =0072			 ERROR_INVALID_TARGET_HANDLE		 equ	  114
1   760		  =0075			 ERROR_INVALID_CATEGORY			 equ	  117
1   761		  =0076			 ERROR_INVALID_VERIFY_SWITCH		 equ	  118
1   762		  =0077			 ERROR_BAD_DRIVER_LEVEL			 equ	  119
1   763		  =0078			 ERROR_CALL_NOT_IMPLEMENTED		 equ	  120
1   764		  =0079			 ERROR_SEM_TIMEOUT			 equ	  121
1   765		  =007A			 ERROR_INSUFFICIENT_BUFFER		 equ	  122
1   766		  =007B			 ERROR_INVALID_NAME			 equ	  123
1   767		  =007C			 ERROR_INVALID_LEVEL			 equ	  124
1   768		  =007D			 ERROR_NO_VOLUME_LABEL			 equ	  125
1   769		  =007E			 ERROR_MOD_NOT_FOUND			 equ	  126
1   770		  =007F			 ERROR_PROC_NOT_FOUND			 equ	  127
1   771		  =0080			 ERROR_WAIT_NO_CHILDREN			 equ	  128
1   772		  =0081			 ERROR_CHILD_NOT_COMPLETE		 equ	  129
1   773		  =0082			 ERROR_DIRECT_ACCESS_HANDLE		 equ	  130
1   774		  =0083			 ERROR_NEGATIVE_SEEK			 equ	  131
1   775		  =0084			 ERROR_SEEK_ON_DEVICE			 equ	  132
1   776		  =0085			 ERROR_IS_JOIN_TARGET			 equ	  133
1   777		  =0086			 ERROR_IS_JOINED			 equ	  134
1   778		  =0087			 ERROR_IS_SUBSTED			 equ	  135
1   779		  =0088			 ERROR_NOT_JOINED			 equ	  136
1   780		  =0089			 ERROR_NOT_SUBSTED			 equ	  137
1   781		  =008A			 ERROR_JOIN_TO_JOIN			 equ	  138
1   782		  =008B			 ERROR_SUBST_TO_SUBST			 equ	  139
1   783		  =008C			 ERROR_JOIN_TO_SUBST			 equ	  140
1   784		  =008D			 ERROR_SUBST_TO_JOIN			 equ	  141
1   785		  =008E			 ERROR_BUSY_DRIVE			 equ	  142
1   786		  =008F			 ERROR_SAME_DRIVE			 equ	  143
1   787		  =0090			 ERROR_DIR_NOT_ROOT			 equ	  144
1   788		  =0091			 ERROR_DIR_NOT_EMPTY			 equ	  145
1   789		  =0092			 ERROR_IS_SUBST_PATH			 equ	  146
1   790		  =0093			 ERROR_IS_JOIN_PATH			 equ	  147
1   791		  =0094			 ERROR_PATH_BUSY			 equ	  148
1   792		  =0095			 ERROR_IS_SUBST_TARGET			 equ	  149
1   793		  =0096			 ERROR_SYSTEM_TRACE			 equ	  150
1   794		  =0097			 ERROR_INVALID_EVENT_COUNT		 equ	  151
1   795		  =0098			 ERROR_TOO_MANY_MUXWAITERS		 equ	  152
1   796		  =0099			 ERROR_INVALID_LIST_FORMAT		 equ	  153
1   797		  =009A			 ERROR_LABEL_TOO_LONG			 equ	  154
1   798		  =009B			 ERROR_TOO_MANY_TCBS			 equ	  155
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 15
JANE.ASM



1   799		  =009C			 ERROR_SIGNAL_REFUSED			 equ	  156
1   800		  =009D			 ERROR_DISCARDED			 equ	  157
1   801		  =009E			 ERROR_NOT_LOCKED			 equ	  158
1   802		  =009F			 ERROR_BAD_THREADID_ADDR		 equ	  159
1   803		  =00A0			 ERROR_BAD_ARGUMENTS			 equ	  160
1   804		  =00A1			 ERROR_BAD_PATHNAME			 equ	  161
1   805		  =00A2			 ERROR_SIGNAL_PENDING			 equ	  162
1   806		  =00A4			 ERROR_MAX_THRDS_REACHED		 equ	  164
1   807		  =00A7			 ERROR_LOCK_FAILED			 equ	  167
1   808		  =00AA			 ERROR_BUSY				 equ	  170
1   809		  =00AD			 ERROR_CANCEL_VIOLATION			 equ	  173
1   810		  =00AE			 ERROR_ATOMIC_LOCKS_NOT_SUPPORTED	 equ	  174
1   811		  =00B4			 ERROR_INVALID_SEGMENT_NUMBER		 equ	  180
1   812		  =00B6			 ERROR_INVALID_ORDINAL			 equ	  182
1   813		  =00B7			 ERROR_ALREADY_EXISTS			 equ	  183
1   814		  =00BA			 ERROR_INVALID_FLAG_NUMBER		 equ	  186
1   815		  =00BB			 ERROR_SEM_NOT_FOUND			 equ	  187
1   816		  =00BC			 ERROR_INVALID_STARTING_CODESEG		 equ	  188
1   817		  =00BD			 ERROR_INVALID_STACKSEG			 equ	  189
1   818		  =00BE			 ERROR_INVALID_MODULETYPE		 equ	  190
1   819		  =00BF			 ERROR_INVALID_EXE_SIGNATURE		 equ	  191
1   820		  =00C0			 ERROR_EXE_MARKED_INVALID		 equ	  192
1   821		  =00C1			 ERROR_BAD_EXE_FORMAT			 equ	  193
1   822		  =00C2			 ERROR_ITERATED_DATA_EXCEEDS_64k	 equ	  194
1   823		  =00C3			 ERROR_INVALID_MINALLOCSIZE		 equ	  195
1   824		  =00C4			 ERROR_DYNLINK_FROM_INVALID_RING	 equ	  196
1   825		  =00C5			 ERROR_IOPL_NOT_ENABLED			 equ	  197
1   826		  =00C6			 ERROR_INVALID_SEGDPL			 equ	  198
1   827		  =00C7			 ERROR_AUTODATASEG_EXCEEDS_64k		 equ	  199
1   828		  =00C8			 ERROR_RING2SEG_MUST_BE_MOVABLE		 equ	  200
1   829		  =00C9			 ERROR_RELOC_CHAIN_XEEDS_SEGLIM		 equ	  201
1   830		  =00CA			 ERROR_INFLOOP_IN_RELOC_CHAIN		 equ	  202
1   831		  =00CB			 ERROR_ENVVAR_NOT_FOUND			 equ	  203
1   832		  =00CD			 ERROR_NO_SIGNAL_SENT			 equ	  205
1   833		  =00CE			 ERROR_FILENAME_EXCED_RANGE		 equ	  206
1   834		  =00CF			 ERROR_RING2_STACK_IN_USE		 equ	  207
1   835		  =00D0			 ERROR_META_EXPANSION_TOO_LONG		 equ	  208
1   836		  =00D1			 ERROR_INVALID_SIGNAL_NUMBER		 equ	  209
1   837		  =00D2			 ERROR_THREAD_1_INACTIVE		 equ	  210
1   838		  =00D4			 ERROR_LOCKED				 equ	  212
1   839		  =00D6			 ERROR_TOO_MANY_MODULES			 equ	  214
1   840		  =00D7			 ERROR_NESTING_NOT_ALLOWED		 equ	  215
1   841		  =00E6			 ERROR_BAD_PIPE				 equ	  230
1   842		  =00E7			 ERROR_PIPE_BUSY			 equ	  231
1   843		  =00E8			 ERROR_NO_DATA				 equ	  232
1   844		  =00E9			 ERROR_PIPE_NOT_CONNECTED		 equ	  233
1   845		  =00EA			 ERROR_MORE_DATA			 equ	  234
1   846		  =00F0			 ERROR_VC_DISCONNECTED			 equ	  240
1   847		  =00FE			 ERROR_INVALID_EA_NAME			 equ	  254
1   848		  =00FF			 ERROR_EA_LIST_INCONSISTENT		 equ	  255
1   849		  =0103			 ERROR_NO_MORE_ITEMS			 equ	  259
1   850		  =010A			 ERROR_CANNOT_COPY			 equ	  266
1   851		  =010B			 ERROR_DIRECTORY			 equ	  267
1   852		  =0113			 ERROR_EAS_DIDNT_FIT			 equ	  275
1   853		  =0114			 ERROR_EA_FILE_CORRUPT			 equ	  276
1   854		  =0115			 ERROR_EA_TABLE_FULL			 equ	  277
1   855		  =0116			 ERROR_INVALID_EA_HANDLE		 equ	  278
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 16
JANE.ASM



1   856		  =011A			 ERROR_EAS_NOT_SUPPORTED		 equ	  282
1   857		  =0120			 ERROR_NOT_OWNER			 equ	  288
1   858		  =012A			 ERROR_TOO_MANY_POSTS			 equ	  298
1   859		  =012B			 ERROR_PARTIAL_COPY			 equ	  299
1   860		  =013D			 ERROR_MR_MID_NOT_FOUND			 equ	  317
1   861		  =01E7			 ERROR_INVALID_ADDRESS			 equ	  487
1   862		  =0216			 ERROR_ARITHMETIC_OVERFLOW		 equ	  534
1   863		  =0217			 ERROR_PIPE_CONNECTED			 equ	  535
1   864		  =0218			 ERROR_PIPE_LISTENING			 equ	  536
1   865		  =03E2			 ERROR_EA_ACCESS_DENIED			 equ	  994
1   866		  =03E3			 ERROR_OPERATION_ABORTED		 equ	  995
1   867		  =03E4			 ERROR_IO_INCOMPLETE			 equ	  996
1   868		  =03E5			 ERROR_IO_PENDING			 equ	  997
1   869		  =03E6			 ERROR_NOACCESS				 equ	  998
1   870		  =03E7			 ERROR_SWAPERROR			 equ	  999
1   871		  =03E9			 ERROR_STACK_OVERFLOW			 equ	 1001
1   872		  =03EA			 ERROR_INVALID_MESSAGE			 equ	 1002
1   873		  =03EB			 ERROR_CAN_NOT_COMPLETE			 equ	 1003
1   874		  =03EC			 ERROR_INVALID_FLAGS			 equ	 1004
1   875		  =03ED			 ERROR_UNRECOGNIZED_VOLUME		 equ	 1005
1   876		  =03EE			 ERROR_FILE_INVALID			 equ	 1006
1   877		  =03EF			 ERROR_FULLSCREEN_MODE			 equ	 1007
1   878		  =03F0			 ERROR_NO_TOKEN				 equ	 1008
1   879		  =03F1			 ERROR_BADDB				 equ	 1009
1   880		  =03F2			 ERROR_BADKEY				 equ	 1010
1   881		  =03F3			 ERROR_CANTOPEN				 equ	 1011
1   882		  =03F4			 ERROR_CANTREAD				 equ	 1012
1   883		  =03F5			 ERROR_CANTWRITE			 equ	 1013
1   884		  =03F6			 ERROR_REGISTRY_RECOVERED		 equ	 1014
1   885		  =03F7			 ERROR_REGISTRY_CORRUPT			 equ	 1015
1   886		  =03F8			 ERROR_REGISTRY_IO_FAILED		 equ	 1016
1   887		  =03F9			 ERROR_NOT_REGISTRY_FILE		 equ	 1017
1   888		  =03FA			 ERROR_KEY_DELETED			 equ	 1018
1   889		  =03FB			 ERROR_NO_LOG_SPACE			 equ	 1019
1   890		  =03FC			 ERROR_KEY_HAS_CHILDREN			 equ	 1020
1   891		  =03FD			 ERROR_CHILD_MUST_BE_VOLATILE		 equ	 1021
1   892		  =03FE			 ERROR_NOTIFY_ENUM_DIR			 equ	 1022
1   893		  =041B			 ERROR_DEPENDENT_SERVICES_RUNNING	 equ	 1051
1   894		  =041C			 ERROR_INVALID_SERVICE_CONTROL		 equ	 1052
1   895		  =041D			 ERROR_SERVICE_REQUEST_TIMEOUT		 equ	 1053
1   896		  =041E			 ERROR_SERVICE_NO_THREAD		 equ	 1054
1   897		  =041F			 ERROR_SERVICE_DATABASE_LOCKED		 equ	 1055
1   898		  =0420			 ERROR_SERVICE_ALREADY_RUNNING		 equ	 1056
1   899		  =0421			 ERROR_INVALID_SERVICE_ACCOUNT		 equ	 1057
1   900		  =0422			 ERROR_SERVICE_DISABLED			 equ	 1058
1   901		  =0423			 ERROR_CIRCULAR_DEPENDENCY		 equ	 1059
1   902		  =0424			 ERROR_SERVICE_DOES_NOT_EXIST		 equ	 1060
1   903		  =0425			 ERROR_SERVICE_CANNOT_ACCEPT_CTRL	 equ	 1061
1   904		  =0426			 ERROR_SERVICE_NOT_ACTIVE		 equ	 1062
1   905		  =0427			 ERROR_FAILED_SERVICE_CONTROLLER_CONNECT equ	 1063
1   906		  =0428			 ERROR_EXCEPTION_IN_SERVICE		 equ	 1064
1   907		  =0429			 ERROR_DATABASE_DOES_NOT_EXIST		 equ	 1065
1   908		  =042A			 ERROR_SERVICE_SPECIFIC_ERROR		 equ	 1066
1   909		  =042B			 ERROR_PROCESS_ABORTED			 equ	 1067
1   910		  =042C			 ERROR_SERVICE_DEPENDENCY_FAIL		 equ	 1068
1   911		  =042D			 ERROR_SERVICE_LOGON_FAILED		 equ	 1069
1   912		  =042E			 ERROR_SERVICE_START_HANG		 equ	 1070
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 17
JANE.ASM



1   913		  =042F			 ERROR_INVALID_SERVICE_LOCK		 equ	 1071
1   914		  =0430			 ERROR_SERVICE_MARKED_FOR_DELETE	 equ	 1072
1   915		  =0431			 ERROR_SERVICE_EXISTS			 equ	 1073
1   916		  =0432			 ERROR_ALREADY_RUNNING_LKG		 equ	 1074
1   917		  =0433			 ERROR_SERVICE_DEPENDENCY_DELETED	 equ	 1075
1   918		  =0434			 ERROR_BOOT_ALREADY_ACCEPTED		 equ	 1076
1   919		  =0435			 ERROR_SERVICE_NEVER_STARTED		 equ	 1077
1   920		  =0436			 ERROR_DUPLICATE_SERVICE_NAME		 equ	 1078
1   921		  =044C			 ERROR_END_OF_MEDIA			 equ	 1100
1   922		  =044D			 ERROR_FILEMARK_DETECTED		 equ	 1101
1   923		  =044E			 ERROR_BEGINNING_OF_MEDIA		 equ	 1102
1   924		  =044F			 ERROR_SETMARK_DETECTED			 equ	 1103
1   925		  =0450			 ERROR_NO_DATA_DETECTED			 equ	 1104
1   926		  =0451			 ERROR_PARTITION_FAILURE		 equ	 1105
1   927		  =0452			 ERROR_INVALID_BLOCK_LENGTH		 equ	 1106
1   928		  =0453			 ERROR_DEVICE_NOT_PARTITIONED		 equ	 1107
1   929		  =0454			 ERROR_UNABLE_TO_LOCK_MEDIA		 equ	 1108
1   930		  =0455			 ERROR_UNABLE_TO_UNLOAD_MEDIA		 equ	 1109
1   931		  =0456			 ERROR_MEDIA_CHANGED			 equ	 1110
1   932		  =0457			 ERROR_BUS_RESET			 equ	 1111
1   933		  =0458			 ERROR_NO_MEDIA_IN_DRIVE		 equ	 1112
1   934		  =0459			 ERROR_NO_UNICODE_TRANSLATION		 equ	 1113
1   935		  =045A			 ERROR_DLL_INIT_FAILED			 equ	 1114
1   936		  =045B			 ERROR_SHUTDOWN_IN_PROGRESS		 equ	 1115
1   937		  =045C			 ERROR_NO_SHUTDOWN_IN_PROGRESS		 equ	 1116
1   938		  =045D			 ERROR_IO_DEVICE			 equ	 1117
1   939		  =045E			 ERROR_SERIAL_NO_DEVICE			 equ	 1118
1   940		  =045F			 ERROR_IRQ_BUSY				 equ	 1119
1   941		  =0460			 ERROR_MORE_WRITES			 equ	 1120
1   942		  =0461			 ERROR_COUNTER_TIMEOUT			 equ	 1121
1   943		  =0462			 ERROR_FLOPPY_ID_MARK_NOT_FOUND		 equ	 1122
1   944		  =0463			 ERROR_FLOPPY_WRONG_CYLINDER		 equ	 1123
1   945		  =0464			 ERROR_FLOPPY_UNKNOWN_ERROR		 equ	 1124
1   946		  =0465			 ERROR_FLOPPY_BAD_REGISTERS		 equ	 1125
1   947		  =0466			 ERROR_DISK_RECALIBRATE_FAILED		 equ	 1126
1   948		  =0467			 ERROR_DISK_OPERATION_FAILED		 equ	 1127
1   949		  =0468			 ERROR_DISK_RESET_FAILED		 equ	 1128
1   950		  =0469			 ERROR_EOM_OVERFLOW			 equ	 1129
1   951		  =046A			 ERROR_NOT_ENOUGH_SERVER_MEMORY		 equ	 1130
1   952		  =046B			 ERROR_POSSIBLE_DEADLOCK		 equ	 1131
1   953		  =046C			 ERROR_MAPPED_ALIGNMENT			 equ	 1132
1   954		  =0474			 ERROR_SET_POWER_STATE_VETOED		 equ	 1140
1   955		  =0475			 ERROR_SET_POWER_STATE_FAILED		 equ	 1141
1   956		  =047E			 ERROR_OLD_WIN_VERSION			 equ	 1150
1   957		  =047F			 ERROR_APP_WRONG_OS			 equ	 1151
1   958		  =0480			 ERROR_SINGLE_INSTANCE_APP		 equ	 1152
1   959		  =0481			 ERROR_RMODE_APP			 equ	 1153
1   960		  =0482			 ERROR_INVALID_DLL			 equ	 1154
1   961		  =0483			 ERROR_NO_ASSOCIATION			 equ	 1155
1   962		  =0484			 ERROR_DDE_FAIL				 equ	 1156
1   963		  =0485			 ERROR_DLL_NOT_FOUND			 equ	 1157
1   964		  =089A			 ERROR_BAD_USERNAME			 equ	 2202
1   965		  =08CA			 ERROR_NOT_CONNECTED			 equ	 2250
1   966		  =0961			 ERROR_OPEN_FILES			 equ	 2401
1   967		  =0962			 ERROR_ACTIVE_CONNECTIONS		 equ	 2402
1   968		  =0964			 ERROR_DEVICE_IN_USE			 equ	 2404
1   969		  =04B0			 ERROR_BAD_DEVICE			 equ	 1200
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 18
JANE.ASM



1   970		  =04B1			 ERROR_CONNECTION_UNAVAIL		 equ	 1201
1   971		  =04B2			 ERROR_DEVICE_ALREADY_REMEMBERED	 equ	 1202
1   972		  =04B3			 ERROR_NO_NET_OR_BAD_PATH		 equ	 1203
1   973		  =04B4			 ERROR_BAD_PROVIDER			 equ	 1204
1   974		  =04B5			 ERROR_CANNOT_OPEN_PROFILE		 equ	 1205
1   975		  =04B6			 ERROR_BAD_PROFILE			 equ	 1206
1   976		  =04B7			 ERROR_NOT_CONTAINER			 equ	 1207
1   977		  =04B8			 ERROR_EXTENDED_ERROR			 equ	 1208
1   978		  =04B9			 ERROR_INVALID_GROUPNAME		 equ	 1209
1   979		  =04BA			 ERROR_INVALID_COMPUTERNAME		 equ	 1210
1   980		  =04BB			 ERROR_INVALID_EVENTNAME		 equ	 1211
1   981		  =04BC			 ERROR_INVALID_DOMAINNAME		 equ	 1212
1   982		  =04BD			 ERROR_INVALID_SERVICENAME		 equ	 1213
1   983		  =04BE			 ERROR_INVALID_NETNAME			 equ	 1214
1   984		  =04BF			 ERROR_INVALID_SHARENAME		 equ	 1215
1   985		  =04C0			 ERROR_INVALID_PASSWORDNAME		 equ	 1216
1   986		  =04C1			 ERROR_INVALID_MESSAGENAME		 equ	 1217
1   987		  =04C2			 ERROR_INVALID_MESSAGEDEST		 equ	 1218
1   988		  =04C3			 ERROR_SESSION_CREDENTIAL_CONFLICT	 equ	 1219
1   989		  =04C4			 ERROR_REMOTE_SESSION_LIMIT_EXCEEDED	 equ	 1220
1   990		  =04C5			 ERROR_DUP_DOMAINNAME			 equ	 1221
1   991		  =04C6			 ERROR_NO_NETWORK			 equ	 1222
1   992		  =04C7			 ERROR_CANCELLED			 equ	 1223
1   993		  =04C8			 ERROR_USER_MAPPED_FILE			 equ	 1224
1   994		  =04C9			 ERROR_CONNECTION_REFUSED		 equ	 1225
1   995		  =04CA			 ERROR_GRACEFUL_DISCONNECT		 equ	 1226
1   996		  =04CB			 ERROR_ADDRESS_ALREADY_ASSOCIATED	 equ	 1227
1   997		  =04CC			 ERROR_ADDRESS_NOT_ASSOCIATED		 equ	 1228
1   998		  =04CD			 ERROR_CONNECTION_INVALID		 equ	 1229
1   999		  =04CE			 ERROR_CONNECTION_ACTIVE		 equ	 1230
1  1000		  =04CF			 ERROR_NETWORK_UNREACHABLE		 equ	 1231
1  1001		  =04D0			 ERROR_HOST_UNREACHABLE			 equ	 1232
1  1002		  =04D1			 ERROR_PROTOCOL_UNREACHABLE		 equ	 1233
1  1003		  =04D2			 ERROR_PORT_UNREACHABLE			 equ	 1234
1  1004		  =04D3			 ERROR_REQUEST_ABORTED			 equ	 1235
1  1005		  =04D4			 ERROR_CONNECTION_ABORTED		 equ	 1236
1  1006		  =04D5			 ERROR_RETRY				 equ	 1237
1  1007		  =04D6			 ERROR_CONNECTION_COUNT_LIMIT		 equ	 1238
1  1008		  =04D7			 ERROR_LOGIN_TIME_RESTRICTION		 equ	 1239
1  1009		  =04D8			 ERROR_LOGIN_WKSTA_RESTRICTION		 equ	 1240
1  1010		  =04D9			 ERROR_INCORRECT_ADDRESS		 equ	 1241
1  1011		  =04DA			 ERROR_ALREADY_REGISTERED		 equ	 1242
1  1012		  =04DB			 ERROR_SERVICE_NOT_FOUND		 equ	 1243
1  1013		  =04DC			 ERROR_NOT_AUTHENTICATED		 equ	 1244
1  1014		  =04DD			 ERROR_NOT_LOGGED_ON			 equ	 1245
1  1015		  =04DE			 ERROR_CONTINUE				 equ	 1246
1  1016		  =04DF			 ERROR_ALREADY_INITIALIZED		 equ	 1247
1  1017		  =04E0			 ERROR_NO_MORE_DEVICES			 equ	 1248
1  1018		  =0514			 ERROR_NOT_ALL_ASSIGNED			 equ	 1300
1  1019		  =0515			 ERROR_SOME_NOT_MAPPED			 equ	 1301
1  1020		  =0516			 ERROR_NO_QUOTAS_FOR_ACCOUNT		 equ	 1302
1  1021		  =0517			 ERROR_LOCAL_USER_SESSION_KEY		 equ	 1303
1  1022		  =0518			 ERROR_NULL_LM_PASSWORD			 equ	 1304
1  1023		  =0519			 ERROR_UNKNOWN_REVISION			 equ	 1305
1  1024		  =051A			 ERROR_REVISION_MISMATCH		 equ	 1306
1  1025		  =051B			 ERROR_INVALID_OWNER			 equ	 1307
1  1026		  =051C			 ERROR_INVALID_PRIMARY_GROUP		 equ	 1308
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 19
JANE.ASM



1  1027		  =051D			 ERROR_NO_IMPERSONATION_TOKEN		 equ	 1309
1  1028		  =051E			 ERROR_CANT_DISABLE_MANDATORY		 equ	 1310
1  1029		  =051F			 ERROR_NO_LOGON_SERVERS			 equ	 1311
1  1030		  =0520			 ERROR_NO_SUCH_LOGON_SESSION		 equ	 1312
1  1031		  =0521			 ERROR_NO_SUCH_PRIVILEGE		 equ	 1313
1  1032		  =0522			 ERROR_PRIVILEGE_NOT_HELD		 equ	 1314
1  1033		  =0523			 ERROR_INVALID_ACCOUNT_NAME		 equ	 1315
1  1034		  =0524			 ERROR_USER_EXISTS			 equ	 1316
1  1035		  =0525			 ERROR_NO_SUCH_USER			 equ	 1317
1  1036		  =0526			 ERROR_GROUP_EXISTS			 equ	 1318
1  1037		  =0527			 ERROR_NO_SUCH_GROUP			 equ	 1319
1  1038		  =0528			 ERROR_MEMBER_IN_GROUP			 equ	 1320
1  1039		  =0529			 ERROR_MEMBER_NOT_IN_GROUP		 equ	 1321
1  1040		  =052A			 ERROR_LAST_ADMIN			 equ	 1322
1  1041		  =052B			 ERROR_WRONG_PASSWORD			 equ	 1323
1  1042		  =052C			 ERROR_ILL_FORMED_PASSWORD		 equ	 1324
1  1043		  =052D			 ERROR_PASSWORD_RESTRICTION		 equ	 1325
1  1044		  =052E			 ERROR_LOGON_FAILURE			 equ	 1326
1  1045		  =052F			 ERROR_ACCOUNT_RESTRICTION		 equ	 1327
1  1046		  =0530			 ERROR_INVALID_LOGON_HOURS		 equ	 1328
1  1047		  =0531			 ERROR_INVALID_WORKSTATION		 equ	 1329
1  1048		  =0532			 ERROR_PASSWORD_EXPIRED			 equ	 1330
1  1049		  =0533			 ERROR_ACCOUNT_DISABLED			 equ	 1331
1  1050		  =0534			 ERROR_NONE_MAPPED			 equ	 1332
1  1051		  =0535			 ERROR_TOO_MANY_LUIDS_REQUESTED		 equ	 1333
1  1052		  =0536			 ERROR_LUIDS_EXHAUSTED			 equ	 1334
1  1053		  =0537			 ERROR_INVALID_SUB_AUTHORITY		 equ	 1335
1  1054		  =0538			 ERROR_INVALID_ACL			 equ	 1336
1  1055		  =0539			 ERROR_INVALID_SID			 equ	 1337
1  1056		  =053A			 ERROR_INVALID_SECURITY_DESCR		 equ	 1338
1  1057		  =053C			 ERROR_BAD_INHERITANCE_ACL		 equ	 1340
1  1058		  =053D			 ERROR_SERVER_DISABLED			 equ	 1341
1  1059		  =053E			 ERROR_SERVER_NOT_DISABLED		 equ	 1342
1  1060		  =053F			 ERROR_INVALID_ID_AUTHORITY		 equ	 1343
1  1061		  =0540			 ERROR_ALLOTTED_SPACE_EXCEEDED		 equ	 1344
1  1062		  =0541			 ERROR_INVALID_GROUP_ATTRIBUTES		 equ	 1345
1  1063		  =0542			 ERROR_BAD_IMPERSONATION_LEVEL		 equ	 1346
1  1064		  =0543			 ERROR_CANT_OPEN_ANONYMOUS		 equ	 1347
1  1065		  =0544			 ERROR_BAD_VALIDATION_CLASS		 equ	 1348
1  1066		  =0545			 ERROR_BAD_TOKEN_TYPE			 equ	 1349
1  1067		  =0546			 ERROR_NO_SECURITY_ON_OBJECT		 equ	 1350
1  1068		  =0547			 ERROR_CANT_ACCESS_DOMAIN_INFO		 equ	 1351
1  1069		  =0548			 ERROR_INVALID_SERVER_STATE		 equ	 1352
1  1070		  =0549			 ERROR_INVALID_DOMAIN_STATE		 equ	 1353
1  1071		  =054A			 ERROR_INVALID_DOMAIN_ROLE		 equ	 1354
1  1072		  =054B			 ERROR_NO_SUCH_DOMAIN			 equ	 1355
1  1073		  =054C			 ERROR_DOMAIN_EXISTS			 equ	 1356
1  1074		  =054D			 ERROR_DOMAIN_LIMIT_EXCEEDED		 equ	 1357
1  1075		  =054E			 ERROR_INTERNAL_DB_CORRUPTION		 equ	 1358
1  1076		  =054F			 ERROR_INTERNAL_ERROR			 equ	 1359
1  1077		  =0550			 ERROR_GENERIC_NOT_MAPPED		 equ	 1360
1  1078		  =0551			 ERROR_BAD_DESCRIPTOR_FORMAT		 equ	 1361
1  1079		  =0552			 ERROR_NOT_LOGON_PROCESS		 equ	 1362
1  1080		  =0553			 ERROR_LOGON_SESSION_EXISTS		 equ	 1363
1  1081		  =0554			 ERROR_NO_SUCH_PACKAGE			 equ	 1364
1  1082		  =0555			 ERROR_BAD_LOGON_SESSION_STATE		 equ	 1365
1  1083		  =0556			 ERROR_LOGON_SESSION_COLLISION		 equ	 1366
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 20
JANE.ASM



1  1084		  =0557			 ERROR_INVALID_LOGON_TYPE		 equ	 1367
1  1085		  =0558			 ERROR_CANNOT_IMPERSONATE		 equ	 1368
1  1086		  =0559			 ERROR_RXACT_INVALID_STATE		 equ	 1369
1  1087		  =055A			 ERROR_RXACT_COMMIT_FAILURE		 equ	 1370
1  1088		  =055B			 ERROR_SPECIAL_ACCOUNT			 equ	 1371
1  1089		  =055C			 ERROR_SPECIAL_GROUP			 equ	 1372
1  1090		  =055D			 ERROR_SPECIAL_USER			 equ	 1373
1  1091		  =055E			 ERROR_MEMBERS_PRIMARY_GROUP		 equ	 1374
1  1092		  =055F			 ERROR_TOKEN_ALREADY_IN_USE		 equ	 1375
1  1093		  =0560			 ERROR_NO_SUCH_ALIAS			 equ	 1376
1  1094		  =0561			 ERROR_MEMBER_NOT_IN_ALIAS		 equ	 1377
1  1095		  =0562			 ERROR_MEMBER_IN_ALIAS			 equ	 1378
1  1096		  =0563			 ERROR_ALIAS_EXISTS			 equ	 1379
1  1097		  =0564			 ERROR_LOGON_NOT_GRANTED		 equ	 1380
1  1098		  =0565			 ERROR_TOO_MANY_SECRETS			 equ	 1381
1  1099		  =0566			 ERROR_SECRET_TOO_LONG			 equ	 1382
1  1100		  =0567			 ERROR_INTERNAL_DB_ERROR		 equ	 1383
1  1101		  =0568			 ERROR_TOO_MANY_CONTEXT_IDS		 equ	 1384
1  1102		  =0569			 ERROR_LOGON_TYPE_NOT_GRANTED		 equ	 1385
1  1103		  =056A			 ERROR_NT_CROSS_ENCRYPTION_REQUIRED	 equ	 1386
1  1104		  =056B			 ERROR_NO_SUCH_MEMBER			 equ	 1387
1  1105		  =056C			 ERROR_INVALID_MEMBER			 equ	 1388
1  1106		  =056D			 ERROR_TOO_MANY_SIDS			 equ	 1389
1  1107		  =056E			 ERROR_LM_CROSS_ENCRYPTION_REQUIRED	 equ	 1390
1  1108		  =056F			 ERROR_NO_INHERITANCE			 equ	 1391
1  1109		  =0570			 ERROR_FILE_CORRUPT			 equ	 1392
1  1110		  =0571			 ERROR_DISK_CORRUPT			 equ	 1393
1  1111		  =0572			 ERROR_NO_USER_SESSION_KEY		 equ	 1394
1  1112		  =0573			 ERROR_LICENSE_QUOTA_EXCEEDED		 equ	 1395
1  1113		  =0578			 ERROR_INVALID_WINDOW_HANDLE		 equ	 1400
1  1114		  =0579			 ERROR_INVALID_MENU_HANDLE		 equ	 1401
1  1115		  =057A			 ERROR_INVALID_CURSOR_HANDLE		 equ	 1402
1  1116		  =057B			 ERROR_INVALID_ACCEL_HANDLE		 equ	 1403
1  1117		  =057C			 ERROR_INVALID_HOOK_HANDLE		 equ	 1404
1  1118		  =057D			 ERROR_INVALID_DWP_HANDLE		 equ	 1405
1  1119		  =057E			 ERROR_TLW_WITH_WSCHILD			 equ	 1406
1  1120		  =057F			 ERROR_CANNOT_FIND_WND_CLASS		 equ	 1407
1  1121		  =0580			 ERROR_WINDOW_OF_OTHER_THREAD		 equ	 1408
1  1122		  =0581			 ERROR_HOTKEY_ALREADY_REGISTERED	 equ	 1409
1  1123		  =0582			 ERROR_CLASS_ALREADY_EXISTS		 equ	 1410
1  1124		  =0583			 ERROR_CLASS_DOES_NOT_EXIST		 equ	 1411
1  1125		  =0584			 ERROR_CLASS_HAS_WINDOWS		 equ	 1412
1  1126		  =0585			 ERROR_INVALID_INDEX			 equ	 1413
1  1127		  =0586			 ERROR_INVALID_ICON_HANDLE		 equ	 1414
1  1128		  =0587			 ERROR_PRIVATE_DIALOG_INDEX		 equ	 1415
1  1129		  =0588			 ERROR_LISTBOX_ID_NOT_FOUND		 equ	 1416
1  1130		  =0589			 ERROR_NO_WILDCARD_CHARACTERS		 equ	 1417
1  1131		  =058A			 ERROR_CLIPBOARD_NOT_OPEN		 equ	 1418
1  1132		  =058B			 ERROR_HOTKEY_NOT_REGISTERED		 equ	 1419
1  1133		  =058C			 ERROR_WINDOW_NOT_DIALOG		 equ	 1420
1  1134		  =058D			 ERROR_CONTROL_ID_NOT_FOUND		 equ	 1421
1  1135		  =058E			 ERROR_INVALID_COMBOBOX_MESSAGE		 equ	 1422
1  1136		  =058F			 ERROR_WINDOW_NOT_COMBOBOX		 equ	 1423
1  1137		  =0590			 ERROR_INVALID_EDIT_HEIGHT		 equ	 1424
1  1138		  =0591			 ERROR_DC_NOT_FOUND			 equ	 1425
1  1139		  =0592			 ERROR_INVALID_HOOK_FILTER		 equ	 1426
1  1140		  =0593			 ERROR_INVALID_FILTER_PROC		 equ	 1427
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 21
JANE.ASM



1  1141		  =0594			 ERROR_HOOK_NEEDS_HMOD			 equ	 1428
1  1142		  =0595			 ERROR_GLOBAL_ONLY_HOOK			 equ	 1429
1  1143		  =0596			 ERROR_JOURNAL_HOOK_SET			 equ	 1430
1  1144		  =0597			 ERROR_HOOK_NOT_INSTALLED		 equ	 1431
1  1145		  =0598			 ERROR_INVALID_LB_MESSAGE		 equ	 1432
1  1146		  =0599			 ERROR_SETCOUNT_ON_BAD_LB		 equ	 1433
1  1147		  =059A			 ERROR_LB_WITHOUT_TABSTOPS		 equ	 1434
1  1148		  =059B			 ERROR_DESTROY_OBJECT_OF_OTHER_THREAD	 equ	 1435
1  1149		  =059C			 ERROR_CHILD_WINDOW_MENU		 equ	 1436
1  1150		  =059D			 ERROR_NO_SYSTEM_MENU			 equ	 1437
1  1151		  =059E			 ERROR_INVALID_MSGBOX_STYLE		 equ	 1438
1  1152		  =059F			 ERROR_INVALID_SPI_VALUE		 equ	 1439
1  1153		  =05A0			 ERROR_SCREEN_ALREADY_LOCKED		 equ	 1440
1  1154		  =05A1			 ERROR_HWNDS_HAVE_DIFF_PARENT		 equ	 1441
1  1155		  =05A2			 ERROR_NOT_CHILD_WINDOW			 equ	 1442
1  1156		  =05A3			 ERROR_INVALID_GW_COMMAND		 equ	 1443
1  1157		  =05A4			 ERROR_INVALID_THREAD_ID		 equ	 1444
1  1158		  =05A5			 ERROR_NON_MDICHILD_WINDOW		 equ	 1445
1  1159		  =05A6			 ERROR_POPUP_ALREADY_ACTIVE		 equ	 1446
1  1160		  =05A7			 ERROR_NO_SCROLLBARS			 equ	 1447
1  1161		  =05A8			 ERROR_INVALID_SCROLLBAR_RANGE		 equ	 1448
1  1162		  =05A9			 ERROR_INVALID_SHOWWIN_COMMAND		 equ	 1449
1  1163		  =05AA			 ERROR_NO_SYSTEM_RESOURCES		 equ	 1450
1  1164		  =05AB			 ERROR_NONPAGED_SYSTEM_RESOURCES	 equ	 1451
1  1165		  =05AC			 ERROR_PAGED_SYSTEM_RESOURCES		 equ	 1452
1  1166		  =05AD			 ERROR_WORKING_SET_QUOTA		 equ	 1453
1  1167		  =05AE			 ERROR_PAGEFILE_QUOTA			 equ	 1454
1  1168		  =05AF			 ERROR_COMMITMENT_LIMIT			 equ	 1455
1  1169		  =05B0			 ERROR_MENU_ITEM_NOT_FOUND		 equ	 1456
1  1170		  =05DC			 ERROR_EVENTLOG_FILE_CORRUPT		 equ	 1500
1  1171		  =05DD			 ERROR_EVENTLOG_CANT_START		 equ	 1501
1  1172		  =05DE			 ERROR_LOG_FILE_FULL			 equ	 1502
1  1173		  =05DF			 ERROR_EVENTLOG_FILE_CHANGED		 equ	 1503
1  1174		  =06F8			 ERROR_INVALID_USER_BUFFER		 equ	 1784
1  1175		  =06F9			 ERROR_UNRECOGNIZED_MEDIA		 equ	 1785
1  1176		  =06FA			 ERROR_NO_TRUST_LSA_SECRET		 equ	 1786
1  1177		  =06FB			 ERROR_NO_TRUST_SAM_ACCOUNT		 equ	 1787
1  1178		  =06FC			 ERROR_TRUSTED_DOMAIN_FAILURE		 equ	 1788
1  1179		  =06FD			 ERROR_TRUSTED_RELATIONSHIP_FAILURE	 equ	 1789
1  1180		  =06FE			 ERROR_TRUST_FAILURE			 equ	 1790
1  1181		  =0700			 ERROR_NETLOGON_NOT_STARTED		 equ	 1792
1  1182		  =0701			 ERROR_ACCOUNT_EXPIRED			 equ	 1793
1  1183		  =0702			 ERROR_REDIRECTOR_HAS_OPEN_HANDLES	 equ	 1794
1  1184		  =0703			 ERROR_PRINTER_DRIVER_ALREADY_INSTALLED	 equ	 1795
1  1185		  =0704			 ERROR_UNKNOWN_PORT			 equ	 1796
1  1186		  =0705			 ERROR_UNKNOWN_PRINTER_DRIVER		 equ	 1797
1  1187		  =0706			 ERROR_UNKNOWN_PRINTPROCESSOR		 equ	 1798
1  1188		  =0707			 ERROR_INVALID_SEPARATOR_FILE		 equ	 1799
1  1189		  =0708			 ERROR_INVALID_PRIORITY			 equ	 1800
1  1190		  =0709			 ERROR_INVALID_PRINTER_NAME		 equ	 1801
1  1191		  =070A			 ERROR_PRINTER_ALREADY_EXISTS		 equ	 1802
1  1192		  =070B			 ERROR_INVALID_PRINTER_COMMAND		 equ	 1803
1  1193		  =070C			 ERROR_INVALID_DATATYPE			 equ	 1804
1  1194		  =070D			 ERROR_INVALID_ENVIRONMENT		 equ	 1805
1  1195		  =070F			 ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT equ	 1807
1  1196		  =0710			 ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT equ	 1808
1  1197		  =0711			 ERROR_NOLOGON_SERVER_TRUST_ACCOUNT	 equ	 1809
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 22
JANE.ASM



1  1198		  =0712			 ERROR_DOMAIN_TRUST_INCONSISTENT	 equ	 1810
1  1199		  =0713			 ERROR_SERVER_HAS_OPEN_HANDLES		 equ	 1811
1  1200		  =0714			 ERROR_RESOURCE_DATA_NOT_FOUND		 equ	 1812
1  1201		  =0715			 ERROR_RESOURCE_TYPE_NOT_FOUND		 equ	 1813
1  1202		  =0716			 ERROR_RESOURCE_NAME_NOT_FOUND		 equ	 1814
1  1203		  =0717			 ERROR_RESOURCE_LANG_NOT_FOUND		 equ	 1815
1  1204		  =0718			 ERROR_NOT_ENOUGH_QUOTA			 equ	 1816
1  1205		  =076D			 ERROR_INVALID_TIME			 equ	 1901
1  1206		  =076E			 ERROR_INVALID_FORM_NAME		 equ	 1902
1  1207		  =076F			 ERROR_INVALID_FORM_SIZE		 equ	 1903
1  1208		  =0770			 ERROR_ALREADY_WAITING			 equ	 1904
1  1209		  =0771			 ERROR_PRINTER_DELETED			 equ	 1905
1  1210		  =0772			 ERROR_INVALID_PRINTER_STATE		 equ	 1906
1  1211		  =0773			 ERROR_PASSWORD_MUST_CHANGE		 equ	 1907
1  1212		  =0774			 ERROR_DOMAIN_CONTROLLER_NOT_FOUND	 equ	 1908
1  1213		  =0775			 ERROR_ACCOUNT_LOCKED_OUT		 equ	 1909
1  1214		  =07D0			 ERROR_INVALID_PIXEL_FORMAT		 equ	 2000
1  1215		  =07D1			 ERROR_BAD_DRIVER			 equ	 2001
1  1216		  =07D2			 ERROR_INVALID_WINDOW_STYLE		 equ	 2002
1  1217		  =07D3			 ERROR_METAFILE_NOT_SUPPORTED		 equ	 2003
1  1218		  =07D4			 ERROR_TRANSFORM_NOT_SUPPORTED		 equ	 2004
1  1219		  =07D5			 ERROR_CLIPPING_NOT_SUPPORTED		 equ	 2005
1  1220		  =0BB8			 ERROR_UNKNOWN_PRINT_MONITOR		 equ	 3000
1  1221		  =0BB9			 ERROR_PRINTER_DRIVER_IN_USE		 equ	 3001
1  1222		  =0BBA			 ERROR_SPOOL_FILE_NOT_FOUND		 equ	 3002
1  1223		  =0BBB			 ERROR_SPL_NO_STARTDOC			 equ	 3003
1  1224		  =0BBC			 ERROR_SPL_NO_ADDJOB			 equ	 3004
1  1225		  =0BBD			 ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED equ	 3005
1  1226		  =0BBE			 ERROR_PRINT_MONITOR_ALREADY_INSTALLED	 equ	 3006
1  1227		  =0FA0			 ERROR_WINS_INTERNAL			 equ	 4000
1  1228		  =0FA1			 ERROR_CAN_NOT_DEL_LOCAL_WINS		 equ	 4001
1  1229		  =0FA2			 ERROR_STATIC_INIT			 equ	 4002
1  1230		  =0FA3			 ERROR_INC_BACKUP			 equ	 4003
1  1231		  =0FA4			 ERROR_FULL_BACKUP			 equ	 4004
1  1232		  =0FA5			 ERROR_REC_NON_EXISTENT			 equ	 4005
1  1233		  =0FA6			 ERROR_RPL_NOT_ALLOWED			 equ	 4006
1  1234		  =17E6			 ERROR_NO_BROWSER_SERVERS_FOUND		 equ	 6118
1  1235					 ;
1  1236					 ;------------------------------------------------------------------------------
1  1237					 ;
1  1238					 ; ===================
1  1239					 ; edit	control	styles
1  1240					 ; ===================
1  1241					 ;
1  1242		  =0000			 ES_LEFT			 equ	 0000h
1  1243		  =0001			 ES_CENTER			 equ	 0001h
1  1244		  =0002			 ES_RIGHT			 equ	 0002h
1  1245		  =0004			 ES_MULTILINE			 equ	 0004h
1  1246		  =0008			 ES_UPPERCASE			 equ	 0008h
1  1247		  =0010			 ES_LOWERCASE			 equ	 0010h
1  1248		  =0020			 ES_PASSWORD			 equ	 0020h
1  1249		  =0040			 ES_AUTOVSCROLL			 equ	 0040h
1  1250		  =0080			 ES_AUTOHSCROLL			 equ	 0080h
1  1251		  =0100			 ES_NOHIDESEL			 equ	 0100h
1  1252		  =0400			 ES_OEMCONVERT			 equ	 0400h
1  1253		  =0800			 ES_READONLY			 equ	 0800h
1  1254		  =1000			 ES_WANTRETURN			 equ	 1000h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 23
JANE.ASM



1  1255		  =2000			 ES_NUMBER			 equ	 2000h
1  1256					 ;
1  1257		  =0084			 ES_DEFAULT			 equ	 ES_MULTILINE+ES_AUTOHSCROLL
1  1258					 ;
1  1259					 ;------------------------------------------------------------------------------
1  1260					 ;
1  1261					 ; =============
1  1262					 ; font	families
1  1263					 ; =============
1  1264					 ;
1  1265		  =0000			 FF_DONTCARE			 equ	 0000h
1  1266		  =0010			 FF_ROMAN			 equ	 0010h
1  1267		  =0020			 FF_SWISS			 equ	 0020h
1  1268		  =0030			 FF_MODERN			 equ	 0030h
1  1269		  =0040			 FF_SCRIPT			 equ	 0040h
1  1270		  =0050			 FF_DECORATIVE			 equ	 0050h
1  1271					 ;
1  1272					 ;------------------------------------------------------------------------------
1  1273					 ;
1  1274					 ; ===============
1  1275					 ; file	attributes
1  1276					 ; ===============
1  1277					 ;
1  1278		  =0001			 FILE_ATTRIBUTE_READONLY	 equ	 00000001h
1  1279		  =0002			 FILE_ATTRIBUTE_HIDDEN		 equ	 00000002h
1  1280		  =0004			 FILE_ATTRIBUTE_SYSTEM		 equ	 00000004h
1  1281		  =0010			 FILE_ATTRIBUTE_DIRECTORY	 equ	 00000010h
1  1282		  =0020			 FILE_ATTRIBUTE_ARCHIVE		 equ	 00000020h
1  1283		  =0080			 FILE_ATTRIBUTE_NORMAL		 equ	 00000080h
1  1284		  =0100			 FILE_ATTRIBUTE_TEMPORARY	 equ	 00000100h
1  1285		  =0800			 FILE_ATTRIBUTE_COMPRESSED	 equ	 00000800h
1  1286					 ;
1  1287					 ;------------------------------------------------------------------------------
1  1288					 ;
1  1289					 ; ===================
1  1290					 ; file	creation flags
1  1291					 ; ===================
1  1292					 ;
1  1293		  =80000000		 FILE_FLAG_WRITE_THROUGH	 equ	 80000000h
1  1294		  =40000000		 FILE_FLAG_OVERLAPPED		 equ	 40000000h
1  1295		  =20000000		 FILE_FLAG_NO_BUFFERING		 equ	 20000000h
1  1296		  =10000000		 FILE_FLAG_RANDOM_ACCESS	 equ	 10000000h
1  1297		  =08000000		 FILE_FLAG_SEQUENTIAL_SCAN	 equ	 08000000h
1  1298		  =04000000		 FILE_FLAG_DELETE_ON_CLOSE	 equ	 04000000h
1  1299		  =02000000		 FILE_FLAG_BACKUP_SEMANTICS	 equ	 02000000h
1  1300		  =01000000		 FILE_FLAG_POSIX_SEMANTICS	 equ	 01000000h
1  1301					 ;
1  1302					 ;------------------------------------------------------------------------------
1  1303					 ;
1  1304					 ; ==================
1  1305					 ; file	notifications
1  1306					 ; ==================
1  1307					 ;
1  1308		  =0001			 FILE_NOTIFY_CHANGE_FILE_NAME	 equ	 0001h
1  1309		  =0002			 FILE_NOTIFY_CHANGE_DIR_NAME	 equ	 0002h
1  1310		  =0004			 FILE_NOTIFY_CHANGE_ATTRIBUTES	 equ	 0004h
1  1311		  =0008			 FILE_NOTIFY_CHANGE_SIZE	 equ	 0008h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 24
JANE.ASM



1  1312		  =0010			 FILE_NOTIFY_CHANGE_LAST_WRITE	 equ	 0010h
1  1313		  =0100			 FILE_NOTIFY_CHANGE_SECURITY	 equ	 0100h
1  1314					 ;
1  1315					 ;------------------------------------------------------------------------------
1  1316					 ;
1  1317					 ; ================
1  1318					 ; file	share modes
1  1319					 ; ================
1  1320					 ;
1  1321		  =0000			 FILE_SHARE_NONE		 equ	 0000h
1  1322		  =0001			 FILE_SHARE_READ		 equ	 0001h
1  1323		  =0002			 FILE_SHARE_WRITE		 equ	 0002h
1  1324					 ;
1  1325		  =0003			 FILE_SHARE_READWRITE		 equ	 FILE_SHARE_READ+FILE_SHARE_WRITE
1  1326					 ;
1  1327					 ;------------------------------------------------------------------------------
1  1328					 ;
1  1329					 ; ========================
1  1330					 ; SetFilePointer() methods
1  1331					 ; ========================
1  1332					 ;
1  1333		  =0000			 FILE_BEGIN			 equ	 0
1  1334		  =0001			 FILE_CURRENT			 equ	 1
1  1335		  =0002			 FILE_END			 equ	 2
1  1336					 ;
1  1337					 ;------------------------------------------------------------------------------
1  1338					 ;
1  1339					 ; =================
1  1340					 ; file	system flags
1  1341					 ; =================
1  1342					 ;
1  1343		  =0001			 FILE_CASE_SENSITIVE_SEARCH	 equ	 00000001h
1  1344		  =0002			 FILE_CASE_PRESERVED_NAMES	 equ	 00000002h
1  1345		  =0004			 FILE_UNICODE_ON_DISK		 equ	 00000004h
1  1346		  =0008			 FILE_PERSISTENT_ACLS		 equ	 00000008h
1  1347		  =0010			 FILE_FILE_COMPRESSION		 equ	 00000010h
1  1348		  =8000			 FILE_VOLUME_IS_COMPRESSED	 equ	 00008000h
1  1349					 ;
1  1350					 FS_CASE_SENSITIVE		 equ	 FILE_CASE_SENSITIVE_SEARCH
1  1351					 FS_CASE_IS_PRESERVED		 equ	 FILE_CASE_PRESERVED_NAMES
1  1352					 FS_UNICODE_STORED_ON_DISK	 equ	 FILE_UNICODE_ON_DISK
1  1353					 FS_PERSISTENT_ACLS		 equ	 FILE_PERSISTENT_ACLS
1  1354					 FS_FILE_COMPRESSION		 equ	 FILE_FILE_COMPRESSION
1  1355					 FS_VOL_IS_COMPRESSED		 equ	 FILE_VOLUME_IS_COMPRESSED
1  1356					 ;
1  1357					 ;------------------------------------------------------------------------------
1  1358					 ;
1  1359					 ; ============
1  1360					 ; font	weights
1  1361					 ; ============
1  1362					 ;
1  1363		  =0000			 FW_DONTCARE			 equ	 000
1  1364		  =0064			 FW_THIN			 equ	 100
1  1365		  =00C8			 FW_EXTRALIGHT			 equ	 200
1  1366		  =012C			 FW_LIGHT			 equ	 300
1  1367		  =0190			 FW_NORMAL			 equ	 400
1  1368		  =01F4			 FW_MEDIUM			 equ	 500
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 25
JANE.ASM



1  1369		  =0258			 FW_SEMIBOLD			 equ	 600
1  1370		  =02BC			 FW_BOLD			 equ	 700
1  1371		  =0320			 FW_EXTRABOLD			 equ	 800
1  1372		  =0384			 FW_HEAVY			 equ	 900
1  1373					 ;
1  1374					 FW_ULTRALIGHT			 equ	 FW_EXTRALIGHT
1  1375					 FW_REGULAR			 equ	 FW_NORMAL
1  1376					 FW_DEMIBOLD			 equ	 FW_SEMIBOLD
1  1377					 FW_ULTRABOLD			 equ	 FW_EXTRABOLD
1  1378					 FW_BLACK			 equ	 FW_HEAVY
1  1379					 ;
1  1380					 ;------------------------------------------------------------------------------
1  1381					 ;
1  1382					 ; ======================
1  1383					 ; GetClassLong() offsets
1  1384					 ; ======================
1  1385					 ;
1  1386		  =-0008		 GCL_MENUNAME			 equ	 -08
1  1387		  =-000A		 GCL_HBRBACKGROUND		 equ	 -10
1  1388		  =-000C		 GCL_HCURSOR			 equ	 -12
1  1389		  =-000E		 GCL_HICON			 equ	 -14
1  1390		  =-0010		 GCL_HMODULE			 equ	 -16
1  1391		  =-0012		 GCL_CBWNDEXTRA			 equ	 -18
1  1392		  =-0014		 GCL_CBCLSEXTRA			 equ	 -20
1  1393		  =-0018		 GCL_WNDPROC			 equ	 -24
1  1394		  =-001A		 GCL_STYLE			 equ	 -26
1  1395		  =-0020		 GCW_ATOM			 equ	 -32
1  1396		  =-0022		 GCL_HICONSM			 equ	 -34
1  1397					 ;
1  1398					 ;------------------------------------------------------------------------------
1  1399					 ;
1  1400					 ; =================
1  1401					 ; file	access types
1  1402					 ; =================
1  1403					 ;
1  1404		  =10000000		 GENERIC_ALL			 equ	 10000000h
1  1405		  =20000000		 GENERIC_EXECUTE		 equ	 20000000h
1  1406		  =40000000		 GENERIC_WRITE			 equ	 40000000h
1  1407		  =80000000		 GENERIC_READ			 equ	 80000000h
1  1408					 ;
1  1409		  =C0000000		 GENERIC_READWRITE		 equ	 GENERIC_READ+GENERIC_WRITE
1  1410					 ;
1  1411					 ;------------------------------------------------------------------------------
1  1412					 ;
1  1413					 ; ===================
1  1414					 ; global memory flags
1  1415					 ; ===================
1  1416					 ;
1  1417		  =0000			 GMEM_FIXED			 equ	 0000h
1  1418		  =0002			 GMEM_MOVEABLE			 equ	 0002h
1  1419		  =0010			 GMEM_NOCOMPACT			 equ	 0010h
1  1420		  =0020			 GMEM_NODISCARD			 equ	 0020h
1  1421		  =0040			 GMEM_ZEROINIT			 equ	 0040h
1  1422		  =0080			 GMEM_MODIFY			 equ	 0080h
1  1423		  =0100			 GMEM_DISCARDABLE		 equ	 0100h
1  1424		  =1000			 GMEM_NOT_BANKED		 equ	 1000h
1  1425		  =2000			 GMEM_SHARE			 equ	 2000h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 26
JANE.ASM



1  1426		  =2000			 GMEM_DDESHARE			 equ	 2000h
1  1427		  =4000			 GMEM_NOTIFY			 equ	 4000h
1  1428		  =8000			 GMEM_INVALID_HANDLE		 equ	 8000h
1  1429					 ;
1  1430		  =7F72			 GMEM_VALID_FLAGS		 equ	 7F72h
1  1431					 GMEM_LOWER			 equ	 GMEM_NOT_BANKED
1  1432					 ;
1  1433					 ;------------------------------------------------------------------------------
1  1434					 ;
1  1435					 ; ================
1  1436					 ; GetWindow() id's
1  1437					 ; ================
1  1438					 ;
1  1439		  =0000			 GW_HWNDFIRST			 equ	 0
1  1440		  =0001			 GW_HWNDLAST			 equ	 1
1  1441		  =0002			 GW_HWNDNEXT			 equ	 2
1  1442		  =0003			 GW_HWNDPREV			 equ	 3
1  1443		  =0004			 GW_OWNER			 equ	 4
1  1444		  =0005			 GW_CHILD			 equ	 5
1  1445					 ;
1  1446		  =0005			 GW_MAX				 equ	 5
1  1447					 ;
1  1448					 ;------------------------------------------------------------------------------
1  1449					 ;
1  1450					 ; =======================
1  1451					 ; GetWindowLong() offsets
1  1452					 ; =======================
1  1453					 ;
1  1454		  =-0004		 GWL_WNDPROC			 equ	 -04
1  1455		  =-0006		 GWL_HINSTANCE			 equ	 -06
1  1456		  =-0008		 GWL_HWNDPARENT			 equ	 -08
1  1457		  =-0010		 GWL_STYLE			 equ	 -16
1  1458		  =-0014		 GWL_EXSTYLE			 equ	 -20
1  1459		  =-0015		 GWL_USERDATA			 equ	 -21
1  1460		  =-000C		 GWL_ID				 equ	 -12
1  1461					 ;
1  1462					 ;------------------------------------------------------------------------------
1  1463					 ;
1  1464					 ; ==================
1  1465					 ; WinHelp() commands
1  1466					 ; ==================
1  1467					 ;
1  1468		  =0001			 HELP_CONTEXT			 equ	 0001h
1  1469		  =0002			 HELP_QUIT			 equ	 0002h
1  1470		  =0003			 HELP_INDEX			 equ	 0003h
1  1471		  =0003			 HELP_CONTENTS			 equ	 0003h
1  1472		  =0004			 HELP_HELPONHELP		 equ	 0004h
1  1473		  =0005			 HELP_SETINDEX			 equ	 0005h
1  1474		  =0005			 HELP_SETCONTENTS		 equ	 0005h
1  1475		  =0008			 HELP_CONTEXTPOPUP		 equ	 0008h
1  1476		  =0009			 HELP_FORCEFILE			 equ	 0009h
1  1477		  =000A			 HELP_CONTEXTMENU		 equ	 000Ah
1  1478		  =000B			 HELP_FINDER			 equ	 000Bh
1  1479		  =000C			 HELP_WM_HELP			 equ	 000Ch
1  1480		  =000D			 HELP_SETPOPUP_POS		 equ	 000Dh
1  1481		  =0010			 HELP_TCARD_DATA		 equ	 0010h
1  1482		  =0011			 HELP_TCARD_OTHER_CALLER	 equ	 0011h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 27
JANE.ASM



1  1483		  =0101			 HELP_KEY			 equ	 0101h
1  1484		  =0102			 HELP_COMMAND			 equ	 0102h
1  1485		  =0105			 HELP_PARTIALKEY		 equ	 0105h
1  1486		  =0201			 HELP_MULTIKEY			 equ	 0201h
1  1487		  =0203			 HELP_SETWINPOS			 equ	 0203h
1  1488		  =8000			 HELP_TCARD			 equ	 8000h
1  1489					 ;
1  1490					 ;------------------------------------------------------------------------------
1  1491					 ;
1  1492					 ; =======================
1  1493					 ; hit test position codes
1  1494					 ; =======================
1  1495					 ;
1  1496		  =-0002		 HTERROR			 equ	 -2
1  1497		  =-0001		 HTTRANSPARENT			 equ	 -1
1  1498		  =0000			 HTNOWHERE			 equ	  0
1  1499		  =0001			 HTCLIENT			 equ	  1
1  1500		  =0002			 HTCAPTION			 equ	  2
1  1501		  =0003			 HTSYSMENU			 equ	  3
1  1502		  =0004			 HTGROWBOX			 equ	  4
1  1503		  =0005			 HTMENU				 equ	  5
1  1504		  =0006			 HTHSCROLL			 equ	  6
1  1505		  =0007			 HTVSCROLL			 equ	  7
1  1506		  =0008			 HTMINBUTTON			 equ	  8
1  1507		  =0009			 HTMAXBUTTON			 equ	  9
1  1508					 ;
1  1509					 HTSIZEFIRST			 equ	 HTLEFT
1  1510		  =000A			 HTLEFT				 equ	 10
1  1511		  =000B			 HTRIGHT			 equ	 11
1  1512		  =000C			 HTTOP				 equ	 12
1  1513		  =000D			 HTTOPLEFT			 equ	 13
1  1514		  =000E			 HTTOPRIGHT			 equ	 14
1  1515		  =000F			 HTBOTTOM			 equ	 15
1  1516		  =0010			 HTBOTTOMLEFT			 equ	 16
1  1517		  =0011			 HTBOTTOMRIGHT			 equ	 17
1  1518					 HTSIZELAST			 equ	 HTBOTTOMRIGHT
1  1519					 ;
1  1520		  =0012			 HTBORDER			 equ	 18
1  1521		  =0013			 HTOBJECT			 equ	 19
1  1522		  =0014			 HTCLOSE			 equ	 20
1  1523		  =0015			 HTHELP				 equ	 21
1  1524					 ;
1  1525					 HTSIZE				 equ	 HTGROWBOX
1  1526					 HTREDUCE			 equ	 HTMINBUTTON
1  1527					 HTZOOM				 equ	 HTMAXBUTTON
1  1528					 ;
1  1529					 ;------------------------------------------------------------------------------
1  1530					 ;
1  1531					 ; ===================
1  1532					 ; toolbar bitmap id's
1  1533					 ; ===================
1  1534					 ;
1  1535		  =0000			 IDB_STD_SMALL_COLOR		 equ	  0
1  1536		  =0001			 IDB_STD_LARGE_COLOR		 equ	  1
1  1537		  =0004			 IDB_VIEW_SMALL_COLOR		 equ	  4
1  1538		  =0005			 IDB_VIEW_LARGE_COLOR		 equ	  5
1  1539					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 28
JANE.ASM



1  1540		  =-0001		 HINST_COMMCTRL			 equ	 -1
1  1541					 ;
1  1542					 ;------------------------------------------------------------------------------
1  1543					 ;
1  1544					 ; ====================
1  1545					 ; standard cursor id's
1  1546					 ; ====================
1  1547					 ;
1  1548		  =7F00			 IDC_ARROW			 equ	 32512
1  1549		  =7F01			 IDC_IBEAM			 equ	 32513
1  1550		  =7F02			 IDC_WAIT			 equ	 32514
1  1551		  =7F03			 IDC_CROSS			 equ	 32515
1  1552		  =7F04			 IDC_UPARROW			 equ	 32516
1  1553		  =7F80			 IDC_SIZE			 equ	 32640	 ;obsolete, use	IDC_SIZEALL
1  1554		  =7F81			 IDC_ICON			 equ	 32641	 ;obsolete, use	IDC_ARROW
1  1555		  =7F82			 IDC_SIZENWSE			 equ	 32642
1  1556		  =7F83			 IDC_SIZENESW			 equ	 32643
1  1557		  =7F84			 IDC_SIZEWE			 equ	 32644
1  1558		  =7F85			 IDC_SIZENS			 equ	 32645
1  1559		  =7F86			 IDC_SIZEALL			 equ	 32646
1  1560		  =7F88			 IDC_NO				 equ	 32648
1  1561		  =7F8A			 IDC_APPSTARTING		 equ	 32650
1  1562		  =7F8B			 IDC_HELP			 equ	 32651
1  1563					 ;
1  1564					 ;------------------------------------------------------------------------------
1  1565					 ;
1  1566					 ; ==================
1  1567					 ; standard icon id's
1  1568					 ; ==================
1  1569					 ;
1  1570		  =7F00			 IDI_APPLICATION		 equ	 32512
1  1571		  =7F01			 IDI_HAND			 equ	 32513
1  1572		  =7F02			 IDI_QUESTION			 equ	 32514
1  1573		  =7F03			 IDI_EXCLAMATION		 equ	 32515
1  1574		  =7F04			 IDI_ASTERISK			 equ	 32516
1  1575		  =7F05			 IDI_WINLOGO			 equ	 32517
1  1576					 ;
1  1577					 ;------------------------------------------------------------------------------
1  1578					 ;
1  1579					 ; ===================
1  1580					 ; dialog command id's
1  1581					 ; ===================
1  1582					 ;
1  1583		  =0001			 IDOK				 equ	 1
1  1584		  =0002			 IDCANCEL			 equ	 2
1  1585		  =0003			 IDABORT			 equ	 3
1  1586		  =0004			 IDRETRY			 equ	 4
1  1587		  =0005			 IDIGNORE			 equ	 5
1  1588		  =0006			 IDYES				 equ	 6
1  1589		  =0007			 IDNO				 equ	 7
1  1590		  =0008			 IDCLOSE			 equ	 8
1  1591		  =0009			 IDHELP				 equ	 9
1  1592					 ;
1  1593					 ;------------------------------------------------------------------------------
1  1594					 ;
1  1595					 ; =============================
1  1596					 ; keyboard message lParam flags
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 29
JANE.ASM



1  1597					 ; =============================
1  1598					 ;
1  1599		  =0100			 KF_EXTENDED			 equ	 0100h
1  1600		  =0800			 KF_DLGMODE			 equ	 0800h
1  1601		  =1000			 KF_MENUMODE			 equ	 1000h
1  1602		  =2000			 KF_ALTDOWN			 equ	 2000h
1  1603		  =4000			 KF_REPEAT			 equ	 4000h
1  1604		  =8000			 KF_UP				 equ	 8000h
1  1605					 ;
1  1606					 ;------------------------------------------------------------------------------
1  1607					 ;
1  1608					 ; ================
1  1609					 ; listbox messages
1  1610					 ; ================
1  1611					 ;
1  1612		  =0180			 LB_ADDSTRING			 equ	 0180h
1  1613		  =0181			 LB_INSERTSTRING		 equ	 0181h
1  1614		  =0182			 LB_DELETESTRING		 equ	 0182h
1  1615		  =0183			 LB_SELITEMRANGEEX		 equ	 0183h
1  1616		  =0184			 LB_RESETCONTENT		 equ	 0184h
1  1617		  =0185			 LB_SETSEL			 equ	 0185h
1  1618		  =0186			 LB_SETCURSEL			 equ	 0186h
1  1619		  =0187			 LB_GETSEL			 equ	 0187h
1  1620		  =0188			 LB_GETCURSEL			 equ	 0188h
1  1621		  =0189			 LB_GETTEXT			 equ	 0189h
1  1622		  =018A			 LB_GETTEXTLEN			 equ	 018Ah
1  1623		  =018B			 LB_GETCOUNT			 equ	 018Bh
1  1624		  =018C			 LB_SELECTSTRING		 equ	 018Ch
1  1625		  =018D			 LB_DIR				 equ	 018Dh
1  1626		  =018E			 LB_GETTOPINDEX			 equ	 018Eh
1  1627		  =018F			 LB_FINDSTRING			 equ	 018Fh
1  1628		  =0190			 LB_GETSELCOUNT			 equ	 0190h
1  1629		  =0191			 LB_GETSELITEMS			 equ	 0191h
1  1630		  =0192			 LB_SETTABSTOPS			 equ	 0192h
1  1631		  =0193			 LB_GETHORIZONTALEXTENT		 equ	 0193h
1  1632		  =0194			 LB_SETHORIZONTALEXTENT		 equ	 0194h
1  1633		  =0195			 LB_SETCOLUMNWIDTH		 equ	 0195h
1  1634		  =0196			 LB_ADDFILE			 equ	 0196h
1  1635		  =0197			 LB_SETTOPINDEX			 equ	 0197h
1  1636		  =0198			 LB_GETITEMRECT			 equ	 0198h
1  1637		  =0199			 LB_GETITEMDATA			 equ	 0199h
1  1638		  =019A			 LB_SETITEMDATA			 equ	 019Ah
1  1639		  =019B			 LB_SELITEMRANGE		 equ	 019Bh
1  1640		  =019C			 LB_SETANCHORINDEX		 equ	 019Ch
1  1641		  =019D			 LB_GETANCHORINDEX		 equ	 019Dh
1  1642		  =019E			 LB_SETCARETINDEX		 equ	 019Eh
1  1643		  =019F			 LB_GETCARETINDEX		 equ	 019Fh
1  1644		  =01A0			 LB_SETITEMHEIGHT		 equ	 01A0h
1  1645		  =01A1			 LB_GETITEMHEIGHT		 equ	 01A1h
1  1646		  =01A2			 LB_FINDSTRINGEXACT		 equ	 01A2h
1  1647		  =01A5			 LB_SETLOCALE			 equ	 01A5h
1  1648		  =01A6			 LB_GETLOCALE			 equ	 01A6h
1  1649		  =01A7			 LB_SETCOUNT			 equ	 01A7h
1  1650		  =01A8			 LB_INITSTORAGE			 equ	 01A8h
1  1651		  =01A9			 LB_ITEMFROMPOINT		 equ	 01A9h
1  1652		  =01B0			 LB_MSGMAX			 equ	 01B0h
1  1653					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 30
JANE.ASM



1  1654					 ;------------------------------------------------------------------------------
1  1655					 ;
1  1656					 ; =====================
1  1657					 ; listbox return values
1  1658					 ; =====================
1  1659					 ;
1  1660		  =0000			 LB_OKAY			 equ	  0
1  1661		  =-0001		 LB_ERR				 equ	 -1
1  1662		  =-0002		 LB_ERRSPACE			 equ	 -2
1  1663					 ;
1  1664					 ;------------------------------------------------------------------------------
1  1665					 ;
1  1666					 ; ==========================
1  1667					 ; listbox notification	codes
1  1668					 ; ==========================
1  1669					 ;
1  1670		  =-0002		 LBN_ERRSPACE			 equ	 -2
1  1671		  =0001			 LBN_SELCHANGE			 equ	  1
1  1672		  =0002			 LBN_DBLCLK			 equ	  2
1  1673		  =0003			 LBN_SELCANCEL			 equ	  3
1  1674		  =0004			 LBN_SETFOCUS			 equ	  4
1  1675		  =0005			 LBN_KILLFOCUS			 equ	  5
1  1676					 ;
1  1677					 ;------------------------------------------------------------------------------
1  1678					 ;
1  1679					 ; ==============
1  1680					 ; listbox styles
1  1681					 ; ==============
1  1682					 ;
1  1683		  =0001			 LBS_NOTIFY			 equ	 00000001h
1  1684		  =0002			 LBS_SORT			 equ	 00000002h
1  1685		  =0004			 LBS_NOREDRAW			 equ	 00000004h
1  1686		  =0008			 LBS_MULTIPLESEL		 equ	 00000008h
1  1687		  =0010			 LBS_OWNERDRAWFIXED		 equ	 00000010h
1  1688		  =0020			 LBS_OWNERDRAWVARIABLE		 equ	 00000020h
1  1689		  =0040			 LBS_HASSTRINGS			 equ	 00000040h
1  1690		  =0080			 LBS_USETABSTOPS		 equ	 00000080h
1  1691		  =0100			 LBS_NOINTEGRALHEIGHT		 equ	 00000100h
1  1692		  =0200			 LBS_MULTICOLUMN		 equ	 00000200h
1  1693		  =0400			 LBS_WANTKEYBOARDINPUT		 equ	 00000400h
1  1694		  =0800			 LBS_EXTENDEDSEL		 equ	 00000800h
1  1695		  =1000			 LBS_DISABLENOSCROLL		 equ	 00001000h
1  1696		  =2000			 LBS_NODATA			 equ	 00002000h
1  1697		  =4000			 LBS_NOSEL			 equ	 00004000h
1  1698		  =00A00003		 LBS_STANDARD			 equ	 00A00003h
1  1699					 ;
1  1700					 ;------------------------------------------------------------------------------
1  1701					 ;
1  1702					 ; ==================
1  1703					 ; local memory	flags
1  1704					 ; ==================
1  1705					 ;
1  1706		  =0000			 LMEM_FIXED			 equ	 0000h
1  1707		  =0002			 LMEM_MOVEABLE			 equ	 0002h
1  1708		  =0010			 LMEM_NOCOMPACT			 equ	 0010h
1  1709		  =0020			 LMEM_NODISCARD			 equ	 0020h
1  1710		  =0040			 LMEM_ZEROINIT			 equ	 0040h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 31
JANE.ASM



1  1711		  =0080			 LMEM_MODIFY			 equ	 0080h
1  1712		  =00FF			 LMEM_LOCKCOUNT			 equ	 00FFh
1  1713		  =0F00			 LMEM_DISCARDABLE		 equ	 0F00h
1  1714		  =4000			 LMEM_DISCARDED			 equ	 4000h
1  1715		  =8000			 LMEM_INVALID_HANDLE		 equ	 8000h
1  1716					 ;
1  1717		  =0F72			 LMEM_VALID_FLAGS		 equ	 0F72h
1  1718					 ;
1  1719					 NONZEROLHND			 equ	 LMEM_MOVEABLE
1  1720					 NONZEROLPTR			 equ	 LMEM_FIXED
1  1721					 ;
1  1722		  =0042			 LHND				 equ	 LMEM_ZEROINIT+LMEM_MOVEABLE
1  1723		  =0040			 LPTR				 equ	 LMEM_ZEROINIT+LMEM_FIXED
1  1724					 ;
1  1725					 ;------------------------------------------------------------------------------
1  1726					 ;
1  1727					 ; ==================
1  1728					 ; list	view messages
1  1729					 ; ==================
1  1730					 ;
1  1731		  =1000			 LVM_FIRST			 equ	 1000h
1  1732					 ;
1  1733		  =1000			 LVM_GETBKCOLOR			 equ	 LVM_FIRST+000
1  1734		  =1001			 LVM_SETBKCOLOR			 equ	 LVM_FIRST+001
1  1735		  =1002			 LVM_GETIMAGELIST		 equ	 LVM_FIRST+002
1  1736		  =1003			 LVM_SETIMAGELIST		 equ	 LVM_FIRST+003
1  1737		  =1004			 LVM_GETITEMCOUNT		 equ	 LVM_FIRST+004
1  1738		  =1005			 LVM_GETITEMA			 equ	 LVM_FIRST+005
1  1739		  =1006			 LVM_SETITEMA			 equ	 LVM_FIRST+006
1  1740		  =1007			 LVM_INSERTITEMA		 equ	 LVM_FIRST+007
1  1741		  =1008			 LVM_DELETEITEM			 equ	 LVM_FIRST+008
1  1742		  =1009			 LVM_DELETEALLITEMS		 equ	 LVM_FIRST+009
1  1743		  =100A			 LVM_GETCALLBACKMASK		 equ	 LVM_FIRST+010
1  1744		  =100B			 LVM_SETCALLBACKMASK		 equ	 LVM_FIRST+011
1  1745		  =100C			 LVM_GETNEXTITEM		 equ	 LVM_FIRST+012
1  1746		  =100D			 LVM_FINDITEMA			 equ	 LVM_FIRST+013
1  1747		  =100E			 LVM_GETITEMRECT		 equ	 LVM_FIRST+014
1  1748		  =100F			 LVM_SETITEMPOSITION		 equ	 LVM_FIRST+015
1  1749		  =1010			 LVM_GETITEMPOSITION		 equ	 LVM_FIRST+016
1  1750		  =1011			 LVM_GETSTRINGWIDTHA		 equ	 LVM_FIRST+017
1  1751		  =1012			 LVM_HITTEST			 equ	 LVM_FIRST+018
1  1752		  =1013			 LVM_ENSUREVISIBLE		 equ	 LVM_FIRST+019
1  1753		  =1014			 LVM_SCROLL			 equ	 LVM_FIRST+020
1  1754		  =1015			 LVM_REDRAWITEMS		 equ	 LVM_FIRST+021
1  1755		  =1016			 LVM_ARRANGE			 equ	 LVM_FIRST+022
1  1756		  =1017			 LVM_EDITLABELA			 equ	 LVM_FIRST+023
1  1757		  =1018			 LVM_GETEDITCONTROL		 equ	 LVM_FIRST+024
1  1758		  =1019			 LVM_GETCOLUMNA			 equ	 LVM_FIRST+025
1  1759		  =101A			 LVM_SETCOLUMNA			 equ	 LVM_FIRST+026
1  1760		  =101B			 LVM_INSERTCOLUMNA		 equ	 LVM_FIRST+027
1  1761		  =101C			 LVM_DELETECOLUMN		 equ	 LVM_FIRST+028
1  1762		  =101D			 LVM_GETCOLUMNWIDTH		 equ	 LVM_FIRST+029
1  1763		  =101E			 LVM_SETCOLUMNWIDTH		 equ	 LVM_FIRST+030
1  1764		  =1021			 LVM_CREATEDRAGIMAGE		 equ	 LVM_FIRST+033
1  1765		  =1022			 LVM_GETVIEWRECT		 equ	 LVM_FIRST+034
1  1766		  =1023			 LVM_GETTEXTCOLOR		 equ	 LVM_FIRST+035
1  1767		  =1024			 LVM_SETTEXTCOLOR		 equ	 LVM_FIRST+036
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 32
JANE.ASM



1  1768		  =1025			 LVM_GETTEXTBKCOLOR		 equ	 LVM_FIRST+037
1  1769		  =1026			 LVM_SETTEXTBKCOLOR		 equ	 LVM_FIRST+038
1  1770		  =1027			 LVM_GETTOPINDEX		 equ	 LVM_FIRST+039
1  1771		  =1028			 LVM_GETCOUNTPERPAGE		 equ	 LVM_FIRST+040
1  1772		  =1029			 LVM_GETORIGIN			 equ	 LVM_FIRST+041
1  1773		  =102A			 LVM_UPDATE			 equ	 LVM_FIRST+042
1  1774		  =102B			 LVM_SETITEMSTATE		 equ	 LVM_FIRST+043
1  1775		  =102C			 LVM_GETITEMSTATE		 equ	 LVM_FIRST+044
1  1776		  =102D			 LVM_GETITEMTEXTA		 equ	 LVM_FIRST+045
1  1777		  =102E			 LVM_SETITEMTEXTA		 equ	 LVM_FIRST+046
1  1778		  =102F			 LVM_SETITEMCOUNT		 equ	 LVM_FIRST+047
1  1779		  =1030			 LVM_SORTITEMS			 equ	 LVM_FIRST+048
1  1780		  =1031			 LVM_SETITEMPOSITION32		 equ	 LVM_FIRST+049
1  1781		  =1032			 LVM_GETSELECTEDCOUNT		 equ	 LVM_FIRST+050
1  1782		  =1033			 LVM_GETITEMSPACING		 equ	 LVM_FIRST+051
1  1783		  =1034			 LVM_GETISEARCHSTRINGA		 equ	 LVM_FIRST+052
1  1784					 ;
1  1785		  =104B			 LVM_GETITEMW			 equ	 LVM_FIRST+075
1  1786		  =104C			 LVM_SETITEMW			 equ	 LVM_FIRST+076
1  1787		  =104D			 LVM_INSERTITEMW		 equ	 LVM_FIRST+077
1  1788		  =1053			 LVM_FINDITEMW			 equ	 LVM_FIRST+083
1  1789		  =1057			 LVM_GETSTRINGWIDTHW		 equ	 LVM_FIRST+087
1  1790		  =105F			 LVM_GETCOLUMNW			 equ	 LVM_FIRST+095
1  1791		  =1060			 LVM_SETCOLUMNW			 equ	 LVM_FIRST+096
1  1792		  =1061			 LVM_INSERTCOLUMNW		 equ	 LVM_FIRST+097
1  1793		  =1073			 LVM_GETITEMTEXTW		 equ	 LVM_FIRST+115
1  1794		  =1074			 LVM_SETITEMTEXTW		 equ	 LVM_FIRST+116
1  1795		  =1075			 LVM_GETISEARCHSTRINGW		 equ	 LVM_FIRST+117
1  1796		  =1076			 LVM_EDITLABELW			 equ	 LVM_FIRST+118
1  1797					 ;
1  1798					 LVM_GETITEM			 equ	 LVM_GETITEMA
1  1799					 LVM_SETITEM			 equ	 LVM_SETITEMA
1  1800					 LVM_INSERTITEM			 equ	 LVM_INSERTITEMA
1  1801					 LVM_FINDITEM			 equ	 LVM_FINDITEMA
1  1802					 LVM_GETSTRINGWIDTH		 equ	 LVM_GETSTRINGWIDTHA
1  1803					 LVM_GETCOLUMN			 equ	 LVM_GETCOLUMNA
1  1804					 LVM_SETCOLUMN			 equ	 LVM_SETCOLUMNA
1  1805					 LVM_INSERTCOLUMN		 equ	 LVM_INSERTCOLUMNA
1  1806					 LVM_GETITEMTEXT		 equ	 LVM_GETITEMTEXTA
1  1807					 LVM_SETITEMTEXT		 equ	 LVM_SETITEMTEXTA
1  1808					 LVM_GETISEARCHSTRING		 equ	 LVM_GETISEARCHSTRINGA
1  1809					 LVM_EDITLABEL			 equ	 LVM_EDITLABELA
1  1810					 ;
1  1811					 ;------------------------------------------------------------------------------
1  1812					 ;
1  1813					 ; =======================
1  1814					 ; list	view notifications
1  1815					 ; =======================
1  1816					 ;
1  1817		  =-0064		 LVN_FIRST			 equ	 -100
1  1818		  =-00C7		 LVN_LAST			 equ	 LVN_FIRST-99
1  1819					 ;
1  1820		  =-0064		 LVN_ITEMCHANGING		 equ	 LVN_FIRST-00
1  1821		  =-0065		 LVN_ITEMCHANGED		 equ	 LVN_FIRST-01
1  1822		  =-0066		 LVN_INSERTITEM			 equ	 LVN_FIRST-02
1  1823		  =-0067		 LVN_DELETEITEM			 equ	 LVN_FIRST-03
1  1824		  =-0068		 LVN_DELETEALLITEMS		 equ	 LVN_FIRST-04
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 33
JANE.ASM



1  1825		  =-0069		 LVN_BEGINLABELEDITA		 equ	 LVN_FIRST-05
1  1826		  =-006A		 LVN_ENDLABELEDITA		 equ	 LVN_FIRST-06
1  1827		  =-006C		 LVN_COLUMNCLICK		 equ	 LVN_FIRST-08
1  1828		  =-006D		 LVN_BEGINDRAG			 equ	 LVN_FIRST-09
1  1829		  =-006F		 LVN_BEGINRDRAG			 equ	 LVN_FIRST-11
1  1830		  =-0096		 LVN_GETDISPINFOA		 equ	 LVN_FIRST-50
1  1831		  =-0097		 LVN_SETDISPINFOA		 equ	 LVN_FIRST-51
1  1832					 ;
1  1833		  =-00AF		 LVN_BEGINLABELEDITW		 equ	 LVN_FIRST-75
1  1834		  =-00B0		 LVN_ENDLABELEDITW		 equ	 LVN_FIRST-76
1  1835		  =-00B1		 LVN_GETDISPINFOW		 equ	 LVN_FIRST-77
1  1836		  =-00B2		 LVN_SETDISPINFOW		 equ	 LVN_FIRST-78
1  1837					 ;
1  1838					 LVN_BEGINLABELEDIT		 equ	 LVN_BEGINLABELEDITA
1  1839					 LVN_ENDLABELEDIT		 equ	 LVN_ENDLABELEDITA
1  1840					 LVN_GETDISPINFO		 equ	 LVN_GETDISPINFOA
1  1841					 LVN_SETDISPINFO		 equ	 LVN_SETDISPINFOA
1  1842					 ;
1  1843					 ;------------------------------------------------------------------------------
1  1844					 ;
1  1845					 ; ================
1  1846					 ; list	view styles
1  1847					 ; ================
1  1848					 ;
1  1849		  =0003			 LVS_TYPEMASK			 equ	 00000003h
1  1850		  =0000			 LVS_ICON			 equ	 00000000h
1  1851		  =0001			 LVS_REPORT			 equ	 00000001h
1  1852		  =0002			 LVS_SMALLICON			 equ	 00000002h
1  1853		  =0003			 LVS_LIST			 equ	 00000003h
1  1854					 ;
1  1855		  =0004			 LVS_SINGLESEL			 equ	 00000004h
1  1856		  =0008			 LVS_SHOWSELALWAYS		 equ	 00000008h
1  1857		  =0010			 LVS_SORTASCENDING		 equ	 00000010h
1  1858		  =0020			 LVS_SORTDESCENDING		 equ	 00000020h
1  1859		  =0040			 LVS_SHAREIMAGELISTS		 equ	 00000040h
1  1860		  =0080			 LVS_NOLABELWRAP		 equ	 00000080h
1  1861		  =0100			 LVS_AUTOARRANGE		 equ	 00000100h
1  1862		  =0200			 LVS_EDITLABELS			 equ	 00000200h
1  1863					 ;
1  1864		  =FC00			 LVS_TYPESTYLEMASK		 equ	 0000FC00h
1  1865					 ;
1  1866		  =0C00			 LVS_ALIGNMASK			 equ	 00000C00h
1  1867		  =0000			 LVS_ALIGNTOP			 equ	 00000000h
1  1868		  =0400			 LVS_OWNERDRAWFIXED		 equ	 00000400h
1  1869		  =0800			 LVS_ALIGNLEFT			 equ	 00000800h
1  1870					 ;
1  1871		  =2000			 LVS_NOSCROLL			 equ	 00002000h
1  1872		  =4000			 LVS_NOCOLUMNHEADER		 equ	 00004000h
1  1873		  =8000			 LVS_NOSORTHEADER		 equ	 00008000h
1  1874					 ;
1  1875					 ;------------------------------------------------------------------------------
1  1876					 ;
1  1877					 ; ==================
1  1878					 ; MessageBox()	flags
1  1879					 ; ==================
1  1880					 ;
1  1881		  =0000			 MB_OK				 equ	 00000000h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 34
JANE.ASM



1  1882		  =0001			 MB_OKCANCEL			 equ	 00000001h
1  1883		  =0002			 MB_ABORTRETRYIGNORE		 equ	 00000002h
1  1884		  =0003			 MB_YESNOCANCEL			 equ	 00000003h
1  1885		  =0004			 MB_YESNO			 equ	 00000004h
1  1886		  =0005			 MB_RETRYCANCEL			 equ	 00000005h
1  1887					 ;
1  1888		  =0010			 MB_ICONHAND			 equ	 00000010h
1  1889		  =0020			 MB_ICONQUESTION		 equ	 00000020h
1  1890		  =0030			 MB_ICONEXCLAMATION		 equ	 00000030h
1  1891		  =0040			 MB_ICONASTERISK		 equ	 00000040h
1  1892					 ;
1  1893					 MB_ICONWARNING			 equ	 MB_ICONEXCLAMATION
1  1894					 MB_ICONERROR			 equ	 MB_ICONHAND
1  1895					 MB_ICONINFORMATION		 equ	 MB_ICONASTERISK
1  1896					 MB_ICONSTOP			 equ	 MB_ICONHAND
1  1897					 ;
1  1898		  =0000			 MB_DEFBUTTON1			 equ	 00000000h
1  1899		  =0100			 MB_DEFBUTTON2			 equ	 00000100h
1  1900		  =0200			 MB_DEFBUTTON3			 equ	 00000200h
1  1901		  =0300			 MB_DEFBUTTON4			 equ	 00000300h
1  1902					 ;
1  1903		  =0000			 MB_APPLMODAL			 equ	 00000000h
1  1904		  =1000			 MB_SYSTEMMODAL			 equ	 00001000h
1  1905		  =2000			 MB_TASKMODAL			 equ	 00002000h
1  1906		  =4000			 MB_HELP			 equ	 00004000h
1  1907		  =00080000		 MB_RIGHT			 equ	 00080000h
1  1908		  =00100000		 MB_RTLREADING			 equ	 00100000h
1  1909					 ;
1  1910		  =8000			 MB_NOFOCUS			 equ	 00008000h
1  1911		  =00010000		 MB_SETFOREGROUND		 equ	 00010000h
1  1912		  =00020000		 MB_DEFAULT_DESKTOP_ONLY	 equ	 00020000h
1  1913		  =00040000		 MB_SERVICE_NOTIFICATION	 equ	 00040000h
1  1914					 ;
1  1915		  =000F			 MB_TYPEMASK			 equ	 0000000Fh
1  1916		  =0080			 MB_USERICON			 equ	 00000080h
1  1917		  =00F0			 MB_ICONMASK			 equ	 000000F0h
1  1918		  =0F00			 MB_DEFMASK			 equ	 00000F00h
1  1919		  =3000			 MB_MODEMASK			 equ	 00003000h
1  1920		  =C000			 MB_MISCMASK			 equ	 0000C000h
1  1921					 ;
1  1922					 ;------------------------------------------------------------------------------
1  1923					 ;
1  1924					 ; ==========
1  1925					 ; menu	flags
1  1926					 ; ==========
1  1927					 ;
1  1928		  =0000			 MF_INSERT			 equ	 00000000h
1  1929		  =0080			 MF_CHANGE			 equ	 00000080h
1  1930		  =0100			 MF_APPEND			 equ	 00000100h
1  1931		  =0200			 MF_DELETE			 equ	 00000200h
1  1932		  =1000			 MF_REMOVE			 equ	 00001000h
1  1933					 ;
1  1934		  =0000			 MF_BYCOMMAND			 equ	 00000000h
1  1935		  =0400			 MF_BYPOSITION			 equ	 00000400h
1  1936					 ;
1  1937		  =0800			 MF_SEPARATOR			 equ	 00000800h
1  1938					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 35
JANE.ASM



1  1939		  =0000			 MF_ENABLED			 equ	 00000000h
1  1940		  =0001			 MF_GRAYED			 equ	 00000001h
1  1941		  =0002			 MF_DISABLED			 equ	 00000002h
1  1942					 ;
1  1943		  =0000			 MF_UNCHECKED			 equ	 00000000h
1  1944		  =0008			 MF_CHECKED			 equ	 00000008h
1  1945		  =0200			 MF_USECHECKBITMAPS		 equ	 00000200h
1  1946					 ;
1  1947		  =0000			 MF_STRING			 equ	 00000000h
1  1948		  =0004			 MF_BITMAP			 equ	 00000004h
1  1949		  =0100			 MF_OWNERDRAW			 equ	 00000100h
1  1950					 ;
1  1951		  =0010			 MF_POPUP			 equ	 00000010h
1  1952		  =0020			 MF_MENUBARBREAK		 equ	 00000020h
1  1953		  =0040			 MF_MENUBREAK			 equ	 00000040h
1  1954					 ;
1  1955		  =0000			 MF_UNHILITE			 equ	 00000000h
1  1956		  =0080			 MF_HILITE			 equ	 00000080h
1  1957					 ;
1  1958		  =1000			 MF_DEFAULT			 equ	 00001000h
1  1959		  =2000			 MF_SYSMENU			 equ	 00002000h
1  1960		  =4000			 MF_HELP			 equ	 00004000h
1  1961		  =4000			 MF_RIGHTJUSTIFY		 equ	 00004000h
1  1962					 ;
1  1963		  =8000			 MF_MOUSESELECT			 equ	 00008000h
1  1964		  =0080			 MF_END				 equ	 00000080h	 ;obsolete
1  1965					 ;
1  1966					 MFT_STRING			 equ	 MF_STRING
1  1967					 MFT_BITMAP			 equ	 MF_BITMAP
1  1968					 MFT_MENUBARBREAK		 equ	 MF_MENUBARBREAK
1  1969					 MFT_MENUBREAK			 equ	 MF_MENUBREAK
1  1970					 MFT_OWNERDRAW			 equ	 MF_OWNERDRAW
1  1971		  =0200			 MFT_RADIOCHECK			 equ	 00000200h
1  1972					 MFT_SEPARATOR			 equ	 MF_SEPARATOR
1  1973		  =2000			 MFT_RIGHTORDER			 equ	 00002000h
1  1974					 MFT_RIGHTJUSTIFY		 equ	 MF_RIGHTJUSTIFY
1  1975					 ;
1  1976		  =0003			 MFS_GRAYED			 equ	 00000003h
1  1977					 MFS_DISABLED			 equ	 MFS_GRAYED
1  1978					 MFS_CHECKED			 equ	 MF_CHECKED
1  1979					 MFS_HILITE			 equ	 MF_HILITE
1  1980					 MFS_ENABLED			 equ	 MF_ENABLED
1  1981					 MFS_UNCHECKED			 equ	 MF_UNCHECKED
1  1982					 MFS_UNHILITE			 equ	 MF_UNHILITE
1  1983					 MFS_DEFAULT			 equ	 MF_DEFAULT
1  1984					 ;
1  1985					 ;------------------------------------------------------------------------------
1  1986					 ;
1  1987					 ; ========================
1  1988					 ; mouse message key states
1  1989					 ; ========================
1  1990					 ;
1  1991		  =0001			 MK_LBUTTON			 equ	 0001h
1  1992		  =0002			 MK_RBUTTON			 equ	 0002h
1  1993		  =0004			 MK_SHIFT			 equ	 0004h
1  1994		  =0008			 MK_CONTROL			 equ	 0008h
1  1995		  =0010			 MK_MBUTTON			 equ	 0010h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 36
JANE.ASM



1  1996					 ;
1  1997					 ;------------------------------------------------------------------------------
1  1998					 ;
1  1999					 ; ==================
1  2000					 ; owner draw actions
1  2001					 ; ==================
1  2002					 ;
1  2003		  =0001			 ODA_DRAWENTIRE			 equ	 0001h
1  2004		  =0002			 ODA_SELECT			 equ	 0002h
1  2005		  =0004			 ODA_FOCUS			 equ	 0004h
1  2006					 ;
1  2007					 ;------------------------------------------------------------------------------
1  2008					 ;
1  2009					 ; =================
1  2010					 ; owner draw states
1  2011					 ; =================
1  2012					 ;
1  2013		  =0001			 ODS_SELECTED			 equ	 0001h
1  2014		  =0002			 ODS_GRAYED			 equ	 0002h
1  2015		  =0004			 ODS_DISABLED			 equ	 0004h
1  2016		  =0008			 ODS_CHECKED			 equ	 0008h
1  2017		  =0010			 ODS_FOCUS			 equ	 0010h
1  2018		  =0020			 ODS_DEFAULT			 equ	 0020h
1  2019		  =1000			 ODS_COMBOBOXEDIT		 equ	 1000h
1  2020					 ;
1  2021					 ;------------------------------------------------------------------------------
1  2022					 ;
1  2023					 ; ================
1  2024					 ; owner draw types
1  2025					 ; ================
1  2026					 ;
1  2027		  =0001			 ODT_MENU			 equ	 1
1  2028		  =0002			 ODT_LISTBOX			 equ	 2
1  2029		  =0003			 ODT_COMBOBOX			 equ	 3
1  2030		  =0004			 ODT_BUTTON			 equ	 4
1  2031		  =0005			 ODT_STATIC			 equ	 5
1  2032					 ;
1  2033					 ;------------------------------------------------------------------------------
1  2034					 ;
1  2035					 ; ==================
1  2036					 ; OPENFILENAME	flags
1  2037					 ; ==================
1  2038					 ;
1  2039		  =0001			 OFN_READONLY			 equ	 00000001h
1  2040		  =0002			 OFN_OVERWRITEPROMPT		 equ	 00000002h
1  2041		  =0004			 OFN_HIDEREADONLY		 equ	 00000004h
1  2042		  =0008			 OFN_NOCHANGEDIR		 equ	 00000008h
1  2043		  =0010			 OFN_SHOWHELP			 equ	 00000010h
1  2044		  =0020			 OFN_ENABLEHOOK			 equ	 00000020h
1  2045		  =0040			 OFN_ENABLETEMPLATE		 equ	 00000040h
1  2046		  =0080			 OFN_ENABLETEMPLATEHANDLE	 equ	 00000080h
1  2047		  =0100			 OFN_NOVALIDATE			 equ	 00000100h
1  2048		  =0200			 OFN_ALLOWMULTISELECT		 equ	 00000200h
1  2049		  =0400			 OFN_EXTENSIONDIFFERENT		 equ	 00000400h
1  2050		  =0800			 OFN_PATHMUSTEXIST		 equ	 00000800h
1  2051		  =1000			 OFN_FILEMUSTEXIST		 equ	 00001000h
1  2052		  =2000			 OFN_CREATEPROMPT		 equ	 00002000h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 37
JANE.ASM



1  2053		  =4000			 OFN_SHAREAWARE			 equ	 00004000h
1  2054		  =8000			 OFN_NOREADONLYRETURN		 equ	 00008000h
1  2055		  =00010000		 OFN_NOTESTFILECREATE		 equ	 00010000h
1  2056		  =00020000		 OFN_NONETWORKBUTTON		 equ	 00020000h
1  2057		  =00040000		 OFN_NOLONGNAMES		 equ	 00040000h
1  2058		  =00080000		 OFN_EXPLORER			 equ	 00080000h
1  2059		  =00100000		 OFN_NODEREFERENCELINKS		 equ	 00100000h
1  2060		  =00200000		 OFN_LONGNAMES			 equ	 00200000h
1  2061					 ;
1  2062					 ;------------------------------------------------------------------------------
1  2063					 ;
1  2064					 ; ==============================
1  2065					 ; OPENFILENAME	hook return codes
1  2066					 ; ==============================
1  2067					 ;
1  2068		  =0000			 OFN_SHAREWARN			 equ	 0
1  2069		  =0001			 OFN_SHARENOWARN		 equ	 1
1  2070		  =0002			 OFN_SHAREFALLTHROUGH		 equ	 2
1  2071					 ;
1  2072					 ;------------------------------------------------------------------------------
1  2073					 ;
1  2074					 ; ================
1  2075					 ; pipe	definitions
1  2076					 ; ================
1  2077					 ;
1  2078		  =0001			 PIPE_ACCESS_INBOUND		 equ	 00000001h
1  2079		  =0002			 PIPE_ACCESS_OUTBOUND		 equ	 00000002h
1  2080		  =0003			 PIPE_ACCESS_DUPLEX		 equ	 00000003h
1  2081					 ;
1  2082		  =0000			 PIPE_CLIENT_END		 equ	 00000000h
1  2083		  =0001			 PIPE_SERVER_END		 equ	 00000001h
1  2084					 ;
1  2085		  =0000			 PIPE_WAIT			 equ	 00000000h
1  2086		  =0001			 PIPE_NOWAIT			 equ	 00000001h
1  2087					 ;
1  2088		  =0000			 PIPE_READMODE_BYTE		 equ	 00000000h
1  2089		  =0002			 PIPE_READMODE_MESSAGE		 equ	 00000002h
1  2090					 ;
1  2091		  =0000			 PIPE_TYPE_BYTE			 equ	 00000000h
1  2092		  =0004			 PIPE_TYPE_MESSAGE		 equ	 00000004h
1  2093					 ;
1  2094		  =00FF			 PIPE_UNLIMITED_INSTANCES	 equ	 255
1  2095					 ;
1  2096					 ;------------------------------------------------------------------------------
1  2097					 ;
1  2098					 ; ====================
1  2099					 ; process access flags
1  2100					 ; ====================
1  2101					 ;
1  2102		  =0001			 PROCESS_TERMINATE		 equ	 0001h
1  2103		  =0002			 PROCESS_CREATE_THREAD		 equ	 0002h
1  2104		  =0008			 PROCESS_VM_OPERATION		 equ	 0008h
1  2105		  =0010			 PROCESS_VM_READ		 equ	 0010h
1  2106		  =0020			 PROCESS_VM_WRITE		 equ	 0020h
1  2107		  =0040			 PROCESS_DUP_HANDLE		 equ	 0040h
1  2108		  =0080			 PROCESS_CREATE_PROCESS		 equ	 0080h
1  2109		  =0100			 PROCESS_SET_QUOTA		 equ	 0100h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 38
JANE.ASM



1  2110		  =0200			 PROCESS_SET_INFORMATION	 equ	 0200h
1  2111		  =0400			 PROCESS_QUERY_INFORMATION	 equ	 0400h
1  2112					 ;
1  2113					 ;PROCESS_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SYNCHRONIZE+0FFFh
1  2114					 ;
1  2115					 ;------------------------------------------------------------------------------
1  2116					 ;
1  2117					 ; ========================
1  2118					 ; binary raster operations
1  2119					 ; ========================
1  2120					 ;
1  2121		  =0001			 R2_BLACK			 equ	  1		 ;0
1  2122		  =0002			 R2_NOTMERGEPEN			 equ	  2		 ;DPon
1  2123		  =0003			 R2_MASKNOTPEN			 equ	  3		 ;DPna
1  2124		  =0004			 R2_NOTCOPYPEN			 equ	  4		 ;PN
1  2125		  =0005			 R2_MASKPENNOT			 equ	  5		 ;PDna
1  2126		  =0006			 R2_NOT				 equ	  6		 ;Dn
1  2127		  =0007			 R2_XORPEN			 equ	  7		 ;DPx
1  2128		  =0008			 R2_NOTMASKPEN			 equ	  8		 ;DPan
1  2129		  =0009			 R2_MASKPEN			 equ	  9		 ;DPa
1  2130		  =000A			 R2_NOTXORPEN			 equ	 10		 ;DPxn
1  2131		  =000B			 R2_NOP				 equ	 11		 ;D
1  2132		  =000C			 R2_MERGENOTPEN			 equ	 12		 ;DPno
1  2133		  =000D			 R2_COPYPEN			 equ	 13		 ;P
1  2134		  =000E			 R2_MERGEPENNOT			 equ	 14		 ;PDno
1  2135		  =000F			 R2_MERGEPEN			 equ	 15		 ;DPo
1  2136		  =0010			 R2_WHITE			 equ	 16		 ;1
1  2137		  =0010			 R2_LAST			 equ	 16
1  2138					 ;
1  2139					 ;------------------------------------------------------------------------------
1  2140					 ;
1  2141					 ; =================
1  2142					 ; network resources
1  2143					 ; =================
1  2144					 ;
1  2145		  =0001			 RESOURCE_CONNECTED		 equ	 00000001h
1  2146		  =0002			 RESOURCE_GLOBALNET		 equ	 00000002h
1  2147		  =0003			 RESOURCE_REMEMBERED		 equ	 00000003h
1  2148		  =0004			 RESOURCE_RECENT		 equ	 00000004h
1  2149		  =0005			 RESOURCE_CONTEXT		 equ	 00000005h
1  2150					 ;
1  2151		  =0000			 RESOURCETYPE_ANY		 equ	 00000000h
1  2152		  =0001			 RESOURCETYPE_DISK		 equ	 00000001h
1  2153		  =0002			 RESOURCETYPE_PRINT		 equ	 00000002h
1  2154		  =0008			 RESOURCETYPE_RESERVED		 equ	 00000008h
1  2155		  =-0001		 RESOURCETYPE_UNKNOWN		 equ	 -1
1  2156					 ;
1  2157		  =0001			 RESOURCEUSAGE_CONNECTABLE	 equ	 00000001h
1  2158		  =0002			 RESOURCEUSAGE_CONTAINER	 equ	 00000002h
1  2159		  =0004			 RESOURCEUSAGE_NOLOCALDEVICE	 equ	 00000004h
1  2160		  =0008			 RESOURCEUSAGE_SIBLING		 equ	 00000008h
1  2161		  =80000000		 RESOURCEUSAGE_RESERVED		 equ	 80000000h
1  2162					 ;
1  2163		  =0003			 RESOURCEUSAGE_ALL		 equ	 RESOURCEUSAGE_CONNECTABLE+\
   2164										 RESOURCEUSAGE_CONTAINER
1  2165					 ;
1  2166		  =0000			 RESOURCEDISPLAYTYPE_GENERIC	 equ	 00000000h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 39
JANE.ASM



1  2167		  =0001			 RESOURCEDISPLAYTYPE_DOMAIN	 equ	 00000001h
1  2168		  =0002			 RESOURCEDISPLAYTYPE_SERVER	 equ	 00000002h
1  2169		  =0003			 RESOURCEDISPLAYTYPE_SHARE	 equ	 00000003h
1  2170		  =0004			 RESOURCEDISPLAYTYPE_FILE	 equ	 00000004h
1  2171		  =0005			 RESOURCEDISPLAYTYPE_GROUP	 equ	 00000005h
1  2172		  =0006			 RESOURCEDISPLAYTYPE_NETWORK	 equ	 00000006h
1  2173		  =0007			 RESOURCEDISPLAYTYPE_ROOT	 equ	 00000007h
1  2174		  =0008			 RESOURCEDISPLAYTYPE_SHAREADMIN	 equ	 00000008h
1  2175		  =0009			 RESOURCEDISPLAYTYPE_DIRECTORY	 equ	 00000009h
1  2176		  =000A			 RESOURCEDISPLAYTYPE_TREE	 equ	 0000000Ah
1  2177					 ;
1  2178					 ;------------------------------------------------------------------------------
1  2179					 ;
1  2180					 ; ==========
1  2181					 ; rgb colors
1  2182					 ; ==========
1  2183					 ;
1  2184		  =0000			 RGB_BLACK			 equ	 00000000h
1  2185		  =00202020		 RGB_VDKGRAY32			 equ	 00202020h
1  2186		  =00404040		 RGB_DKGRAY			 equ	 00404040h
1  2187		  =00808080		 RGB_SOLIDGRAY			 equ	 00808080h
1  2188		  =00C0C0C0		 RGB_SOLIDLTGRAY		 equ	 00C0C0C0h
1  2189		  =00E0E0E0		 RGB_EBONY			 equ	 00E0E0E0h
1  2190		  =00FF0000		 RGB_BLUE			 equ	 00FF0000h
1  2191		  =FF00			 RGB_GREEN			 equ	 0000FF00h
1  2192		  =00FF			 RGB_RED			 equ	 000000FFh
1  2193					 ;
1  2194		  =00FFFF00		 RGB_CYAN			 equ	 RGB_BLUE + RGB_GREEN
1  2195		  =00FF00FF		 RGB_MAGENTA			 equ	 RGB_BLUE	      +	RGB_RED
1  2196		  =FFFF			 RGB_YELLOW			 equ		    RGB_GREEN +	RGB_RED
1  2197		  =00FFFFFF		 RGB_WHITE			 equ	 RGB_BLUE + RGB_GREEN +	RGB_RED
1  2198					 ;
1  2199		  =00800000		 RGB_DKBLUE			 equ	 00800000h
1  2200		  =8000			 RGB_DKGREEN			 equ	 00008000h
1  2201		  =0080			 RGB_DKRED			 equ	 00000080h
1  2202					 ;
1  2203		  =00808000		 RGB_DKCYAN			 equ	 RGB_DKBLUE + RGB_DKGREEN
1  2204		  =00800080		 RGB_DKMAGENTA			 equ	 RGB_DKBLUE		  + RGB_DKRED
1  2205		  =8080			 RGB_DKYELLOW			 equ		      RGB_DKGREEN + RGB_DKRED
1  2206					 ;
1  2207					 ;------------------------------------------------------------------------------
1  2208					 ;
1  2209					 ; ===================
1  2210					 ; CombineRgn()	styles
1  2211					 ; ===================
1  2212					 ;
1  2213		  =0001			 RGN_AND			 equ	 1
1  2214		  =0002			 RGN_OR				 equ	 2
1  2215		  =0003			 RGN_XOR			 equ	 3
1  2216		  =0004			 RGN_DIFF			 equ	 4
1  2217		  =0005			 RGN_COPY			 equ	 5
1  2218					 RGN_MIN			 equ	 RGN_AND
1  2219					 RGN_MAX			 equ	 RGN_COPY
1  2220					 ;
1  2221					 ;------------------------------------------------------------------------------
1  2222					 ;
1  2223					 ; ====================
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 40
JANE.ASM



1  2224					 ; scroll bar constants
1  2225					 ; ====================
1  2226					 ;
1  2227		  =0000			 SB_HORZ			 equ	 0
1  2228		  =0001			 SB_VERT			 equ	 1
1  2229		  =0002			 SB_CTL				 equ	 2
1  2230		  =0003			 SB_BOTH			 equ	 3
1  2231					 ;
1  2232					 ;------------------------------------------------------------------------------
1  2233					 ;
1  2234					 ; ===================
1  2235					 ; scroll bar commands
1  2236					 ; ===================
1  2237					 ;
1  2238		  =0000			 SB_LINEUP			 equ	 0
1  2239		  =0000			 SB_LINELEFT			 equ	 0
1  2240		  =0001			 SB_LINEDOWN			 equ	 1
1  2241		  =0001			 SB_LINERIGHT			 equ	 1
1  2242		  =0002			 SB_PAGEUP			 equ	 2
1  2243		  =0002			 SB_PAGELEFT			 equ	 2
1  2244		  =0003			 SB_PAGEDOWN			 equ	 3
1  2245		  =0003			 SB_PAGERIGHT			 equ	 3
1  2246		  =0004			 SB_THUMBPOSITION		 equ	 4
1  2247		  =0005			 SB_THUMBTRACK			 equ	 5
1  2248		  =0006			 SB_TOP				 equ	 6
1  2249		  =0006			 SB_LEFT			 equ	 6
1  2250		  =0007			 SB_BOTTOM			 equ	 7
1  2251		  =0007			 SB_RIGHT			 equ	 7
1  2252		  =0008			 SB_ENDSCROLL			 equ	 8
1  2253					 ;
1  2254					 ;------------------------------------------------------------------------------
1  2255					 ;
1  2256					 ; ===================
1  2257					 ; status bar messages
1  2258					 ; ===================
1  2259					 ;
1  2260		  =0401			 SB_SETTEXTA			 equ	 WM_USER+01
1  2261		  =0402			 SB_GETTEXTA			 equ	 WM_USER+02
1  2262		  =0403			 SB_GETTEXTLENGTHA		 equ	 WM_USER+03
1  2263		  =0404			 SB_SETPARTS			 equ	 WM_USER+04
1  2264		  =0406			 SB_GETPARTS			 equ	 WM_USER+06
1  2265		  =0407			 SB_GETBORDERS			 equ	 WM_USER+07
1  2266		  =0408			 SB_SETMINHEIGHT		 equ	 WM_USER+08
1  2267		  =0409			 SB_SIMPLE			 equ	 WM_USER+09
1  2268		  =040A			 SB_GETRECT			 equ	 WM_USER+10
1  2269		  =040B			 SB_SETTEXTW			 equ	 WM_USER+11
1  2270		  =040C			 SB_GETTEXTLENGTHW		 equ	 WM_USER+12
1  2271		  =040D			 SB_GETTEXTW			 equ	 WM_USER+13
1  2272					 ;
1  2273					 SB_GETTEXT			 equ	 SB_GETTEXTA
1  2274					 SB_SETTEXT			 equ	 SB_SETTEXTA
1  2275					 SB_GETTEXTLENGTH		 equ	 SB_GETTEXTLENGTHA
1  2276					 ;
1  2277					 ;------------------------------------------------------------------------------
1  2278					 ;
1  2279					 ; ===================
1  2280					 ; scroll bar messages
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 41
JANE.ASM



1  2281					 ; ===================
1  2282					 ;
1  2283		  =00E0			 SBM_SETPOS			 equ	 00E0h
1  2284		  =00E1			 SBM_GETPOS			 equ	 00E1h
1  2285		  =00E2			 SBM_SETRANGE			 equ	 00E2h
1  2286		  =00E3			 SBM_GETRANGE			 equ	 00E3h
1  2287		  =00E4			 SBM_ENABLE_ARROWS		 equ	 00E4h
1  2288		  =00E6			 SBM_SETRANGEREDRAW		 equ	 00E6h
1  2289		  =00E9			 SBM_SETSCROLLINFO		 equ	 00E9h
1  2290		  =00EA			 SBM_GETSCROLLINFO		 equ	 00EAh
1  2291					 ;
1  2292					 ;------------------------------------------------------------------------------
1  2293					 ;
1  2294					 ; =================
1  2295					 ; scroll bar styles
1  2296					 ; =================
1  2297					 ;
1  2298		  =0000			 SBS_HORZ			 equ	 0000h
1  2299		  =0001			 SBS_VERT			 equ	 0001h
1  2300		  =0002			 SBS_TOPALIGN			 equ	 0002h
1  2301		  =0002			 SBS_LEFTALIGN			 equ	 0002h
1  2302		  =0004			 SBS_BOTTOMALIGN		 equ	 0004h
1  2303		  =0004			 SBS_RIGHTALIGN			 equ	 0004h
1  2304		  =0002			 SBS_SIZEBOXTOPLEFTALIGN	 equ	 0002h
1  2305		  =0004			 SBS_SIZEBOXBOTTOMRIGHTALIGN	 equ	 0004h
1  2306		  =0008			 SBS_SIZEBOX			 equ	 0008h
1  2307		  =0010			 SBS_SIZEGRIP			 equ	 0010h
1  2308					 ;
1  2309					 ;------------------------------------------------------------------------------
1  2310					 ;
1  2311					 ; ================
1  2312					 ; status bar types
1  2313					 ; ================
1  2314					 ;
1  2315		  =0000			 SBT_DEFAULT			 equ	 0000h
1  2316		  =0100			 SBT_NOBORDERS			 equ	 0100h
1  2317		  =0200			 SBT_POPOUT			 equ	 0200h
1  2318		  =0400			 SBT_RTLREADING			 equ	 0400h
1  2319		  =1000			 SBT_OWNERDRAW			 equ	 1000h
1  2320					 ;
1  2321					 ;------------------------------------------------------------------------------
1  2322					 ;
1  2323					 ; ===================
1  2324					 ; security attributes
1  2325					 ; ===================
1  2326					 ;
1  2327		  =0000			 SECURITY_ANONYMOUS		 equ	 00000000h
1  2328		  =00010000		 SECURITY_IDENTIFICATION	 equ	 00010000h
1  2329		  =00020000		 SECURITY_IMPERSONATION		 equ	 00020000h
1  2330		  =00030000		 SECURITY_DELEGATION		 equ	 00030000h
1  2331					 ;
1  2332		  =00040000		 SECURITY_CONTEXT_TRACKING	 equ	 00040000h
1  2333		  =00080000		 SECURITY_EFFECTIVE_ONLY	 equ	 00080000h
1  2334					 ;
1  2335		  =00100000		 SECURITY_SQOS_PRESENT		 equ	 00100000h
1  2336		  =001F0000		 SECURITY_VALID_SQOS_FLAGS	 equ	 001F0000h
1  2337					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 42
JANE.ASM



1  2338					 ;------------------------------------------------------------------------------
1  2339					 ;
1  2340					 ; =====================
1  2341					 ; WM_SIZE wParam values
1  2342					 ; =====================
1  2343					 ;
1  2344		  =0000			 SIZE_RESTORED			 equ	 0
1  2345		  =0001			 SIZE_MINIMIZED			 equ	 1
1  2346		  =0002			 SIZE_MAXIMIZED			 equ	 2
1  2347		  =0003			 SIZE_MAXSHOW			 equ	 3
1  2348		  =0004			 SIZE_MAXHIDE			 equ	 4
1  2349					 ;
1  2350					 SIZENORMAL			 equ	 SIZE_RESTORED
1  2351					 SIZEICONIC			 equ	 SIZE_MINIMIZED
1  2352					 SIZEFULLSCREEN			 equ	 SIZE_MAXIMIZED
1  2353					 SIZEZOOMSHOW			 equ	 SIZE_MAXSHOW
1  2354					 SIZEZOOMHIDE			 equ	 SIZE_MAXHIDE
1  2355					 ;
1  2356					 ;------------------------------------------------------------------------------
1  2357					 ;
1  2358					 ; ========================
1  2359					 ; GetSystemMetrics() codes
1  2360					 ; ========================
1  2361					 ;
1  2362		  =0000			 SM_CXSCREEN			 equ	  0
1  2363		  =0001			 SM_CYSCREEN			 equ	  1
1  2364		  =0002			 SM_CXVSCROLL			 equ	  2
1  2365		  =0003			 SM_CYHSCROLL			 equ	  3
1  2366		  =0004			 SM_CYCAPTION			 equ	  4
1  2367		  =0005			 SM_CXBORDER			 equ	  5
1  2368		  =0006			 SM_CYBORDER			 equ	  6
1  2369		  =0007			 SM_CXDLGFRAME			 equ	  7
1  2370		  =0008			 SM_CYDLGFRAME			 equ	  8
1  2371		  =0009			 SM_CYVTHUMB			 equ	  9
1  2372		  =000A			 SM_CXHTHUMB			 equ	 10
1  2373		  =000B			 SM_CXICON			 equ	 11
1  2374		  =000C			 SM_CYICON			 equ	 12
1  2375		  =000D			 SM_CXCURSOR			 equ	 13
1  2376		  =000E			 SM_CYCURSOR			 equ	 14
1  2377		  =000F			 SM_CYMENU			 equ	 15
1  2378		  =0010			 SM_CXFULLSCREEN		 equ	 16
1  2379		  =0011			 SM_CYFULLSCREEN		 equ	 17
1  2380		  =0012			 SM_CYKANJIWINDOW		 equ	 18
1  2381		  =0013			 SM_MOUSEPRESENT		 equ	 19
1  2382		  =0014			 SM_CYVSCROLL			 equ	 20
1  2383		  =0015			 SM_CXHSCROLL			 equ	 21
1  2384		  =0016			 SM_DEBUG			 equ	 22
1  2385		  =0017			 SM_SWAPBUTTON			 equ	 23
1  2386		  =0018			 SM_RESERVED1			 equ	 24
1  2387		  =0019			 SM_RESERVED2			 equ	 25
1  2388		  =001A			 SM_RESERVED3			 equ	 26
1  2389		  =001B			 SM_RESERVED4			 equ	 27
1  2390		  =001C			 SM_CXMIN			 equ	 28
1  2391		  =001D			 SM_CYMIN			 equ	 29
1  2392		  =001E			 SM_CXSIZE			 equ	 30
1  2393		  =001F			 SM_CYSIZE			 equ	 31
1  2394		  =0020			 SM_CXFRAME			 equ	 32
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 43
JANE.ASM



1  2395		  =0021			 SM_CYFRAME			 equ	 33
1  2396		  =0022			 SM_CXMINTRACK			 equ	 34
1  2397		  =0023			 SM_CYMINTRACK			 equ	 35
1  2398		  =0024			 SM_CXDOUBLECLK			 equ	 36
1  2399		  =0025			 SM_CYDOUBLECLK			 equ	 37
1  2400		  =0026			 SM_CXICONSPACING		 equ	 38
1  2401		  =0027			 SM_CYICONSPACING		 equ	 39
1  2402		  =0028			 SM_MENUDROPALIGNMENT		 equ	 40
1  2403		  =0029			 SM_PENWINDOWS			 equ	 41
1  2404		  =002A			 SM_DBCSENABLED			 equ	 42
1  2405		  =002B			 SM_CMOUSEBUTTONS		 equ	 43
1  2406		  =002C			 SM_SECURE			 equ	 44
1  2407		  =002D			 SM_CXEDGE			 equ	 45
1  2408		  =002E			 SM_CYEDGE			 equ	 46
1  2409		  =002F			 SM_CXMINSPACING		 equ	 47
1  2410		  =0030			 SM_CYMINSPACING		 equ	 48
1  2411		  =0031			 SM_CXSMICON			 equ	 49
1  2412		  =0032			 SM_CYSMICON			 equ	 50
1  2413		  =0033			 SM_CYSMCAPTION			 equ	 51
1  2414		  =0034			 SM_CXSMSIZE			 equ	 52
1  2415		  =0035			 SM_CYSMSIZE			 equ	 53
1  2416		  =0036			 SM_CXMENUSIZE			 equ	 54
1  2417		  =0037			 SM_CYMENUSIZE			 equ	 55
1  2418		  =0038			 SM_ARRANGE			 equ	 56
1  2419		  =0039			 SM_CXMINIMIZED			 equ	 57
1  2420		  =003A			 SM_CYMINIMIZED			 equ	 58
1  2421		  =003B			 SM_CXMAXTRACK			 equ	 59
1  2422		  =003C			 SM_CYMAXTRACK			 equ	 60
1  2423		  =003D			 SM_CXMAXIMIZED			 equ	 61
1  2424		  =003E			 SM_CYMAXIMIZED			 equ	 62
1  2425		  =003F			 SM_NETWORK			 equ	 63
1  2426		  =0043			 SM_CLEANBOOT			 equ	 67
1  2427		  =0044			 SM_CXDRAG			 equ	 68
1  2428		  =0045			 SM_CYDRAG			 equ	 69
1  2429		  =0046			 SM_SHOWSOUNDS			 equ	 70
1  2430		  =0047			 SM_CXMENUCHECK			 equ	 71
1  2431		  =0048			 SM_CYMENUCHECK			 equ	 72
1  2432		  =0049			 SM_SLOWMACHINE			 equ	 73
1  2433		  =004A			 SM_MIDEASTENABLED		 equ	 74
1  2434					 ;
1  2435					 SM_CXFIXEDFRAME		 equ	 SM_CXDLGFRAME
1  2436					 SM_CYFIXEDFRAME		 equ	 SM_CYDLGFRAME
1  2437					 SM_CXSIZEFRAME			 equ	 SM_CXFRAME
1  2438					 SM_CYSIZEFRAME			 equ	 SM_CYFRAME
1  2439					 ;
1  2440					 ;------------------------------------------------------------------------------
1  2441					 ;
1  2442					 ; =====================
1  2443					 ; static control styles
1  2444					 ; =====================
1  2445					 ;
1  2446		  =0000			 SS_LEFT			 equ	 0000h
1  2447		  =0001			 SS_CENTER			 equ	 0001h
1  2448		  =0002			 SS_RIGHT			 equ	 0002h
1  2449		  =0003			 SS_ICON			 equ	 0003h
1  2450		  =0004			 SS_BLACKRECT			 equ	 0004h
1  2451		  =0005			 SS_GRAYRECT			 equ	 0005h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 44
JANE.ASM



1  2452		  =0006			 SS_WHITERECT			 equ	 0006h
1  2453		  =0007			 SS_BLACKFRAME			 equ	 0007h
1  2454		  =0008			 SS_GRAYFRAME			 equ	 0008h
1  2455		  =0009			 SS_WHITEFRAME			 equ	 0009h
1  2456		  =000A			 SS_USERITEM			 equ	 000Ah
1  2457		  =000B			 SS_SIMPLE			 equ	 000Bh
1  2458		  =000C			 SS_LEFTNOWORDWRAP		 equ	 000Ch
1  2459		  =000E			 SS_BITMAP			 equ	 000Eh
1  2460		  =000D			 SS_OWNERDRAW			 equ	 000Dh
1  2461		  =000F			 SS_ENHMETAFILE			 equ	 000Fh
1  2462		  =0010			 SS_ETCHEDHORZ			 equ	 0010h
1  2463		  =0011			 SS_ETCHEDVERT			 equ	 0011h
1  2464		  =0012			 SS_ETCHEDFRAME			 equ	 0012h
1  2465		  =001F			 SS_TYPEMASK			 equ	 001Fh
1  2466		  =0080			 SS_NOPREFIX			 equ	 0080h
1  2467		  =0100			 SS_NOTIFY			 equ	 0100h
1  2468		  =0200			 SS_CENTERIMAGE			 equ	 0200h
1  2469		  =0400			 SS_RIGHTJUST			 equ	 0400h
1  2470		  =0800			 SS_REALSIZEIMAGE		 equ	 0800h
1  2471		  =1000			 SS_SUNKEN			 equ	 1000h
1  2472					 ;
1  2473					 ;------------------------------------------------------------------------------
1  2474					 ;
1  2475					 ; ================
1  2476					 ; startup commands
1  2477					 ; ================
1  2478					 ;
1  2479		  =0001			 STARTF_USESHOWWINDOW		 equ	 00000001h
1  2480		  =0002			 STARTF_USESIZE			 equ	 00000002h
1  2481		  =0004			 STARTF_USEPOSITION		 equ	 00000004h
1  2482		  =0008			 STARTF_USECOUNTCHARS		 equ	 00000008h
1  2483		  =0010			 STARTF_USEFILLATTRIBUTE	 equ	 00000010h
1  2484		  =0020			 STARTF_RUNFULLSCREEN		 equ	 00000020h	 ;ignored for non-x86
1  2485		  =0040			 STARTF_FORCEONFEEDBACK		 equ	 00000040h
1  2486		  =0080			 STARTF_FORCEOFFFEEDBACK	 equ	 00000080h
1  2487		  =0100			 STARTF_USESTDHANDLES		 equ	 00000100h
1  2488		  =0200			 STARTF_USEHOTKEY		 equ	 00000200h
1  2489					 ;
1  2490					 ;------------------------------------------------------------------------------
1  2491					 ;
1  2492					 ; ============
1  2493					 ; status codes
1  2494					 ; ============
1  2495					 ;
1  2496		  =0000			 STATUS_WAIT_0			 equ	 000000000h
1  2497		  =0080			 STATUS_ABANDONED_WAIT_0	 equ	 000000080h
1  2498		  =00C0			 STATUS_USER_APC		 equ	 0000000C0h
1  2499		  =0102			 STATUS_TIMEOUT			 equ	 000000102h
1  2500		  =0103			 STATUS_PENDING			 equ	 000000103h
1  2501		  =40000005		 STATUS_SEGMENT_NOTIFICATION	 equ	 040000005h
1  2502		  =80000001		 STATUS_GUARD_PAGE_VIOLATION	 equ	 080000001h
1  2503		  =80000002		 STATUS_DATATYPE_MISALIGNMENT	 equ	 080000002h
1  2504		  =80000003		 STATUS_BREAKPOINT		 equ	 080000003h
1  2505		  =80000004		 STATUS_SINGLE_STEP		 equ	 080000004h
1  2506		  =C0000005		 STATUS_ACCESS_VIOLATION	 equ	 0C0000005h
1  2507		  =C0000006		 STATUS_IN_PAGE_ERROR		 equ	 0C0000006h
1  2508		  =C0000017		 STATUS_NO_MEMORY		 equ	 0C0000017h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 45
JANE.ASM



1  2509		  =C000001D		 STATUS_ILLEGAL_INSTRUCTION	 equ	 0C000001Dh
1  2510		  =C0000025		 STATUS_NONCONTINUABLE_EXCEPTION equ	 0C0000025h
1  2511		  =C0000026		 STATUS_INVALID_DISPOSITION	 equ	 0C0000026h
1  2512		  =C000008C		 STATUS_ARRAY_BOUNDS_EXCEEDED	 equ	 0C000008Ch
1  2513		  =C000008D		 STATUS_FLOAT_DENORMAL_OPERAND	 equ	 0C000008Dh
1  2514		  =C000008E		 STATUS_FLOAT_DIVIDE_BY_ZERO	 equ	 0C000008Eh
1  2515		  =C000008F		 STATUS_FLOAT_INEXACT_RESULT	 equ	 0C000008Fh
1  2516		  =C0000090		 STATUS_FLOAT_INVALID_OPERATION	 equ	 0C0000090h
1  2517		  =C0000091		 STATUS_FLOAT_OVERFLOW		 equ	 0C0000091h
1  2518		  =C0000092		 STATUS_FLOAT_STACK_CHECK	 equ	 0C0000092h
1  2519		  =C0000093		 STATUS_FLOAT_UNDERFLOW		 equ	 0C0000093h
1  2520		  =C0000094		 STATUS_INTEGER_DIVIDE_BY_ZERO	 equ	 0C0000094h
1  2521		  =C0000095		 STATUS_INTEGER_OVERFLOW	 equ	 0C0000095h
1  2522		  =C0000096		 STATUS_PRIVILEGED_INSTRUCTION	 equ	 0C0000096h
1  2523		  =C00000FD		 STATUS_STACK_OVERFLOW		 equ	 0C00000FDh
1  2524		  =C000013A		 STATUS_CONTROL_C_EXIT		 equ	 0C000013Ah
1  2525					 ;
1  2526					 ;------------------------------------------------------------------------------
1  2527					 ;
1  2528					 ; ========================
1  2529					 ; toolbar standard bitmaps
1  2530					 ; ========================
1  2531					 ;
1  2532		  =0000			 STD_CUT			 equ	  0
1  2533		  =0001			 STD_COPY			 equ	  1
1  2534		  =0002			 STD_PASTE			 equ	  2
1  2535		  =0003			 STD_UNDO			 equ	  3
1  2536		  =0004			 STD_REDOW			 equ	  4
1  2537		  =0005			 STD_DELETE			 equ	  5
1  2538		  =0006			 STD_FILENEW			 equ	  6
1  2539		  =0007			 STD_FILEOPEN			 equ	  7
1  2540		  =0008			 STD_FILESAVE			 equ	  8
1  2541		  =0009			 STD_PRINTPRE			 equ	  9
1  2542		  =000A			 STD_PROPERTIES			 equ	 10
1  2543		  =000B			 STD_HELP			 equ	 11
1  2544		  =000C			 STD_FIND			 equ	 12
1  2545		  =000D			 STD_REPLACE			 equ	 13
1  2546		  =000E			 STD_PRINT			 equ	 14
1  2547					 ;
1  2548					 ;------------------------------------------------------------------------------
1  2549					 ;
1  2550					 ; =====================
1  2551					 ; standard file handles
1  2552					 ; =====================
1  2553					 ;
1  2554		  =-000A		 STD_INPUT_HANDLE		 equ	 -10
1  2555		  =-000B		 STD_OUTPUT_HANDLE		 equ	 -11
1  2556		  =-000C		 STD_ERROR_HANDLE		 equ	 -12
1  2557					 ;
1  2558					 ;------------------------------------------------------------------------------
1  2559					 ;
1  2560					 ; =====================
1  2561					 ; ShowWindow()	commands
1  2562					 ; =====================
1  2563					 ;
1  2564		  =0000			 SW_HIDE			 equ	  0
1  2565		  =0001			 SW_SHOWNORMAL			 equ	  1
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 46
JANE.ASM



1  2566		  =0001			 SW_NORMAL			 equ	  1
1  2567		  =0002			 SW_SHOWMINIMIZED		 equ	  2
1  2568		  =0003			 SW_SHOWMAXIMIZED		 equ	  3
1  2569		  =0003			 SW_MAXIMIZE			 equ	  3
1  2570		  =0004			 SW_SHOWNOACTIVATE		 equ	  4
1  2571		  =0005			 SW_SHOW			 equ	  5
1  2572		  =0006			 SW_MINIMIZE			 equ	  6
1  2573		  =0007			 SW_SHOWMINNOACTIVE		 equ	  7
1  2574		  =0008			 SW_SHOWNA			 equ	  8
1  2575		  =0009			 SW_RESTORE			 equ	  9
1  2576		  =000A			 SW_SHOWDEFAULT			 equ	 10
1  2577		  =000A			 SW_MAX				 equ	 10
1  2578					 ;
1  2579					 ;------------------------------------------------------------------------------
1  2580					 ;
1  2581					 ; ====================
1  2582					 ; SetWindowPos() flags
1  2583					 ; ====================
1  2584					 ;
1  2585		  =0001			 SWP_NOSIZE			 equ	 0001h
1  2586		  =0002			 SWP_NOMOVE			 equ	 0002h
1  2587		  =0004			 SWP_NOZORDER			 equ	 0004h
1  2588		  =0008			 SWP_NOREDRAW			 equ	 0008h
1  2589		  =0010			 SWP_NOACTIVATE			 equ	 0010h
1  2590		  =0020			 SWP_FRAMECHANGED		 equ	 0020h
1  2591		  =0040			 SWP_SHOWWINDOW			 equ	 0040h
1  2592		  =0080			 SWP_HIDEWINDOW			 equ	 0080h
1  2593		  =0100			 SWP_NOCOPYBITS			 equ	 0100h
1  2594		  =0200			 SWP_NOOWNERZORDER		 equ	 0200h
1  2595		  =0400			 SWP_NOSENDCHANGING		 equ	 0400h
1  2596		  =2000			 SWP_DEFERERASE			 equ	 2000h
1  2597		  =4000			 SWP_ASYNCWINDOWPOS		 equ	 4000h
1  2598					 ;
1  2599					 SWP_DRAWFRAME			 equ	 SWP_FRAMECHANGED
1  2600					 SWP_NOREPOSITION		 equ	 SWP_NOOWNERZORDER
1  2601					 ;
1  2602					 ;------------------------------------------------------------------------------
1  2603					 ;
1  2604					 ; ======================
1  2605					 ; text	alignment options
1  2606					 ; ======================
1  2607					 ;
1  2608		  =0000			 TA_NOUPDATECP			 equ	 0000h
1  2609		  =0001			 TA_UPDATECP			 equ	 0001h
1  2610					 ;
1  2611		  =0000			 TA_LEFT			 equ	 0000h
1  2612		  =0002			 TA_RIGHT			 equ	 0002h
1  2613		  =0006			 TA_CENTER			 equ	 0006h
1  2614					 ;
1  2615		  =0000			 TA_TOP				 equ	 0000h
1  2616		  =0008			 TA_BOTTOM			 equ	 0008h
1  2617		  =0018			 TA_BASELINE			 equ	 0018h
1  2618		  =0100			 TA_RTLREADING			 equ	 0100h
1  2619		  =011F			 TA_MASK			 equ	 TA_BASELINE+TA_CENTER+TA_UPDATECP+\
   2620										 TA_RTLREADING
1  2621					 ;
1  2622					 ;------------------------------------------------------------------------------
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 47
JANE.ASM



1  2623					 ;
1  2624					 ; ================
1  2625					 ; toolbar messages
1  2626					 ; ================
1  2627					 ;
1  2628		  =0401			 TB_ENABLEBUTTON		 equ	 WM_USER+01
1  2629		  =0402			 TB_CHECKBUTTON			 equ	 WM_USER+02
1  2630		  =0403			 TB_PRESSBUTTON			 equ	 WM_USER+03
1  2631		  =0404			 TB_HIDEBUTTON			 equ	 WM_USER+04
1  2632		  =0405			 TB_INDETERMINATE		 equ	 WM_USER+05
1  2633		  =0409			 TB_ISBUTTONENABLED		 equ	 WM_USER+09
1  2634		  =040A			 TB_ISBUTTONCHECKED		 equ	 WM_USER+10
1  2635		  =040B			 TB_ISBUTTONPRESSED		 equ	 WM_USER+11
1  2636		  =040C			 TB_ISBUTTONHIDDEN		 equ	 WM_USER+12
1  2637		  =040D			 TB_ISBUTTONINDETERMINATE	 equ	 WM_USER+13
1  2638		  =0411			 TB_SETSTATE			 equ	 WM_USER+17
1  2639		  =0412			 TB_GETSTATE			 equ	 WM_USER+18
1  2640		  =0413			 TB_ADDBITMAP			 equ	 WM_USER+19
1  2641		  =0414			 TB_ADDBUTTONS			 equ	 WM_USER+20
1  2642		  =0415			 TB_INSERTBUTTON		 equ	 WM_USER+21
1  2643		  =0416			 TB_DELETEBUTTON		 equ	 WM_USER+22
1  2644		  =0417			 TB_GETBUTTON			 equ	 WM_USER+23
1  2645		  =0418			 TB_BUTTONCOUNT			 equ	 WM_USER+24
1  2646		  =0419			 TB_COMMANDTOINDEX		 equ	 WM_USER+25
1  2647		  =041A			 TB_SAVERESTOREA		 equ	 WM_USER+26
1  2648		  =041B			 TB_CUSTOMIZE			 equ	 WM_USER+27
1  2649		  =041C			 TB_ADDSTRINGA			 equ	 WM_USER+28
1  2650		  =041D			 TB_GETITEMRECT			 equ	 WM_USER+29
1  2651		  =041E			 TB_BUTTONSTRUCTSIZE		 equ	 WM_USER+30
1  2652		  =041F			 TB_SETBUTTONSIZE		 equ	 WM_USER+31
1  2653		  =0420			 TB_SETBITMAPSIZE		 equ	 WM_USER+32
1  2654		  =0421			 TB_AUTOSIZE			 equ	 WM_USER+33
1  2655		  =0423			 TB_GETTOOLTIPS			 equ	 WM_USER+35
1  2656		  =0424			 TB_SETTOOLTIPS			 equ	 WM_USER+36
1  2657		  =0425			 TB_SETPARENT			 equ	 WM_USER+37
1  2658		  =0427			 TB_SETROWS			 equ	 WM_USER+39
1  2659		  =0428			 TB_GETROWS			 equ	 WM_USER+40
1  2660		  =0429			 TB_GETBITMAPFLAGS		 equ	 WM_USER+41
1  2661		  =042A			 TB_SETCMDID			 equ	 WM_USER+42
1  2662		  =042B			 TB_CHANGEBITMAP		 equ	 WM_USER+43
1  2663		  =042C			 TB_GETBITMAP			 equ	 WM_USER+44
1  2664		  =042D			 TB_GETBUTTONTEXTA		 equ	 WM_USER+45
1  2665		  =042E			 TB_REPLACEBITMAP		 equ	 WM_USER+46
1  2666					 ;
1  2667		  =044B			 TB_GETBUTTONTEXTW		 equ	 WM_USER+75
1  2668		  =044C			 TB_SAVERESTOREW		 equ	 WM_USER+76
1  2669		  =044D			 TB_ADDSTRINGW			 equ	 WM_USER+77
1  2670					 ;
1  2671					 TB_GETBUTTONTEXT		 equ	 TB_GETBUTTONTEXTA
1  2672					 TB_SAVERESTORE			 equ	 TB_SAVERESTOREA
1  2673					 TB_ADDSTRING			 equ	 TB_ADDSTRINGA
1  2674					 ;
1  2675					 ;------------------------------------------------------------------------------
1  2676					 ;
1  2677					 ; =====================
1  2678					 ; toolbar notifications
1  2679					 ; =====================
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 48
JANE.ASM



1  2680					 ;
1  2681		  =-02BC		 TBN_FIRST			 equ	 -700
1  2682		  =-02D0		 TBN_LAST			 equ	 TBN_FIRST-20
1  2683					 ;
1  2684		  =-02BC		 TBN_GETBUTTONINFOA		 equ	 TBN_FIRST-00
1  2685		  =-02BD		 TBN_BEGINDRAG			 equ	 TBN_FIRST-01
1  2686		  =-02BE		 TBN_ENDDRAG			 equ	 TBN_FIRST-02
1  2687		  =-02BF		 TBN_BEGINADJUST		 equ	 TBN_FIRST-03
1  2688		  =-02C0		 TBN_ENDADJUST			 equ	 TBN_FIRST-04
1  2689		  =-02C1		 TBN_RESET			 equ	 TBN_FIRST-05
1  2690		  =-02C2		 TBN_QUERYINSERT		 equ	 TBN_FIRST-06
1  2691		  =-02C3		 TBN_QUERYDELETE		 equ	 TBN_FIRST-07
1  2692		  =-02C4		 TBN_TOOLBARCHANGE		 equ	 TBN_FIRST-08
1  2693		  =-02C5		 TBN_CUSTHELP			 equ	 TBN_FIRST-09
1  2694		  =-02D0		 TBN_GETBUTTONINFOW		 equ	 TBN_FIRST-20
1  2695					 ;
1  2696					 ;------------------------------------------------------------------------------
1  2697					 ;
1  2698					 ; ==============
1  2699					 ; toolbar states
1  2700					 ; ==============
1  2701					 ;
1  2702		  =0001			 TBSTATE_CHECKED		 equ	 0001h
1  2703		  =0002			 TBSTATE_PRESSED		 equ	 0002h
1  2704		  =0004			 TBSTATE_ENABLED		 equ	 0004h
1  2705		  =0008			 TBSTATE_HIDDEN			 equ	 0008h
1  2706		  =0010			 TBSTATE_INDETERMINATE		 equ	 0010h
1  2707		  =0020			 TBSTATE_WRAP			 equ	 0020h
1  2708					 ;
1  2709					 ;------------------------------------------------------------------------------
1  2710					 ;
1  2711					 ; ==============
1  2712					 ; toolbar styles
1  2713					 ; ==============
1  2714					 ;
1  2715		  =0000			 TBSTYLE_BUTTON			 equ	 0000h
1  2716		  =0001			 TBSTYLE_SEP			 equ	 0001h
1  2717		  =0002			 TBSTYLE_CHECK			 equ	 0002h
1  2718		  =0004			 TBSTYLE_GROUP			 equ	 0004h
1  2719		  =0100			 TBSTYLE_TOOLTIPS		 equ	 0100h
1  2720		  =0200			 TBSTYLE_WRAPABLE		 equ	 0200h
1  2721		  =0400			 TBSTYLE_ALTDRAG		 equ	 0400h
1  2722					 ;
1  2723		  =0006			 TBSTYLE_CHECKGROUP		 equ	 TBSTYLE_GROUP+TBSTYLE_CHECK
1  2724					 ;
1  2725					 ;------------------------------------------------------------------------------
1  2726					 ;
1  2727					 ; ===================
1  2728					 ; thread access flags
1  2729					 ; ===================
1  2730					 ;
1  2731		  =0001			 THREAD_TERMINATE		 equ	 0001h
1  2732		  =0002			 THREAD_SUSPEND_RESUME		 equ	 0002h
1  2733		  =0008			 THREAD_GET_CONTEXT		 equ	 0008h
1  2734		  =0010			 THREAD_SET_CONTEXT		 equ	 0010h
1  2735		  =0020			 THREAD_SET_INFORMATION		 equ	 0020h
1  2736		  =0040			 THREAD_QUERY_INFORMATION	 equ	 0040h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 49
JANE.ASM



1  2737		  =0080			 THREAD_SET_THREAD_TOKEN	 equ	 0080h
1  2738		  =0100			 THREAD_IMPERSONATE		 equ	 0100h
1  2739		  =0200			 THREAD_DIRECT_IMPERSONATION	 equ	 0200h
1  2740					 ;
1  2741					 ;THREAD_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SYNCHRONIZE+03FFh
1  2742					 ;
1  2743					 ;------------------------------------------------------------------------------
1  2744					 ;
1  2745					 ; =================
1  2746					 ; thread priorities
1  2747					 ; =================
1  2748					 ;
1  2749		  =-000F		 THREAD_BASE_PRIORITY_IDLE	 equ	 -15
1  2750		  =-0002		 THREAD_BASE_PRIORITY_MIN	 equ	  -2
1  2751		  =0002			 THREAD_BASE_PRIORITY_MAX	 equ	   2
1  2752		  =000F			 THREAD_BASE_PRIORITY_LOWRT	 equ	  15
1  2753					 ;
1  2754					 THREAD_PRIORITY_LOWEST		 equ	 THREAD_BASE_PRIORITY_MIN
1  2755		  =-0001		 THREAD_PRIORITY_BELOW_NORMAL	 equ	 THREAD_PRIORITY_LOWEST+1
1  2756		  =0000			 THREAD_PRIORITY_NORMAL		 equ	   0
1  2757		  =0001			 THREAD_PRIORITY_ABOVE_NORMAL	 equ	 THREAD_PRIORITY_HIGHEST-1
1  2758					 THREAD_PRIORITY_HIGHEST	 equ	 THREAD_BASE_PRIORITY_MAX
1  2759					 ;
1  2760					 THREAD_PRIORITY_TIME_CRITICAL	 equ	 THREAD_BASE_PRIORITY_LOWRT
1  2761					 THREAD_PRIORITY_IDLE		 equ	 THREAD_BASE_PRIORITY_IDLE
1  2762					 ;
1  2763		  =-0001		 THREAD_PRIORITY_ERROR_RETURN	 equ	  -1
1  2764					 ;
1  2765					 ;------------------------------------------------------------------------------
1  2766					 ;
1  2767					 ; ==================
1  2768					 ; tree	view messages
1  2769					 ; ==================
1  2770					 ;
1  2771		  =1100			 TVM_FIRST			 equ	 1100h
1  2772					 TV_FIRST			 equ	 TVM_FIRST
1  2773					 ;
1  2774		  =1100			 TVM_INSERTITEMA		 equ	 TVM_FIRST+00
1  2775		  =1101			 TVM_DELETEITEM			 equ	 TVM_FIRST+01
1  2776		  =1102			 TVM_EXPAND			 equ	 TVM_FIRST+02
1  2777		  =1104			 TVM_GETITEMRECT		 equ	 TVM_FIRST+04
1  2778		  =1105			 TVM_GETCOUNT			 equ	 TVM_FIRST+05
1  2779		  =1106			 TVM_GETINDENT			 equ	 TVM_FIRST+06
1  2780		  =1107			 TVM_SETINDENT			 equ	 TVM_FIRST+07
1  2781		  =1108			 TVM_GETIMAGELIST		 equ	 TVM_FIRST+08
1  2782		  =1109			 TVM_SETIMAGELIST		 equ	 TVM_FIRST+09
1  2783		  =110A			 TVM_GETNEXTITEM		 equ	 TVM_FIRST+10
1  2784		  =110B			 TVM_SELECTITEM			 equ	 TVM_FIRST+11
1  2785		  =110C			 TVM_GETITEMA			 equ	 TVM_FIRST+12
1  2786		  =110D			 TVM_SETITEMA			 equ	 TVM_FIRST+13
1  2787		  =110E			 TVM_EDITLABELA			 equ	 TVM_FIRST+14
1  2788		  =110F			 TVM_GETEDITCONTROL		 equ	 TVM_FIRST+15
1  2789		  =1110			 TVM_GETVISIBLECOUNT		 equ	 TVM_FIRST+16
1  2790		  =1111			 TVM_HITTEST			 equ	 TVM_FIRST+17
1  2791		  =1112			 TVM_CREATEDRAGIMAGE		 equ	 TVM_FIRST+18
1  2792		  =1113			 TVM_SORTCHILDREN		 equ	 TVM_FIRST+19
1  2793		  =1114			 TVM_ENSUREVISIBLE		 equ	 TVM_FIRST+20
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 50
JANE.ASM



1  2794		  =1115			 TVM_SORTCHILDRENCB		 equ	 TVM_FIRST+21
1  2795		  =1116			 TVM_ENDEDITLABELNOW		 equ	 TVM_FIRST+22
1  2796		  =1117			 TVM_GETISEARCHSTRINGA		 equ	 TVM_FIRST+23
1  2797					 ;
1  2798		  =1132			 TVM_INSERTITEMW		 equ	 TVM_FIRST+50
1  2799		  =113E			 TVM_GETITEMW			 equ	 TVM_FIRST+62
1  2800		  =113F			 TVM_SETITEMW			 equ	 TVM_FIRST+63
1  2801		  =1140			 TVM_GETISEARCHSTRINGW		 equ	 TVM_FIRST+64
1  2802		  =1141			 TVM_EDITLABELW			 equ	 TVM_FIRST+65
1  2803					 ;
1  2804					 TVM_INSERTITEM			 equ	 TVM_INSERTITEMA
1  2805					 TVM_GETITEM			 equ	 TVM_GETITEMA
1  2806					 TVM_SETITEM			 equ	 TVM_SETITEMA
1  2807					 TVM_GETISEARCHSTRING		 equ	 TVM_GETISEARCHSTRINGA
1  2808					 TVM_EDITLABEL			 equ	 TVM_EDITLABELA
1  2809					 ;
1  2810					 ;------------------------------------------------------------------------------
1  2811					 ;
1  2812					 ; =======================
1  2813					 ; tree	view notifications
1  2814					 ; =======================
1  2815					 ;
1  2816		  =-0190		 TVN_FIRST			 equ	 -400
1  2817		  =-01F3		 TVN_LAST			 equ	 TVN_FIRST-99
1  2818					 ;
1  2819		  =-0191		 TVN_SELCHANGINGA		 equ	 TVN_FIRST-01
1  2820		  =-0192		 TVN_SELCHANGEDA		 equ	 TVN_FIRST-02
1  2821		  =-0193		 TVN_GETDISPINFOA		 equ	 TVN_FIRST-03
1  2822		  =-0194		 TVN_SETDISPINFOA		 equ	 TVN_FIRST-04
1  2823		  =-0195		 TVN_ITEMEXPANDINGA		 equ	 TVN_FIRST-05
1  2824		  =-0196		 TVN_ITEMEXPANDEDA		 equ	 TVN_FIRST-06
1  2825		  =-0197		 TVN_BEGINDRAGA			 equ	 TVN_FIRST-07
1  2826		  =-0198		 TVN_BEGINRDRAGA		 equ	 TVN_FIRST-08
1  2827		  =-0199		 TVN_DELETEITEMA		 equ	 TVN_FIRST-09
1  2828		  =-019B		 TVN_ENDLABELEDITA		 equ	 TVN_FIRST-11
1  2829		  =-019C		 TVN_KEYDOWN			 equ	 TVN_FIRST-12
1  2830					 ;
1  2831		  =-01C2		 TVN_SELCHANGINGW		 equ	 TVN_FIRST-50
1  2832		  =-01C3		 TVN_SELCHANGEDW		 equ	 TVN_FIRST-51
1  2833		  =-01C4		 TVN_GETDISPINFOW		 equ	 TVN_FIRST-52
1  2834		  =-01C5		 TVN_SETDISPINFOW		 equ	 TVN_FIRST-53
1  2835		  =-01C6		 TVN_ITEMEXPANDINGW		 equ	 TVN_FIRST-54
1  2836		  =-01C7		 TVN_ITEMEXPANDEDW		 equ	 TVN_FIRST-55
1  2837		  =-01C8		 TVN_BEGINDRAGW			 equ	 TVN_FIRST-56
1  2838		  =-01C9		 TVN_BEGINRDRAGW		 equ	 TVN_FIRST-57
1  2839		  =-01CA		 TVN_DELETEITEMW		 equ	 TVN_FIRST-58
1  2840		  =-019A		 TVN_BEGINLABELEDITA		 equ	 TVN_FIRST-10
1  2841		  =-01CB		 TVN_BEGINLABELEDITW		 equ	 TVN_FIRST-59
1  2842		  =-01CC		 TVN_ENDLABELEDITW		 equ	 TVN_FIRST-60
1  2843					 ;
1  2844					 TVN_SELCHANGING		 equ	 TVN_SELCHANGINGA
1  2845					 TVN_SELCHANGED			 equ	 TVN_SELCHANGEDA
1  2846					 TVN_GETDISPINFO		 equ	 TVN_GETDISPINFOA
1  2847					 TVN_SETDISPINFO		 equ	 TVN_SETDISPINFOA
1  2848					 TVN_ITEMEXPANDING		 equ	 TVN_ITEMEXPANDINGA
1  2849					 TVN_ITEMEXPANDED		 equ	 TVN_ITEMEXPANDEDA
1  2850					 TVN_BEGINDRAG			 equ	 TVN_BEGINDRAGA
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 51
JANE.ASM



1  2851					 TVN_BEGINRDRAG			 equ	 TVN_BEGINRDRAGA
1  2852					 TVN_DELETEITEM			 equ	 TVN_DELETEITEMA
1  2853					 TVN_BEGINLABELEDIT		 equ	 TVN_BEGINLABELEDITA
1  2854					 TVN_ENDLABELEDIT		 equ	 TVN_ENDLABELEDITA
1  2855					 ;
1  2856					 ;------------------------------------------------------------------------------
1  2857					 ;
1  2858					 ; ================
1  2859					 ; tree	view styles
1  2860					 ; ================
1  2861					 ;
1  2862		  =0001			 TVS_HASBUTTONS			 equ	 00000001h
1  2863		  =0002			 TVS_HASLINES			 equ	 00000002h
1  2864		  =0004			 TVS_LINESATROOT		 equ	 00000004h
1  2865		  =0008			 TVS_EDITLABELS			 equ	 00000008h
1  2866		  =0010			 TVS_DISABLEDRAGDROP		 equ	 00000010h
1  2867		  =0020			 TVS_SHOWSELALWAYS		 equ	 00000020h
1  2868					 ;
1  2869					 ;------------------------------------------------------------------------------
1  2870					 ;
1  2871					 ; ================
1  2872					 ; os platform id's
1  2873					 ; ================
1  2874					 ;
1  2875		  =0000			 VER_PLATFORM_WIN32s		 equ	 0
1  2876		  =0001			 VER_PLATFORM_WIN32_WINDOWS	 equ	 1
1  2877		  =0002			 VER_PLATFORM_WIN32_NT		 equ	 2
1  2878					 ;
1  2879					 ;------------------------------------------------------------------------------
1  2880					 ;
1  2881					 ; ====================
1  2882					 ; toolbar view	bitmaps
1  2883					 ; ====================
1  2884					 ;
1  2885		  =0000			 VIEW_LARGEICONS		 equ	  0
1  2886		  =0001			 VIEW_SMALLICONS		 equ	  1
1  2887		  =0002			 VIEW_LIST			 equ	  2
1  2888		  =0003			 VIEW_DETAILS			 equ	  3
1  2889		  =0004			 VIEW_SORTNAME			 equ	  4
1  2890		  =0005			 VIEW_SORTSIZE			 equ	  5
1  2891		  =0006			 VIEW_SORTDATE			 equ	  6
1  2892		  =0007			 VIEW_SORTTYPE			 equ	  7
1  2893		  =0008			 VIEW_PARENTFOLDER		 equ	  8
1  2894		  =0009			 VIEW_NETCONNECT		 equ	  9
1  2895		  =000A			 VIEW_NETDISCONNECT		 equ	 10
1  2896		  =000B			 VIEW_NEWFOLDER			 equ	 11
1  2897					 ;
1  2898					 ;------------------------------------------------------------------------------
1  2899					 ;
1  2900					 ; =====================
1  2901					 ; standard virtual keys
1  2902					 ; =====================
1  2903					 ;
1  2904		  =0001			 VK_LBUTTON			 equ	 01h
1  2905		  =0002			 VK_RBUTTON			 equ	 02h
1  2906		  =0003			 VK_CANCEL			 equ	 03h
1  2907		  =0004			 VK_MBUTTON			 equ	 04h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 52
JANE.ASM



1  2908					 ;
1  2909		  =0008			 VK_BACK			 equ	 08h
1  2910		  =0009			 VK_TAB				 equ	 09h
1  2911		  =000C			 VK_CLEAR			 equ	 0Ch
1  2912		  =000D			 VK_RETURN			 equ	 0Dh
1  2913		  =0010			 VK_SHIFT			 equ	 10h
1  2914		  =0011			 VK_CONTROL			 equ	 11h
1  2915		  =0012			 VK_MENU			 equ	 12h
1  2916		  =0013			 VK_PAUSE			 equ	 13h
1  2917		  =0014			 VK_CAPITAL			 equ	 14h
1  2918		  =001B			 VK_ESCAPE			 equ	 1Bh
1  2919					 ;
1  2920		  =0020			 VK_SPACE			 equ	 20h
1  2921		  =0021			 VK_PRIOR			 equ	 21h
1  2922		  =0022			 VK_NEXT			 equ	 22h
1  2923		  =0023			 VK_END				 equ	 23h
1  2924		  =0024			 VK_HOME			 equ	 24h
1  2925		  =0025			 VK_LEFT			 equ	 25h
1  2926		  =0026			 VK_UP				 equ	 26h
1  2927		  =0027			 VK_RIGHT			 equ	 27h
1  2928		  =0028			 VK_DOWN			 equ	 28h
1  2929		  =0029			 VK_SELECT			 equ	 29h
1  2930		  =002A			 VK_PRINT			 equ	 2Ah
1  2931		  =002B			 VK_EXECUTE			 equ	 2Bh
1  2932		  =002C			 VK_SNAPSHOT			 equ	 2Ch
1  2933		  =002D			 VK_INSERT			 equ	 2Dh
1  2934		  =002E			 VK_DELETE			 equ	 2Eh
1  2935		  =002F			 VK_HELP			 equ	 2Fh
1  2936					 ;
1  2937		  =005B			 VK_LWIN			 equ	 5Bh
1  2938		  =005C			 VK_RWIN			 equ	 5Ch
1  2939		  =005D			 VK_APPS			 equ	 5Dh
1  2940					 ;
1  2941		  =0060			 VK_NUMPAD0			 equ	 60h
1  2942		  =0061			 VK_NUMPAD1			 equ	 61h
1  2943		  =0062			 VK_NUMPAD2			 equ	 62h
1  2944		  =0063			 VK_NUMPAD3			 equ	 63h
1  2945		  =0064			 VK_NUMPAD4			 equ	 64h
1  2946		  =0065			 VK_NUMPAD5			 equ	 65h
1  2947		  =0066			 VK_NUMPAD6			 equ	 66h
1  2948		  =0067			 VK_NUMPAD7			 equ	 67h
1  2949		  =0068			 VK_NUMPAD8			 equ	 68h
1  2950		  =0069			 VK_NUMPAD9			 equ	 69h
1  2951		  =006A			 VK_MULTIPLY			 equ	 6Ah
1  2952		  =006B			 VK_ADD				 equ	 6Bh
1  2953		  =006C			 VK_SEPARATOR			 equ	 6Ch
1  2954		  =006D			 VK_SUBTRACT			 equ	 6Dh
1  2955		  =006E			 VK_DECIMAL			 equ	 6Eh
1  2956		  =006F			 VK_DIVIDE			 equ	 6Fh
1  2957		  =0070			 VK_F1				 equ	 70h
1  2958		  =0071			 VK_F2				 equ	 71h
1  2959		  =0072			 VK_F3				 equ	 72h
1  2960		  =0073			 VK_F4				 equ	 73h
1  2961		  =0074			 VK_F5				 equ	 74h
1  2962		  =0075			 VK_F6				 equ	 75h
1  2963		  =0076			 VK_F7				 equ	 76h
1  2964		  =0077			 VK_F8				 equ	 77h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 53
JANE.ASM



1  2965		  =0078			 VK_F9				 equ	 78h
1  2966		  =0079			 VK_F10				 equ	 79h
1  2967		  =007A			 VK_F11				 equ	 7Ah
1  2968		  =007B			 VK_F12				 equ	 7Bh
1  2969		  =007C			 VK_F13				 equ	 7Ch
1  2970		  =007D			 VK_F14				 equ	 7Dh
1  2971		  =007E			 VK_F15				 equ	 7Eh
1  2972		  =007F			 VK_F16				 equ	 7Fh
1  2973		  =0080			 VK_F17				 equ	 80h
1  2974		  =0081			 VK_F18				 equ	 81h
1  2975		  =0082			 VK_F19				 equ	 82h
1  2976		  =0083			 VK_F20				 equ	 83h
1  2977		  =0084			 VK_F21				 equ	 84h
1  2978		  =0085			 VK_F22				 equ	 85h
1  2979		  =0086			 VK_F23				 equ	 86h
1  2980		  =0087			 VK_F24				 equ	 87h
1  2981					 ;
1  2982		  =0090			 VK_NUMLOCK			 equ	 90h
1  2983		  =0091			 VK_SCROLL			 equ	 91h
1  2984					 ;
1  2985					 ;------------------------------------------------------------------------------
1  2986					 ;
1  2987					 ; ====================
1  2988					 ; special virtual keys
1  2989					 ; ====================
1  2990					 ;
1  2991		  =00A0			 VK_LSHIFT			 equ	 0A0h
1  2992		  =00A1			 VK_RSHIFT			 equ	 0A1h
1  2993		  =00A2			 VK_LCONTROL			 equ	 0A2h
1  2994		  =00A3			 VK_RCONTROL			 equ	 0A3h
1  2995		  =00A4			 VK_LMENU			 equ	 0A4h
1  2996		  =00A5			 VK_RMENU			 equ	 0A5h
1  2997					 ;
1  2998		  =00E5			 VK_PROCESSKEY			 equ	 0E5h
1  2999					 ;
1  3000		  =00F6			 VK_ATTN			 equ	 0F6h
1  3001		  =00F7			 VK_CRSEL			 equ	 0F7h
1  3002		  =00F8			 VK_EXSEL			 equ	 0F8h
1  3003		  =00F9			 VK_EREOF			 equ	 0F9h
1  3004		  =00FA			 VK_PLAY			 equ	 0FAh
1  3005		  =00FB			 VK_ZOOM			 equ	 0FBh
1  3006		  =00FC			 VK_NONAME			 equ	 0FCh
1  3007		  =00FD			 VK_PA1				 equ	 0FDh
1  3008		  =00FE			 VK_OEM_CLEAR			 equ	 0FEh
1  3009					 ;
1  3010					 ;------------------------------------------------------------------------------
1  3011					 ;
1  3012					 ; =================
1  3013					 ; wait	status codes
1  3014					 ; =================
1  3015					 ;
1  3016		  =-0001		 WAIT_FAILED			 equ	 -1
1  3017					 WAIT_OBJECT_0			 equ	 STATUS_WAIT_0
1  3018					 ;
1  3019					 WAIT_ABANDONED			 equ	 STATUS_ABANDONED_WAIT_0
1  3020					 WAIT_ABANDONED_0		 equ	 STATUS_ABANDONED_WAIT_0
1  3021					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 54
JANE.ASM



1  3022					 WAIT_TIMEOUT			 equ	 STATUS_TIMEOUT
1  3023					 WAIT_IO_COMPLETION		 equ	 STATUS_USER_APC
1  3024					 STILL_ACTIVE			 equ	 STATUS_PENDING
1  3025					 ;
1  3026		  =0040			 MAXIMUM_WAIT_OBJECTS		 equ	  64
1  3027		  =007F			 MAXIMUM_SUSPEND_COUNT		 equ	 127
1  3028		  =-0001		 INFINITE			 equ	  -1
1  3029					 ;
1  3030					 ;------------------------------------------------------------------------------
1  3031					 ;
1  3032					 ; ===============
1  3033					 ; window messages
1  3034					 ; ===============
1  3035					 ;
1  3036		  =0000			 WM_NULL			 equ	 0000h
1  3037		  =0001			 WM_CREATE			 equ	 0001h
1  3038		  =0002			 WM_DESTROY			 equ	 0002h
1  3039		  =0003			 WM_MOVE			 equ	 0003h
1  3040		  =0005			 WM_SIZE			 equ	 0005h
1  3041		  =0006			 WM_ACTIVATE			 equ	 0006h
1  3042		  =0007			 WM_SETFOCUS			 equ	 0007h
1  3043		  =0008			 WM_KILLFOCUS			 equ	 0008h
1  3044		  =000A			 WM_ENABLE			 equ	 000Ah
1  3045		  =000B			 WM_SETREDRAW			 equ	 000Bh
1  3046		  =000C			 WM_SETTEXT			 equ	 000Ch
1  3047		  =000D			 WM_GETTEXT			 equ	 000Dh
1  3048		  =000E			 WM_GETTEXTLENGTH		 equ	 000Eh
1  3049		  =000F			 WM_PAINT			 equ	 000Fh
1  3050		  =0010			 WM_CLOSE			 equ	 0010h
1  3051		  =0011			 WM_QUERYENDSESSION		 equ	 0011h
1  3052		  =0012			 WM_QUIT			 equ	 0012h
1  3053		  =0013			 WM_QUERYOPEN			 equ	 0013h
1  3054		  =0014			 WM_ERASEBKGND			 equ	 0014h
1  3055		  =0015			 WM_SYSCOLORCHANGE		 equ	 0015h
1  3056		  =0016			 WM_ENDSESSION			 equ	 0016h
1  3057		  =0018			 WM_SHOWWINDOW			 equ	 0018h
1  3058		  =001A			 WM_WININICHANGE		 equ	 001Ah
1  3059					 WM_SETTINGCHANGE		 equ	 WM_WININICHANGE
1  3060		  =001B			 WM_DEVMODECHANGE		 equ	 001Bh
1  3061		  =001C			 WM_ACTIVATEAPP			 equ	 001Ch
1  3062		  =001D			 WM_FONTCHANGE			 equ	 001Dh
1  3063		  =001E			 WM_TIMECHANGE			 equ	 001Eh
1  3064		  =001F			 WM_CANCELMODE			 equ	 001Fh
1  3065		  =0020			 WM_SETCURSOR			 equ	 0020h
1  3066		  =0021			 WM_MOUSEACTIVATE		 equ	 0021h
1  3067		  =0022			 WM_CHILDACTIVATE		 equ	 0022h
1  3068		  =0023			 WM_QUEUESYNC			 equ	 0023h
1  3069		  =0024			 WM_GETMINMAXINFO		 equ	 0024h
1  3070		  =0026			 WM_PAINTICON			 equ	 0026h
1  3071		  =0027			 WM_ICONERASEBKGND		 equ	 0027h
1  3072		  =0028			 WM_NEXTDLGCTL			 equ	 0028h
1  3073		  =002A			 WM_SPOOLERSTATUS		 equ	 002Ah
1  3074		  =002B			 WM_DRAWITEM			 equ	 002Bh
1  3075		  =002C			 WM_MEASUREITEM			 equ	 002Ch
1  3076		  =002D			 WM_DELETEITEM			 equ	 002Dh
1  3077		  =002E			 WM_VKEYTOITEM			 equ	 002Eh
1  3078		  =002F			 WM_CHARTOITEM			 equ	 002Fh
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 55
JANE.ASM



1  3079		  =0030			 WM_SETFONT			 equ	 0030h
1  3080		  =0031			 WM_GETFONT			 equ	 0031h
1  3081		  =0032			 WM_SETHOTKEY			 equ	 0032h
1  3082		  =0033			 WM_GETHOTKEY			 equ	 0033h
1  3083		  =0037			 WM_QUERYDRAGICON		 equ	 0037h
1  3084		  =0039			 WM_COMPAREITEM			 equ	 0039h
1  3085		  =0041			 WM_COMPACTING			 equ	 0041h
1  3086		  =0044			 WM_COMMNOTIFY			 equ	 0044h		 ;no longer suported
1  3087		  =0046			 WM_WINDOWPOSCHANGING		 equ	 0046h
1  3088		  =0047			 WM_WINDOWPOSCHANGED		 equ	 0047h
1  3089		  =0048			 WM_POWER			 equ	 0048h
1  3090		  =004A			 WM_COPYDATA			 equ	 004Ah
1  3091		  =004B			 WM_CANCELJOURNAL		 equ	 004Bh
1  3092		  =004E			 WM_NOTIFY			 equ	 004Eh
1  3093		  =0050			 WM_INPUTLANGCHANGEREQUEST	 equ	 0050h
1  3094		  =0051			 WM_INPUTLANGCHANGE		 equ	 0051h
1  3095		  =0052			 WM_TCARD			 equ	 0052h
1  3096		  =0053			 WM_HELP			 equ	 0053h
1  3097		  =0054			 WM_USERCHANGED			 equ	 0054h
1  3098		  =0055			 WM_NOTIFYFORMAT		 equ	 0055h
1  3099		  =007B			 WM_CONTEXTMENU			 equ	 007Bh
1  3100		  =007C			 WM_STYLECHANGING		 equ	 007Ch
1  3101		  =007D			 WM_STYLECHANGED		 equ	 007Dh
1  3102		  =007E			 WM_DISPLAYCHANGE		 equ	 007Eh
1  3103		  =007F			 WM_GETICON			 equ	 007Fh
1  3104		  =0080			 WM_SETICON			 equ	 0080h
1  3105		  =0081			 WM_NCCREATE			 equ	 0081h
1  3106		  =0082			 WM_NCDESTROY			 equ	 0082h
1  3107		  =0083			 WM_NCCALCSIZE			 equ	 0083h
1  3108		  =0084			 WM_NCHITTEST			 equ	 0084h
1  3109		  =0085			 WM_NCPAINT			 equ	 0085h
1  3110		  =0086			 WM_NCACTIVATE			 equ	 0086h
1  3111		  =0087			 WM_GETDLGCODE			 equ	 0087h
1  3112					 ;
1  3113		  =00A0			 WM_NCMOUSEMOVE			 equ	 00A0h
1  3114		  =00A1			 WM_NCLBUTTONDOWN		 equ	 00A1h
1  3115		  =00A2			 WM_NCLBUTTONUP			 equ	 00A2h
1  3116		  =00A3			 WM_NCLBUTTONDBLCLK		 equ	 00A3h
1  3117		  =00A4			 WM_NCRBUTTONDOWN		 equ	 00A4h
1  3118		  =00A5			 WM_NCRBUTTONUP			 equ	 00A5h
1  3119		  =00A6			 WM_NCRBUTTONDBLCLK		 equ	 00A6h
1  3120		  =00A7			 WM_NCMBUTTONDOWN		 equ	 00A7h
1  3121		  =00A8			 WM_NCMBUTTONUP			 equ	 00A8h
1  3122		  =00A9			 WM_NCMBUTTONDBLCLK		 equ	 00A9h
1  3123					 ;
1  3124		  =0100			 WM_KEYFIRST			 equ	 0100h
1  3125		  =0100			 WM_KEYDOWN			 equ	 0100h
1  3126		  =0101			 WM_KEYUP			 equ	 0101h
1  3127		  =0102			 WM_CHAR			 equ	 0102h
1  3128		  =0103			 WM_DEADCHAR			 equ	 0103h
1  3129		  =0104			 WM_SYSKEYDOWN			 equ	 0104h
1  3130		  =0105			 WM_SYSKEYUP			 equ	 0105h
1  3131		  =0106			 WM_SYSCHAR			 equ	 0106h
1  3132		  =0107			 WM_SYSDEADCHAR			 equ	 0107h
1  3133		  =0108			 WM_KEYLAST			 equ	 0108h
1  3134					 ;
1  3135		  =010D			 WM_IME_STARTCOMPOSITION	 equ	 010Dh
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 56
JANE.ASM



1  3136		  =010E			 WM_IME_ENDCOMPOSITION		 equ	 010Eh
1  3137		  =010F			 WM_IME_COMPOSITION		 equ	 010Fh
1  3138		  =010F			 WM_IME_KEYLAST			 equ	 010Fh
1  3139		  =0110			 WM_INITDIALOG			 equ	 0110h
1  3140		  =0111			 WM_COMMAND			 equ	 0111h
1  3141		  =0112			 WM_SYSCOMMAND			 equ	 0112h
1  3142		  =0113			 WM_TIMER			 equ	 0113h
1  3143		  =0114			 WM_HSCROLL			 equ	 0114h
1  3144		  =0115			 WM_VSCROLL			 equ	 0115h
1  3145		  =0116			 WM_INITMENU			 equ	 0116h
1  3146		  =0117			 WM_INITMENUPOPUP		 equ	 0117h
1  3147		  =011F			 WM_MENUSELECT			 equ	 011Fh
1  3148		  =0120			 WM_MENUCHAR			 equ	 0120h
1  3149		  =0121			 WM_ENTERIDLE			 equ	 0121h
1  3150		  =0132			 WM_CTLCOLORMSGBOX		 equ	 0132h
1  3151		  =0133			 WM_CTLCOLOREDIT		 equ	 0133h
1  3152		  =0134			 WM_CTLCOLORLISTBOX		 equ	 0134h
1  3153		  =0135			 WM_CTLCOLORBTN			 equ	 0135h
1  3154		  =0136			 WM_CTLCOLORDLG			 equ	 0136h
1  3155		  =0137			 WM_CTLCOLORSCROLLBAR		 equ	 0137h
1  3156		  =0138			 WM_CTLCOLORSTATIC		 equ	 0138h
1  3157					 ;
1  3158		  =0200			 WM_MOUSEFIRST			 equ	 0200h
1  3159		  =0200			 WM_MOUSEMOVE			 equ	 0200h
1  3160		  =0201			 WM_LBUTTONDOWN			 equ	 0201h
1  3161		  =0202			 WM_LBUTTONUP			 equ	 0202h
1  3162		  =0203			 WM_LBUTTONDBLCLK		 equ	 0203h
1  3163		  =0204			 WM_RBUTTONDOWN			 equ	 0204h
1  3164		  =0205			 WM_RBUTTONUP			 equ	 0205h
1  3165		  =0206			 WM_RBUTTONDBLCLK		 equ	 0206h
1  3166		  =0207			 WM_MBUTTONDOWN			 equ	 0207h
1  3167		  =0208			 WM_MBUTTONUP			 equ	 0208h
1  3168		  =0209			 WM_MBUTTONDBLCLK		 equ	 0209h
1  3169		  =0209			 WM_MOUSELAST			 equ	 0209h
1  3170					 ;
1  3171		  =0210			 WM_PARENTNOTIFY		 equ	 0210h
1  3172		  =0211			 WM_ENTERMENULOOP		 equ	 0211h
1  3173		  =0212			 WM_EXITMENULOOP		 equ	 0212h
1  3174		  =0213			 WM_NEXTMENU			 equ	 0213h
1  3175		  =0214			 WM_SIZING			 equ	 0214h
1  3176		  =0215			 WM_CAPTURECHANGED		 equ	 0215h
1  3177		  =0216			 WM_MOVING			 equ	 0216h
1  3178		  =0218			 WM_POWERBROADCAST		 equ	 0218h
1  3179		  =0219			 WM_DEVICECHANGE		 equ	 0219h
1  3180		  =0220			 WM_MDICREATE			 equ	 0220h
1  3181		  =0221			 WM_MDIDESTROY			 equ	 0221h
1  3182		  =0222			 WM_MDIACTIVATE			 equ	 0222h
1  3183		  =0223			 WM_MDIRESTORE			 equ	 0223h
1  3184		  =0224			 WM_MDINEXT			 equ	 0224h
1  3185		  =0225			 WM_MDIMAXIMIZE			 equ	 0225h
1  3186		  =0226			 WM_MDITILE			 equ	 0226h
1  3187		  =0227			 WM_MDICASCADE			 equ	 0227h
1  3188		  =0228			 WM_MDIICONARRANGE		 equ	 0228h
1  3189		  =0229			 WM_MDIGETACTIVE		 equ	 0229h
1  3190		  =0230			 WM_MDISETMENU			 equ	 0230h
1  3191		  =0231			 WM_ENTERSIZEMOVE		 equ	 0231h
1  3192		  =0232			 WM_EXITSIZEMOVE		 equ	 0232h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 57
JANE.ASM



1  3193		  =0233			 WM_DROPFILES			 equ	 0233h
1  3194		  =0234			 WM_MDIREFRESHMENU		 equ	 0234h
1  3195					 ;
1  3196		  =0281			 WM_IME_SETCONTEXT		 equ	 0281h
1  3197		  =0282			 WM_IME_NOTIFY			 equ	 0282h
1  3198		  =0283			 WM_IME_CONTROL			 equ	 0283h
1  3199		  =0284			 WM_IME_COMPOSITIONFULL		 equ	 0284h
1  3200		  =0285			 WM_IME_SELECT			 equ	 0285h
1  3201		  =0286			 WM_IME_CHAR			 equ	 0286h
1  3202		  =0290			 WM_IME_KEYDOWN			 equ	 0290h
1  3203		  =0291			 WM_IME_KEYUP			 equ	 0291h
1  3204					 ;
1  3205		  =02A1			 WM_MOUSEHOVER			 equ	 02A1h
1  3206					 ;
1  3207		  =0300			 WM_CUT				 equ	 0300h
1  3208		  =0301			 WM_COPY			 equ	 0301h
1  3209		  =0302			 WM_PASTE			 equ	 0302h
1  3210		  =0303			 WM_CLEAR			 equ	 0303h
1  3211		  =0304			 WM_UNDO			 equ	 0304h
1  3212		  =0305			 WM_RENDERFORMAT		 equ	 0305h
1  3213		  =0306			 WM_RENDERALLFORMATS		 equ	 0306h
1  3214		  =0307			 WM_DESTROYCLIPBOARD		 equ	 0307h
1  3215		  =0308			 WM_DRAWCLIPBOARD		 equ	 0308h
1  3216		  =0309			 WM_PAINTCLIPBOARD		 equ	 0309h
1  3217		  =030A			 WM_VSCROLLCLIPBOARD		 equ	 030Ah
1  3218		  =030B			 WM_SIZECLIPBOARD		 equ	 030Bh
1  3219		  =030C			 WM_ASKCBFORMATNAME		 equ	 030Ch
1  3220		  =030D			 WM_CHANGECBCHAIN		 equ	 030Dh
1  3221		  =030E			 WM_HSCROLLCLIPBOARD		 equ	 030Eh
1  3222		  =030F			 WM_QUERYNEWPALETTE		 equ	 030Fh
1  3223		  =0310			 WM_PALETTEISCHANGING		 equ	 0310h
1  3224		  =0311			 WM_PALETTECHANGED		 equ	 0311h
1  3225		  =0312			 WM_HOTKEY			 equ	 0312h
1  3226		  =0317			 WM_PRINT			 equ	 0317h
1  3227		  =0318			 WM_PRINTCLIENT			 equ	 0318h
1  3228					 ;
1  3229		  =0358			 WM_HANDHELDFIRST		 equ	 0358h
1  3230		  =035F			 WM_HANDHELDLAST		 equ	 035Fh
1  3231					 ;
1  3232		  =0360			 WM_AFXFIRST			 equ	 0360h
1  3233		  =037F			 WM_AFXLAST			 equ	 037Fh
1  3234					 ;
1  3235		  =0380			 WM_PENWINFIRST			 equ	 0380h
1  3236		  =038F			 WM_PENWINLAST			 equ	 038Fh
1  3237					 ;
1  3238		  =03E0			 WM_DDE_FIRST			 equ	 03E0h
1  3239					 WM_DDE_INITIATE		 equ	 WM_DDE_FIRST
1  3240		  =03E1			 WM_DDE_TERMINATE		 equ	 WM_DDE_FIRST+1
1  3241		  =03E2			 WM_DDE_ADVISE			 equ	 WM_DDE_FIRST+2
1  3242		  =03E3			 WM_DDE_UNADVISE		 equ	 WM_DDE_FIRST+3
1  3243		  =03E4			 WM_DDE_ACK			 equ	 WM_DDE_FIRST+4
1  3244		  =03E5			 WM_DDE_DATA			 equ	 WM_DDE_FIRST+5
1  3245		  =03E6			 WM_DDE_REQUEST			 equ	 WM_DDE_FIRST+6
1  3246		  =03E7			 WM_DDE_POKE			 equ	 WM_DDE_FIRST+7
1  3247		  =03E8			 WM_DDE_EXECUTE			 equ	 WM_DDE_FIRST+8
1  3248		  =03E8			 WM_DDE_LAST			 equ	 03E8h
1  3249					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 58
JANE.ASM



1  3250		  =0400			 WM_USER			 equ	 0400h
1  3251		  =8000			 WM_APP				 equ	 8000h
1  3252					 ;
1  3253					 ;------------------------------------------------------------------------------
1  3254					 ;
1  3255					 ; ====================
1  3256					 ; WNet*() status codes
1  3257					 ; ====================
1  3258					 ;
1  3259					 WN_SUCCESS			 equ	 NO_ERROR
1  3260					 WN_NO_ERROR			 equ	 NO_ERROR
1  3261					 ;
1  3262					 WN_NOT_SUPPORTED		 equ	 ERROR_NOT_SUPPORTED
1  3263					 WN_CANCEL			 equ	 ERROR_CANCELLED
1  3264					 WN_RETRY			 equ	 ERROR_RETRY
1  3265					 WN_NET_ERROR			 equ	 ERROR_UNEXP_NET_ERR
1  3266					 WN_MORE_DATA			 equ	 ERROR_MORE_DATA
1  3267					 WN_BAD_POINTER			 equ	 ERROR_INVALID_ADDRESS
1  3268					 WN_BAD_VALUE			 equ	 ERROR_INVALID_PARAMETER
1  3269					 WN_BAD_USER			 equ	 ERROR_BAD_USERNAME
1  3270					 WN_BAD_PASSWORD		 equ	 ERROR_INVALID_PASSWORD
1  3271					 WN_ACCESS_DENIED		 equ	 ERROR_ACCESS_DENIED
1  3272					 WN_FUNCTION_BUSY		 equ	 ERROR_BUSY
1  3273					 WN_WINDOWS_ERROR		 equ	 ERROR_UNEXP_NET_ERR
1  3274					 WN_OUT_OF_MEMORY		 equ	 ERROR_NOT_ENOUGH_MEMORY
1  3275					 WN_NO_NETWORK			 equ	 ERROR_NO_NETWORK
1  3276					 WN_EXTENDED_ERROR		 equ	 ERROR_EXTENDED_ERROR
1  3277					 WN_BAD_LEVEL			 equ	 ERROR_INVALID_LEVEL
1  3278					 WN_BAD_HANDLE			 equ	 ERROR_INVALID_HANDLE
1  3279					 WN_NOT_INITIALIZING		 equ	 ERROR_ALREADY_INITIALIZED
1  3280					 WN_NO_MORE_DEVICES		 equ	 ERROR_NO_MORE_DEVICES
1  3281					 ;
1  3282					 WN_NOT_CONNECTED		 equ	 ERROR_NOT_CONNECTED
1  3283					 WN_OPEN_FILES			 equ	 ERROR_OPEN_FILES
1  3284					 WN_DEVICE_IN_USE		 equ	 ERROR_DEVICE_IN_USE
1  3285					 WN_BAD_NETNAME			 equ	 ERROR_BAD_NET_NAME
1  3286					 WN_BAD_LOCALNAME		 equ	 ERROR_BAD_DEVICE
1  3287					 WN_ALREADY_CONNECTED		 equ	 ERROR_ALREADY_ASSIGNED
1  3288					 WN_DEVICE_ERROR		 equ	 ERROR_GEN_FAILURE
1  3289					 WN_CONNECTION_CLOSED		 equ	 ERROR_CONNECTION_UNAVAIL
1  3290					 WN_NO_NET_OR_BAD_PATH		 equ	 ERROR_NO_NET_OR_BAD_PATH
1  3291					 WN_BAD_PROVIDER		 equ	 ERROR_BAD_PROVIDER
1  3292					 WN_CANNOT_OPEN_PROFILE		 equ	 ERROR_CANNOT_OPEN_PROFILE
1  3293					 WN_BAD_PROFILE			 equ	 ERROR_BAD_PROFILE
1  3294					 WN_BAD_DEV_TYPE		 equ	 ERROR_BAD_DEV_TYPE
1  3295					 WN_DEVICE_ALREADY_REMEMBERED	 equ	 ERROR_DEVICE_ALREADY_REMEMBERED
1  3296					 ;
1  3297					 WN_NO_MORE_ENTRIES		 equ	 ERROR_NO_MORE_ITEMS
1  3298					 WN_NOT_CONTAINER		 equ	 ERROR_NOT_CONTAINER
1  3299					 ;
1  3300					 WN_NOT_AUTHENTICATED		 equ	 ERROR_NOT_AUTHENTICATED
1  3301					 WN_NOT_LOGGED_ON		 equ	 ERROR_NOT_LOGGED_ON
1  3302					 WN_NOT_VALIDATED		 equ	 ERROR_NO_LOGON_SERVERS
1  3303					 ;
1  3304					 ;------------------------------------------------------------------------------
1  3305					 ;
1  3306					 ; =============
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 59
JANE.ASM



1  3307					 ; network types
1  3308					 ; =============
1  3309					 ;
1  3310		  =00010000		 WNNC_NET_MSNET			 equ	 00010000h
1  3311		  =00020000		 WNNC_NET_LANMAN		 equ	 00020000h
1  3312		  =00030000		 WNNC_NET_NETWARE		 equ	 00030000h
1  3313		  =00040000		 WNNC_NET_VINES			 equ	 00040000h
1  3314		  =00050000		 WNNC_NET_10NET			 equ	 00050000h
1  3315		  =00060000		 WNNC_NET_LOCUS			 equ	 00060000h
1  3316		  =00070000		 WNNC_NET_SUN_PC_NFS		 equ	 00070000h
1  3317		  =00080000		 WNNC_NET_LANSTEP		 equ	 00080000h
1  3318		  =00090000		 WNNC_NET_9TILES		 equ	 00090000h
1  3319		  =000A0000		 WNNC_NET_LANTASTIC		 equ	 000A0000h
1  3320		  =000B0000		 WNNC_NET_AS400			 equ	 000B0000h
1  3321		  =000C0000		 WNNC_NET_FTP_NFS		 equ	 000C0000h
1  3322		  =000D0000		 WNNC_NET_PATHWORKS		 equ	 000D0000h
1  3323		  =000E0000		 WNNC_NET_LIFENET		 equ	 000E0000h
1  3324		  =000F0000		 WNNC_NET_POWERLAN		 equ	 000F0000h
1  3325		  =00100000		 WNNC_NET_BWNFS			 equ	 00100000h
1  3326		  =00110000		 WNNC_NET_COGENT		 equ	 00110000h
1  3327		  =00120000		 WNNC_NET_FARALLON		 equ	 00120000h
1  3328		  =00130000		 WNNC_NET_APPLETALK		 equ	 00130000h
1  3329					 ;
1  3330					 ;------------------------------------------------------------------------------
1  3331					 ;
1  3332					 ; =============
1  3333					 ; window styles
1  3334					 ; =============
1  3335					 ;
1  3336		  =0000			 WS_OVERLAPPED			 equ	 00000000h
1  3337		  =00010000		 WS_TABSTOP			 equ	 00010000h
1  3338		  =00020000		 WS_GROUP			 equ	 00020000h
1  3339		  =00010000		 WS_MAXIMIZEBOX			 equ	 00010000h
1  3340		  =00020000		 WS_MINIMIZEBOX			 equ	 00020000h
1  3341		  =00040000		 WS_THICKFRAME			 equ	 00040000h
1  3342		  =00080000		 WS_SYSMENU			 equ	 00080000h
1  3343		  =00100000		 WS_HSCROLL			 equ	 00100000h
1  3344		  =00200000		 WS_VSCROLL			 equ	 00200000h
1  3345		  =00400000		 WS_DLGFRAME			 equ	 00400000h
1  3346		  =00800000		 WS_BORDER			 equ	 00800000h
1  3347		  =01000000		 WS_MAXIMIZE			 equ	 01000000h
1  3348		  =02000000		 WS_CLIPCHILDREN		 equ	 02000000h
1  3349		  =04000000		 WS_CLIPSIBLINGS		 equ	 04000000h
1  3350		  =08000000		 WS_DISABLED			 equ	 08000000h
1  3351		  =10000000		 WS_VISIBLE			 equ	 10000000h
1  3352		  =20000000		 WS_MINIMIZE			 equ	 20000000h
1  3353		  =40000000		 WS_CHILD			 equ	 40000000h
1  3354		  =80000000		 WS_POPUP			 equ	 80000000h
1  3355					 ;
1  3356		  =00C00000		 WS_CAPTION			 equ	 WS_BORDER+WS_DLGFRAME
1  3357		  =80880000		 WS_POPUPWINDOW			 equ	 WS_POPUP+WS_BORDER+WS_SYSMENU
1  3358		  =10C80000		 WS_MODAL			 equ	 WS_CAPTION+WS_SYSMENU+WS_VISIBLE
1  3359		  =10C80000		 WS_MODELESS			 equ	 WS_CAPTION+WS_SYSMENU+WS_VISIBLE
1  3360		  =50000000		 WS_CONTROL			 equ	 WS_CHILD+WS_VISIBLE
1  3361		  =00CF0000		 WS_OVERLAPPEDWINDOW	 equ WS_OVERLAPPED+WS_CAPTION+WS_SYSMENU+WS_THICKFRAME		    +
   3362					 +WS_MINIMIZEBOX+WS_MAXIMIZEBOX
1  3363					 ;
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 60
JANE.ASM



1  3364					 WS_TILED			 equ	 WS_OVERLAPPED
1  3365					 WS_CHILDWINDOW			 equ	 WS_CHILD
1  3366					 WS_ICONIC			 equ	 WS_MINIMIZE
1  3367					 WS_SIZEBOX			 equ	 WS_THICKFRAME
1  3368					 WS_TILEDWINDOW			 equ	 WS_OVERLAPPEDWINDOW
1  3369					 ;
1  3370					 ;------------------------------------------------------------------------------
1  3371					 ;
1  3372					 ; ======================
1  3373					 ; extended window styles
1  3374					 ; ======================
1  3375					 ;
1  3376		  =0000			 WS_EX_NONE			 equ	 00000000h
1  3377		  =0001			 WS_EX_DLGMODALFRAME		 equ	 00000001h
1  3378		  =0004			 WS_EX_NOPARENTNOTIFY		 equ	 00000004h
1  3379		  =0008			 WS_EX_TOPMOST			 equ	 00000008h
1  3380		  =0010			 WS_EX_ACCEPTFILES		 equ	 00000010h
1  3381		  =0020			 WS_EX_TRANSPARENT		 equ	 00000020h
1  3382		  =0040			 WS_EX_MDICHILD			 equ	 00000040h
1  3383		  =0080			 WS_EX_TOOLWINDOW		 equ	 00000080h
1  3384		  =0100			 WS_EX_WINDOWEDGE		 equ	 00000100h
1  3385		  =0200			 WS_EX_CLIENTEDGE		 equ	 00000200h
1  3386		  =0400			 WS_EX_CONTEXTHELP		 equ	 00000400h
1  3387		  =1000			 WS_EX_RIGHT			 equ	 00001000h
1  3388		  =0000			 WS_EX_LEFT			 equ	 00000000h
1  3389		  =2000			 WS_EX_RTLREADING		 equ	 00002000h
1  3390		  =0000			 WS_EX_LTRREADING		 equ	 00000000h
1  3391		  =4000			 WS_EX_LEFTSCROLLBAR		 equ	 00004000h
1  3392		  =0000			 WS_EX_RIGHTSCROLLBAR		 equ	 00000000h
1  3393		  =00010000		 WS_EX_CONTROLPARENT		 equ	 00010000h
1  3394		  =00020000		 WS_EX_STATICEDGE		 equ	 00020000h
1  3395		  =00040000		 WS_EX_APPWINDOW		 equ	 00040000h
1  3396					 ;
1  3397		  =0300			 WS_EX_OVERLAPPEDWINDOW		 equ	 00000300h
1  3398		  =0188			 WS_EX_PALETTEWINDOW		 equ	 00000188h
1  3399					 ;
1  3400					 ;------------------------------------------------------------------------------
1  3401					 ;
1  3402					 ; ================
1  3403					 ; background modes
1  3404					 ; ================
1  3405					 ;
1  3406		  =0001			 TRANSPARENT			 equ	 1
1  3407		  =0002			 OPAQUE				 equ	 2
1  3408		  =0002			 BKMODE_LAST			 equ	 2
1  3409					 ;
1  3410					 ;------------------------------------------------------------------------------
1  3411					 ;
1  3412					 ; ====================
1  3413					 ; CreateFile()	actions
1  3414					 ; ====================
1  3415					 ;
1  3416		  =0001			 CREATE_NEW			 equ	 1
1  3417		  =0002			 CREATE_ALWAYS			 equ	 2
1  3418		  =0003			 OPEN_EXISTING			 equ	 3
1  3419		  =0004			 OPEN_ALWAYS			 equ	 4
1  3420		  =0005			 TRUNCATE_EXISTING		 equ	 5
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 61
JANE.ASM



1  3421					 ;
1  3422					 ;------------------------------------------------------------------------------
1  3423					 ;
1  3424					 ; =====================
1  3425					 ; CreateProcess() flags
1  3426					 ; =====================
1  3427					 ;
1  3428		  =0001			 DEBUG_PROCESS			 equ	 00000001h
1  3429		  =0002			 DEBUG_ONLY_THIS_PROCESS	 equ	 00000002h
1  3430		  =0004			 CREATE_SUSPENDED		 equ	 00000004h
1  3431		  =0008			 DETACHED_PROCESS		 equ	 00000008h
1  3432		  =0010			 CREATE_NEW_CONSOLE		 equ	 00000010h
1  3433		  =0020			 NORMAL_PRIORITY_CLASS		 equ	 00000020h
1  3434		  =0040			 IDLE_PRIORITY_CLASS		 equ	 00000040h
1  3435		  =0080			 HIGH_PRIORITY_CLASS		 equ	 00000080h
1  3436		  =0100			 REALTIME_PRIORITY_CLASS	 equ	 00000100h
1  3437					 ;
1  3438		  =0200			 CREATE_NEW_PROCESS_GROUP	 equ	 00000200h
1  3439		  =0400			 CREATE_UNICODE_ENVIRONMENT	 equ	 00000400h
1  3440		  =0800			 CREATE_SEPARATE_WOW_VDM	 equ	 00000800h
1  3441		  =1000			 CREATE_SHARED_WOW_VDM		 equ	 00001000h
1  3442		  =04000000		 CREATE_DEFAULT_ERROR_MODE	 equ	 04000000h
1  3443		  =08000000		 CREATE_NO_WINDOW		 equ	 08000000h
1  3444					 ;
1  3445		  =10000000		 PROFILE_USER			 equ	 10000000h
1  3446		  =20000000		 PROFILE_KERNEL			 equ	 20000000h
1  3447		  =40000000		 PROFILE_SERVER			 equ	 40000000h
1  3448					 ;
1  3449					 ;------------------------------------------------------------------------------
1  3450					 ;
1  3451					 ; ===============
1  3452					 ; gdi error codes
1  3453					 ; ===============
1  3454					 ;
1  3455		  =-0001		 GDI_ERROR			 equ	 -1
1  3456		  =-0001		 HGDI_ERROR			 equ	 -1
1  3457					 ;
1  3458					 ;------------------------------------------------------------------------------
1  3459					 ;
1  3460					 ; =================
1  3461					 ; memory attributes
1  3462					 ; =================
1  3463					 ;
1  3464		  =0001			 PAGE_NOACCESS			 equ	 00000001h
1  3465		  =0002			 PAGE_READONLY			 equ	 00000002h
1  3466		  =0004			 PAGE_READWRITE			 equ	 00000004h
1  3467		  =0008			 PAGE_WRITECOPY			 equ	 00000008h
1  3468		  =0010			 PAGE_EXECUTE			 equ	 00000010h
1  3469		  =0020			 PAGE_EXECUTE_READ		 equ	 00000020h
1  3470		  =0040			 PAGE_EXECUTE_READWRITE		 equ	 00000040h
1  3471		  =0080			 PAGE_EXECUTE_WRITECOPY		 equ	 00000080h
1  3472		  =0100			 PAGE_GUARD			 equ	 00000100h
1  3473		  =0200			 PAGE_NOCACHE			 equ	 00000200h
1  3474					 ;
1  3475		  =1000			 MEM_COMMIT			 equ	 00001000h
1  3476		  =2000			 MEM_RESERVE			 equ	 00002000h
1  3477		  =4000			 MEM_DECOMMIT			 equ	 00004000h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 62
JANE.ASM



1  3478		  =8000			 MEM_RELEASE			 equ	 00008000h
1  3479		  =00010000		 MEM_FREE			 equ	 00010000h
1  3480		  =00020000		 MEM_PRIVATE			 equ	 00020000h
1  3481		  =00040000		 MEM_MAPPED			 equ	 00040000h
1  3482		  =00100000		 MEM_TOP_DOWN			 equ	 00100000h
1  3483					 ;
1  3484		  =00800000		 SEC_FILE			 equ	 00800000h
1  3485		  =01000000		 SEC_IMAGE			 equ	 01000000h
1  3486		  =04000000		 SEC_RESERVE			 equ	 04000000h
1  3487		  =08000000		 SEC_COMMIT			 equ	 08000000h
1  3488		  =10000000		 SEC_NOCACHE			 equ	 10000000h
1  3489					 ;
1  3490					 MEM_IMAGE			 equ	 SEC_IMAGE
1  3491					 ;
1  3492		  =0001			 SECTION_QUERY			 equ	 00000001h
1  3493		  =0002			 SECTION_MAP_WRITE		 equ	 00000002h
1  3494		  =0004			 SECTION_MAP_READ		 equ	 00000004h
1  3495		  =0008			 SECTION_MAP_EXECUTE		 equ	 00000008h
1  3496		  =0010			 SECTION_EXTEND_SIZE		 equ	 00000010h
1  3497					 ;
1  3498					 ;SECTION_ALL_ACCESS	  equ STANDARD_RIGHTS_REQUIRED+SECTION_QUERY+SECTION_MAP_WRITE	    +
   3499					 +SECTION_MAP_READ+SECTION_MAP_EXECUTE+SECTION_EXTEND_SIZE
1  3500					 ;
1  3501					 FILE_MAP_COPY			 equ	 SECTION_QUERY
1  3502					 FILE_MAP_WRITE			 equ	 SECTION_MAP_WRITE
1  3503					 FILE_MAP_READ			 equ	 SECTION_MAP_READ
1  3504					 FILE_MAP_ALL_ACCESS		 equ	 SECTION_ALL_ACCESS
1  3505					 ;
1  3506					 ;------------------------------------------------------------------------------
1  3507					 ;
1  3508					 ; ================
1  3509					 ; PolyFill() modes
1  3510					 ; ================
1  3511					 ;
1  3512		  =0001			 ALTERNATE			 equ	 1
1  3513		  =0002			 WINDING			 equ	 2
1  3514		  =0002			 POLYFILL_LAST			 equ	 2
1  3515					 ;
1  3516					 ;------------------------------------------------------------------------------
1  3517					 ;
1  3518					 ; ============
1  3519					 ; region flags
1  3520					 ; ============
1  3521					 ;
1  3522		  =0000			 ERROR				 equ	 0
1  3523		  =0001			 NULLREGION			 equ	 1
1  3524		  =0002			 SIMPLEREGION			 equ	 2
1  3525		  =0003			 COMPLEXREGION			 equ	 3
1  3526					 RGN_ERROR			 equ	 ERROR
1  3527					 ;
1  3528					 ;------------------------------------------------------------------------------
1  3529					 ;
1  3530					 ; =====================
1  3531					 ; standard access types
1  3532					 ; =====================
1  3533					 ;
1  3534		  =00010000		 DELETE				 equ	 00010000h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 63
JANE.ASM



1  3535		  =00020000		 READ_CONTROL			 equ	 00020000h
1  3536		  =00040000		 WRITE_DAC			 equ	 00040000h
1  3537		  =00080000		 WRITE_OWNER			 equ	 00080000h
1  3538		  =00100000		 SYNCHRONIZE			 equ	 00100000h
1  3539					 ;
1  3540		  =FFFF			 SPECIFIC_RIGHTS_ALL		 equ	 0000FFFFh
1  3541		  =000F0000		 STANDARD_RIGHTS_REQUIRED	 equ	 000F0000h
1  3542		  =001F0000		 STANDARD_RIGHTS_ALL		 equ	 001F0000h
1  3543					 ;
1  3544					 STANDARD_RIGHTS_READ		 equ	 READ_CONTROL
1  3545					 STANDARD_RIGHTS_WRITE		 equ	 READ_CONTROL
1  3546					 STANDARD_RIGHTS_EXECUTE	 equ	 READ_CONTROL
1  3547					 ;
1  3548					 ;------------------------------------------------------------------------------
1  3549					 ;
1  3550					 ; =====================
1  3551					 ; stock logical objects
1  3552					 ; =====================
1  3553					 ;
1  3554		  =0000			 WHITE_BRUSH			 equ	  0
1  3555		  =0001			 LTGRAY_BRUSH			 equ	  1
1  3556		  =0002			 GRAY_BRUSH			 equ	  2
1  3557		  =0003			 DKGRAY_BRUSH			 equ	  3
1  3558		  =0004			 BLACK_BRUSH			 equ	  4
1  3559		  =0005			 NULL_BRUSH			 equ	  5
1  3560		  =0006			 WHITE_PEN			 equ	  6
1  3561		  =0007			 BLACK_PEN			 equ	  7
1  3562		  =0008			 NULL_PEN			 equ	  8
1  3563		  =000A			 OEM_FIXED_FONT			 equ	 10
1  3564		  =000B			 ANSI_FIXED_FONT		 equ	 11
1  3565		  =000C			 ANSI_VAR_FONT			 equ	 12
1  3566		  =000D			 SYSTEM_FONT			 equ	 13
1  3567		  =000E			 DEVICE_DEFAULT_FONT		 equ	 14
1  3568		  =000F			 DEFAULT_PALETTE		 equ	 15
1  3569		  =0010			 SYSTEM_FIXED_FONT		 equ	 16
1  3570		  =0011			 DEFAULT_GUI_FONT		 equ	 17
1  3571					 ;
1  3572					 HOLLOW_BRUSH			 equ	 NULL_BRUSH
1  3573					 ;
1  3574					 ;------------------------------------------------------------------------------
1  3575					 ;
1  3576					 ; ==================
1  3577					 ; StretchBlt()	modes
1  3578					 ; ==================
1  3579					 ;
1  3580		  =0001			 BLACKONWHITE			 equ	 1
1  3581		  =0002			 WHITEONBLACK			 equ	 2
1  3582		  =0003			 COLORONCOLOR			 equ	 3
1  3583		  =0004			 HALFTONE			 equ	 4
1  3584		  =0004			 MAXSTRETCHBLTMODE		 equ	 4
1  3585					 ;
1  3586					 STRETCH_ANDSCANS		 equ	 BLACKONWHITE
1  3587					 STRETCH_ORSCANS		 equ	 WHITEONBLACK
1  3588					 STRETCH_DELETESCANS		 equ	 COLORONCOLOR
1  3589					 STRETCH_HALFTONE		 equ	 HALFTONE
1  3590					 ;
1  3591					 ;------------------------------------------------------------------------------
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 64
JANE.ASM



1  3592					 ;
1  3593					 ; =========================
1  3594					 ; ternary raster operations
1  3595					 ; =========================
1  3596					 ;
1  3597		  =00CC0020		 SRCCOPY			 equ	 00CC0020h	 ;dest = src
1  3598		  =00EE0086		 SRCPAINT			 equ	 00EE0086h	 ;dest = src or	dest
1  3599		  =008800C6		 SRCAND				 equ	 008800C6h	 ;dest = src and dest
1  3600		  =00660046		 SRCINVERT			 equ	 00660046h	 ;dest = src xor dest
1  3601		  =00440328		 SRCERASE			 equ	 00440328h	 ;dest = src and -dest
1  3602		  =00330008		 NOTSRCCOPY			 equ	 00330008h	 ;dest = -src
1  3603		  =001100A6		 NOTSRCERASE			 equ	 001100A6h	 ;dest = -src and -dest
1  3604		  =00C000CA		 MERGECOPY			 equ	 00C000CAh	 ;dest = src and pat
1  3605		  =00BB0226		 MERGEPAINT			 equ	 00BB0226h	 ;dest = -src or dest
1  3606		  =00F00021		 PATCOPY			 equ	 00F00021h	 ;dest = pat
1  3607		  =00FB0A09		 PATPAINT			 equ	 00FB0A09h	 ;dest = DPSnoo
1  3608		  =005A0049		 PATINVERT			 equ	 005A0049h	 ;dest = pat xor dest
1  3609		  =00550009		 DSTINVERT			 equ	 00550009h	 ;dest = -dest
1  3610		  =0042			 BLACKNESS			 equ	 00000042h	 ;dest = black
1  3611		  =00FF0062		 WHITENESS			 equ	 00FF0062h	 ;dest = white
1  3612					 ;
1  3613					 ;;==============================================================================
1  3614					 ;
1  3615					 ;	 STRUCTURES
1  3616					 ;
1  3617					 ;==============================================================================
1  3618					 ;
1  3619	00000000			 STARTUPINFOA		 STRUCT
1  3620	00000000  01*(????????)			 cb		 DWORD		 ?
1  3621	00000004  01*(????????)			 lpReserved	 LPSTR		 ?
1  3622	00000008  01*(????????)			 lpDesktop	 LPSTR		 ?
1  3623	0000000C  01*(????????)			 lpTitle	 LPSTR		 ?
1  3624	00000010  01*(????????)			 dwX		 DWORD		 ?
1  3625	00000014  01*(????????)			 dwY		 DWORD		 ?
1  3626	00000018  01*(????????)			 dwXSize	 DWORD		 ?
1  3627	0000001C  01*(????????)			 dwYSize	 DWORD		 ?
1  3628	00000020  01*(????????)			 dwXCountChars	 DWORD		 ?
1  3629	00000024  01*(????????)			 dwYCountChars	 DWORD		 ?
1  3630	00000028  01*(????????)			 dwFillAttribute DWORD		 ?
1  3631	0000002C  01*(????????)			 dwFlags	 DWORD		 ?
1  3632	00000030  01*(????)			 wShowWindow	 WORD		 ?
1  3633	00000032  01*(????)			 cbReserved2	 WORD		 ?
1  3634	00000034  01*(????????)			 lpReserved2	 LPBYTE		 ?
1  3635	00000038  01*(????????)			 hStdInput	 HANDLE		 ?
1  3636	0000003C  01*(????????)			 hStdOutput	 HANDLE		 ?
1  3637	00000040  01*(????????)			 hStdError	 HANDLE		 ?
1  3638	00000044			 STARTUPINFOA		 ENDS
1  3639
1  3640
1  3641
1  3642
1  3643					 ;
1  3644	00000000			 BITMAPFILEHEADER	 struct
1  3645	00000000  01*(0000)		 bf_bfType		 WORD	   0		 ;file type
1  3646	00000002  01*(00000000)		 bf_bfSize		 DWORD	   0		 ;file size
1  3647	00000006  01*(0000)		 bf_bfReserved1		 WORD	   0		 ;(reserved)
1  3648	00000008  01*(0000)		 bf_bfReserved2		 WORD	   0		 ;(reserved)
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 65
JANE.ASM



1  3649	0000000A  01*(00000000)		 bf_bfOffBits		 DWORD	   0		 ;data offset
1  3650	0000000E			 BITMAPFILEHEADER	 ends
1  3651		  =000E			 BITMAPFILEHEADER_	 equ	   2+4+2+2+4
1  3652					 ;
1  3653					 ;------------------------------------------------------------------------------
1  3654					 ;
1  3655	00000000			 BITMAPINFOHEADER	 struct
1  3656	00000000  01*(00000000)		 bi_biSize		 DWORD	   0		 ;structure size
1  3657	00000004  01*(00000000)		 bi_biWidth		 LONG	   0		 ;bitmap width
1  3658	00000008  01*(00000000)		 bi_biHeight		 LONG	   0		 ;bitmap height
1  3659	0000000C  01*(0000)		 bi_biPlanes		 WORD	   0		 ;number of color planes
1  3660	0000000E  01*(0000)		 bi_biBitCount		 WORD	   0		 ;number of bits per pixel
1  3661	00000010  01*(00000000)		 bi_biCompression	 DWORD	   0		 ;compression type
1  3662	00000014  01*(00000000)		 bi_biSizeImage		 DWORD	   0		 ;number of data bytes
1  3663	00000018  01*(00000000)		 bi_biXPelsPerMeter	 LONG	   0		 ;horizontal resolution
1  3664	0000001C  01*(00000000)		 bi_biYPelsPerMeter	 LONG	   0		 ;vertical resolution
1  3665	00000020  01*(00000000)		 bi_biClrUsed		 DWORD	   0		 ;number of used colors
1  3666	00000024  01*(00000000)		 bi_biClrImportant	 DWORD	   0		 ;number of important colors
1  3667	00000028			 BITMAPINFOHEADER	 ends
1  3668		  =0028			 BITMAPINFOHEADER_	 equ	   4+4+4+2+2+4+4+4+4+4+4
1  3669					 ;
1  3670					 ;------------------------------------------------------------------------------
1  3671					 ;
1  3672	00000000			 BITMAP			 struct
1  3673	00000000  01*(00000000)		 bm_bmType		 LONG	   0		 ;bitmap type
1  3674	00000004  01*(00000000)		 bm_bmWidth		 LONG	   0		 ;bitmap width
1  3675	00000008  01*(00000000)		 bm_bmHeight		 LONG	   0		 ;bitmap height
1  3676	0000000C  01*(00000000)		 bm_bmWidthBytes	 LONG	   0		 ;bytes	per scan line
1  3677	00000010  01*(0000)		 bm_bmPlanes		 WORD	   0		 ;number of color planes
1  3678	00000012  01*(0000)		 bm_bmBitsPixel		 WORD	   0		 ;number of bits per pixel
1  3679	00000014  01*(00000000)		 bm_bmBits		 LPVOID	   0		 ;data pointer
1  3680	00000018			 BITMAP			 ends
1  3681		  =0018			 BITMAP_		 equ	   4+4+4+4+2+2+4
1  3682					 ;
1  3683					 ;------------------------------------------------------------------------------
1  3684					 ;
1  3685	00000000			 COPYDATASTRUCT		 struct
1  3686	00000000  01*(00000000)		 cd_dwData		 DWORD	   0		 ;32-bit data
1  3687	00000004  01*(00000000)		 cd_cbData		 DWORD	   0		 ;number of data bytes
1  3688	00000008  01*(00000000)		 cd_lpData		 PVOID	   0		 ;data bytes
1  3689	0000000C			 COPYDATASTRUCT		 ends
1  3690		  =000C			 COPYDATASTRUCT_	 equ	   4+4+4
1  3691					 ;
1  3692					 ;------------------------------------------------------------------------------
1  3693					 ;
1  3694	00000000			 CONTEXT		 struct
1  3695					 ;
1  3696	00000000  01*(00000000)		 cx_ContextFlags	 DWORD	   0		 ;context flags
1  3697					 ;
1  3698					 ; CONTEXT_DEBUG_REGISTERS
1  3699					 ;
1  3700	00000004  01*(00000000)		 cx_Dr0			 DWORD	   0		 ;debug	register #0
1  3701	00000008  01*(00000000)		 cx_Dr1			 DWORD	   0		 ;debug	register #1
1  3702	0000000C  01*(00000000)		 cx_Dr2			 DWORD	   0		 ;debug	register #2
1  3703	00000010  01*(00000000)		 cx_Dr3			 DWORD	   0		 ;debug	register #3
1  3704	00000014  01*(00000000)		 cx_Dr6			 DWORD	   0		 ;debug	register #6
1  3705	00000018  01*(00000000)		 cx_Dr7			 DWORD	   0		 ;debug	register #7
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 66
JANE.ASM



1  3706					 ;
1  3707					 ; CONTEXT_FLOATING_POINT
1  3708					 ;
1  3709	0000001C  01*(00000000)		 cx_ControlWord		 DWORD	   0		 ;fpu context
1  3710	00000020  01*(00000000)		 cx_StatusWord		 DWORD	   0
1  3711	00000024  01*(00000000)		 cx_TagWord		 DWORD	   0
1  3712	00000028  01*(00000000)		 cx_ErrorOffset		 DWORD	   0
1  3713	0000002C  01*(00000000)		 cx_ErrorSelector	 DWORD	   0
1  3714	00000030  01*(00000000)		 cx_DataOffset		 DWORD	   0
1  3715	00000034  01*(00000000)		 cx_DataSelector	 DWORD	   0
1  3716	00000038  01*(50*(00))		 cx_RegisterArea	 BYTE	   SIZE_OF_80387_REGISTERS dup (0)
1  3717	00000088  01*(00000000)		 cx_Cr0NpxState		 DWORD	   0
1  3718					 ;
1  3719					 ; CONTEXT_SEGMENTS
1  3720					 ;
1  3721	0000008C  01*(00000000)		 cx_SegGs		 DWORD	   0		 ;gs register
1  3722	00000090  01*(00000000)		 cx_SegFs		 DWORD	   0		 ;fs register
1  3723	00000094  01*(00000000)		 cx_SegEs		 DWORD	   0		 ;es register
1  3724	00000098  01*(00000000)		 cx_SegDs		 DWORD	   0		 ;ds register
1  3725					 ;
1  3726					 ; CONTEXT_INTEGER
1  3727					 ;
1  3728	0000009C  01*(00000000)		 cx_Edi			 DWORD	   0		 ;edi register
1  3729	000000A0  01*(00000000)		 cx_Esi			 DWORD	   0		 ;esi register
1  3730	000000A4  01*(00000000)		 cx_Ebx			 DWORD	   0		 ;ebx register
1  3731	000000A8  01*(00000000)		 cx_Edx			 DWORD	   0		 ;edx register
1  3732	000000AC  01*(00000000)		 cx_Ecx			 DWORD	   0		 ;ecx register
1  3733	000000B0  01*(00000000)		 cx_Eax			 DWORD	   0		 ;eax register
1  3734					 ;
1  3735					 ; CONTEXT_CONTROL
1  3736					 ;
1  3737	000000B4  01*(00000000)		 cx_Ebp			 DWORD	   0		 ;ebp register
1  3738	000000B8  01*(00000000)		 cx_Eip			 DWORD	   0		 ;eip register
1  3739	000000BC  01*(00000000)		 cx_SegCs		 DWORD	   0		 ;cs register
1  3740	000000C0  01*(00000000)		 cx_EFlags		 DWORD	   0		 ;eflags register
1  3741	000000C4  01*(00000000)		 cx_Esp			 DWORD	   0		 ;esp register
1  3742	000000C8  01*(00000000)		 cx_SegSs		 DWORD	   0		 ;ss register
1  3743					 ;
1  3744	000000CC			 CONTEXT		 ends
1  3745					 ;
1  3746		  =0004			 CONTEXT_FLAGS_			 equ	 4
1  3747		  =0018			 CONTEXT_DEBUG_REGISTERS_	 equ	 4+4+4+4+4+4
1  3748		  =0070			 CONTEXT_FLOATING_POINT_	 equ	 4+4+4+4+4+4+4+SIZE_OF_80387_REGISTERS+4
1  3749		  =0010			 CONTEXT_SEGMENTS_		 equ	 4+4+4+4
1  3750		  =0018			 CONTEXT_INTEGER_		 equ	 4+4+4+4+4+4
1  3751		  =0018			 CONTEXT_CONTROL_		 equ	 4+4+4+4+4+4
1  3752					 ;
1  3753		  =0044			 CONTEXT_FULL_			 equ	 CONTEXT_FLAGS_+\
   3754										 CONTEXT_SEGMENTS_+\
   3755										 CONTEXT_INTEGER_+\
   3756										 CONTEXT_CONTROL_
1  3757					 ;
1  3758					 ;------------------------------------------------------------------------------
1  3759					 ;
1  3760	00000000			 DIALOGATTRIBUTES	 struct
1  3761	00000000  01*(00000000)		 da_Palette		 DWORD	   0		 ;palette pointer
1  3762	00000004  01*(00000000)		 da_TextBox		 DWORD	   0		 ;text box list	pointer
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 67
JANE.ASM



1  3763	00000008			 DIALOGATTRIBUTES	 ends
1  3764		  =0008			 DIALOGATTRIBUTES_	 equ	   4+4
1  3765					 ;
1  3766					 ;------------------------------------------------------------------------------
1  3767					 ;
1  3768	00000000			 DIALOGPALETTE		 struct
1  3769	00000000  01*(00000000)		 dp_DlgText		 COLORREF  0		 ;dialog text color
1  3770	00000004  01*(00000000)		 dp_DlgBk		 COLORREF  0		 ;dialog background color
1  3771	00000008  01*(00000000)		 dp_StaticText		 COLORREF  0		 ;static text color
1  3772	0000000C  01*(00000000)		 dp_StaticBk		 COLORREF  0		 ;static background color
1  3773	00000010  01*(00000000)		 dp_TextBoxText		 COLORREF  0		 ;text box text	color
1  3774	00000014  01*(00000000)		 dp_TextBoxBk		 COLORREF  0		 ;text box background color
1  3775	00000018  01*(00000000)		 dp_EditText		 COLORREF  0		 ;edit text color
1  3776	0000001C  01*(00000000)		 dp_EditBk		 COLORREF  0		 ;edit background color
1  3777	00000020  01*(00000000)		 dp_ListBoxText		 COLORREF  0		 ;list box text	color
1  3778	00000024  01*(00000000)		 dp_ListBoxBk		 COLORREF  0		 ;list box background color
1  3779	00000028			 DIALOGPALETTE		 ends
1  3780		  =0028			 DIALOGPALETTE_		 equ	   4+4+4+4+4+4+4+4+4+4
1  3781					 ;
1  3782					 ;------------------------------------------------------------------------------
1  3783					 ;
1  3784	00000000			 DIALOGRECORD		 struct
1  3785	00000000  01*(00000000)		 dr_hWnd		 HWND	   0		 ;dialog window	handle
1  3786	00000004  01*(00000000)		 dr_fModeless		 BOOL	   FALSE	 ;mode flag
1  3787	00000008  01*(00000000)		 dr_Attributes		 DWORD	   0		 ;dialog window	attributes list
1  3788	0000000C  01*(00000000)		 dr_Data		 DWORD	   0		 ;dialog data
1  3789	00000010  01*(00000000)		 dr_hDlgBrush		 HBRUSH	   0		 ;dialog brush handle
1  3790	00000014  01*(00000000)		 dr_hStaticBrush	 HBRUSH	   0		 ;static brush handle
1  3791	00000018  01*(00000000)		 dr_hTextBoxBrush	 HBRUSH	   0		 ;text box brush handle
1  3792	0000001C  01*(00000000)		 dr_hEditBrush		 HBRUSH	   0		 ;edit brush handle
1  3793	00000020  01*(00000000)		 dr_hListBoxBrush	 HBRUSH	   0		 ;list box brush handle
1  3794	00000024			 DIALOGRECORD		 ends
1  3795		  =0024			 DIALOGRECORD_		 equ	   4+4+4+4+4+4+4+4+4
1  3796					 ;
1  3797					 ;------------------------------------------------------------------------------
1  3798					 ;
1  3799		  =013E			 WIN32_FIND_DATA_	 equ	   4+8+8+8+4+4+4+4+(MAX_PATH*CHAR_)+(14*CHAR_)
1  3800	00000000			 WIN32_FIND_DATA	 struct
1  3801	00000000  01*(00000000)		 fd_dwFileAttributes	 DWORD	   0		 ;file attributes
1  3802	00000004  01*(00000000	      +	 fd_ftCreationTime	 DWORD	   0, 0		 ;time of file creation
   3803		  00000000)
1  3804	0000000C  01*(00000000	      +	 fd_ftLastAccessTime	 DWORD	   0, 0		 ;time of last file access
   3805		  00000000)
1  3806	00000014  01*(00000000	      +	 fd_ftLastWriteTime	 DWORD	   0, 0		 ;time of last write access
   3807		  00000000)
1  3808	0000001C  01*(00000000)		 fd_nFileSizeHigh	 DWORD	   0		 ;high-order word of file size
1  3809	00000020  01*(00000000)		 fd_nFileSizeLow	 DWORD	   0		 ;low-order word of file size
1  3810	00000024  01*(00000000)		 fd_dwReserved0		 DWORD	   0		 ;(reserved)
1  3811	00000028  01*(00000000)		 fd_dwReserved1		 DWORD	   0		 ;(reserved)
1  3812	0000002C  01*(0104*(00))	 fd_cFileName		 CHAR	   MAX_PATH dup(0) ;matching file name
1  3813	00000130  01*(0E*(00))		 fd_cAlternateFileName	 CHAR	   14 dup(0)	 ;8.3 alias name
1  3814	0000013E			 WIN32_FIND_DATA	 ends
1  3815					 ;
1  3816					 ;------------------------------------------------------------------------------
1  3817					 ;
1  3818	00000000			 BY_HANDLE_FILE_INFORMATION struct
1  3819	00000000  01*(00000000)		 fi_dwFileAttributes	 DWORD	   0		 ;file attributes
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 68
JANE.ASM



1  3820	00000004  01*(00000000	      +	 fi_ftCreationTime	 DWORD	   0, 0		 ;time of file creation
   3821		  00000000)
1  3822	0000000C  01*(00000000	      +	 fi_ftLastAccessTime	 DWORD	   0, 0		 ;time of last file access
   3823		  00000000)
1  3824	00000014  01*(00000000	      +	 fi_ftLastWriteTime	 DWORD	   0, 0		 ;time of last write access
   3825		  00000000)
1  3826	0000001C  01*(00000000)		 fi_dwVolumeSerialNumber DWORD	   0		 ;volume serial	number
1  3827	00000020  01*(00000000)		 fi_nFileSizeHigh	 DWORD	   0		 ;high-order word of file size
1  3828	00000024  01*(00000000)		 fi_nFileSizeLow	 DWORD	   0		 ;low-order word of file size
1  3829	00000028  01*(00000000)		 fi_nNumberOfLinks	 DWORD	   0		 ;number of links to the file
1  3830	0000002C  01*(00000000)		 fi_nFileIndexHigh	 DWORD	   0		 ;high-order word of identifier
1  3831	00000030  01*(00000000)		 fi_nFileIndexLow	 DWORD	   0		 ;low-order word of identifier
1  3832	00000034			 BY_HANDLE_FILE_INFORMATION  ends
1  3833		  =0034			 BY_HANDLE_FILE_INFORMATION_ equ   4+8+8+8+4+4+4+4+4+4
1  3834					 ;
1  3835					 ;------------------------------------------------------------------------------
1  3836					 ;
1  3837	00000000			 FILETIME		 struct
1  3838	00000000  01*(00000000)		 ft_dwLowDateTime	 DWORD	   0		 ;low-order 32 bits
1  3839	00000004  01*(00000000)		 ft_dwHighDateTime	 DWORD	   0		 ;high-order 32	bits
1  3840	00000008			 FILETIME		 ends
1  3841		  =0008			 FILETIME_		 equ	   4+4
1  3842					 ;
1  3843					 ;------------------------------------------------------------------------------
1  3844					 ;
1  3845	00000000			 MSG			 struct
1  3846	00000000  01*(00000000)		 ms_hwnd		 HWND	   0		 ;window handle
1  3847	00000004  01*(00000000)		 ms_message		 UINT	   0		 ;message id
1  3848	00000008  01*(00000000)		 ms_wParam		 WPARAM	   0		 ;additional parameter
1  3849	0000000C  01*(00000000)		 ms_lParam		 LPARAM	   0		 ;additional parameter
1  3850	00000010  01*(00000000)		 ms_time		 DWORD	   0		 ;time stamp
1  3851	00000014  01*(00000000)		 ms_x			 LONGINT   0		 ;x coordinate
1  3852	00000018  01*(00000000)		 ms_y			 LONGINT   0		 ;y coordinate
1  3853	0000001C			 MSG			 ends
1  3854		  =001C			 MSG_			 equ	   4+4+4+4+4+4+4
1  3855					 ;
1  3856					 ;------------------------------------------------------------------------------
1  3857					 ;
1  3858	00000000			 NETRESOURCE		 struct
1  3859	00000000  01*(00000000)		 nr_dwScope		 DWORD	   0		 ;resource scope
1  3860	00000004  01*(00000000)		 nr_dwType		 DWORD	   0		 ;resource type
1  3861	00000008  01*(00000000)		 nr_dwDisplayType	 DWORD	   0		 ;display type
1  3862	0000000C  01*(00000000)		 nr_dwUsage		 DWORD	   0		 ;resource usage
1  3863	00000010  01*(00000000)		 nr_lpLocalName		 LPSTR	   0		 ;redirected local device
1  3864	00000014  01*(00000000)		 nr_lpRemoteName	 LPSTR	   0		 ;remote name
1  3865	00000018  01*(00000000)		 nr_lpComment		 LPSTR	   0		 ;provider supplied comment
1  3866	0000001C  01*(00000000)		 nr_lpProvider		 LPSTR	   0		 ;name of provider
1  3867	00000020			 NETRESOURCE		 ends
1  3868		  =0020			 NETRESOURCE_		 equ	   4+4+4+4+4+4+4+4
1  3869					 ;
1  3870					 ;------------------------------------------------------------------------------
1  3871					 ;
1  3872		  =0088			 OFSTRUCT_		 equ	   1+1+2+2+2+OFS_MAXPATHNAME
1  3873	00000000			 OFSTRUCT		 struct
1  3874	00000000  01*(00)		 of_cBytes		 BYTE	   0		 ;structure size
1  3875	00000001  01*(00)		 of_fFixedDisk		 BYTE	   0		 ;fixed-disk flag
1  3876	00000002  01*(0000)		 of_nErrCode		 WORD	   0		 ;error	code
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 69
JANE.ASM



1  3877	00000004  01*(0000)		 of_Reserved1		 WORD	   0		 ;(reserved)
1  3878	00000006  01*(0000)		 of_Reserved2		 WORD	   0		 ;(reserved)
1  3879	00000008  01*(80*(00))		 of_szPathName		 BYTE	   OFS_MAXPATHNAME dup (0) ;path name
1  3880	00000088			 OFSTRUCT		 ends
1  3881					 ;
1  3882					 ;------------------------------------------------------------------------------
1  3883					 ;
1  3884		  =004C			 OPENFILENAME_		 equ	   4+4+4+4+4+4+4+4+4+4+4+4+4+4+2+2+4+4+4+4
1  3885	00000000			 OPENFILENAME		 struct
1  3886	00000000  01*(0000004C)		 on_lStructSize		 DWORD	   OPENFILENAME_ ;number of bytes
1  3887	00000004  01*(00000000)		 on_hwndOwner		 HWND	   0		 ;dialog box owner
1  3888	00000008  01*(00000000)		 on_hInstance		 HINSTANCE 0		 ;dialog box template id
1  3889	0000000C  01*(00000000)		 on_lpstrFilter		 LPCSTR	   0		 ;filter strings
1  3890	00000010  01*(00000000)		 on_lpstrCustomFilter	 LPSTR	   0		 ;user-defined filter stings
1  3891	00000014  01*(00000000)		 on_nMaxCustFilter	 DWORD	   0		 ;size of custom filter	buffer
1  3892	00000018  01*(00000000)		 on_nFilterIndex	 DWORD	   0		 ;index	into the filter	buffer
1  3893	0000001C  01*(00000000)		 on_lpstrFile		 LPSTR	   0		 ;default file name buffer
1  3894	00000020  01*(00000000)		 on_nMaxFile		 DWORD	   0		 ;size of the file name	buffer
1  3895	00000024  01*(00000000)		 on_lpstrFileTitle	 LPSTR	   0		 ;file title buffer
1  3896	00000028  01*(00000000)		 on_nMaxFileTitle	 DWORD	   0		 ;size of the file title buffer
1  3897	0000002C  01*(00000000)		 on_lpstrInitialDir	 LPCSTR	   0		 ;initial directory
1  3898	00000030  01*(00000000)		 on_lpstrTitle		 LPCSTR	   0		 ;dialog box title
1  3899	00000034  01*(00000000)		 on_Flags		 DWORD	   0		 ;dialog box creation flags
1  3900	00000038  01*(0000)		 on_nFileOffset		 WORD	   0		 ;file name offset in lpstrFile
1  3901	0000003A  01*(0000)		 on_nFileExtension	 WORD	   0		 ;file ext offset in lpstrFile
1  3902	0000003C  01*(00000000)		 on_lpstrDefExt		 LPCSTR	   0		 ;default extension
1  3903	00000040  01*(00000000)		 on_lCustData		 LPARAM	   0		 ;application-defined hook data
1  3904	00000044  01*(00000000)		 on_lpfnHook		 LPFN	   0		 ;hook function
1  3905	00000048  01*(00000000)		 on_lpTemplateName	 LPCSTR	   0		 ;dialog box template name
1  3906	0000004C			 OPENFILENAME		 ends
1  3907					 ;
1  3908					 ;------------------------------------------------------------------------------
1  3909					 ;
1  3910		  =0094			 OSVERSIONINFO_		 equ	 4+4+4+4+4+(128*CHAR_)
1  3911	00000000			 OSVERSIONINFO		 struct
1  3912	00000000  01*(00000094)		 ov_dwOSVersionInfoSize	 DWORD	 OSVERSIONINFO_	 ;structure size
1  3913	00000004  01*(00000000)		 ov_dwMajorVersion	 DWORD	 0		 ;major	version	number
1  3914	00000008  01*(00000000)		 ov_dwMinorVersion	 DWORD	 0		 ;minor	version	number
1  3915	0000000C  01*(00000000)		 ov_dwBuildNumber	 DWORD	 0		 ;build	number
1  3916	00000010  01*(00000000)		 ov_dwPlatformId	 DWORD	 0		 ;platform id
1  3917	00000014  01*(80*(00))		 ov_szCSDVersion	 CHAR	 128 dup (0)	 ;info string
1  3918	00000094			 OSVERSIONINFO		 ends
1  3919					 ;
1  3920					 ;------------------------------------------------------------------------------
1  3921					 ;
1  3922	00000000			 PAINTSTRUCT		 struct
1  3923	00000000  01*(00000000)		 ps_hdc			 HDC	   0		 ;device context handle
1  3924	00000004  01*(00000000)		 ps_fErase		 BOOL	   FALSE	 ;background erase flag
1  3925	00000008  01*(00000000)		 ps_leftPaint		 LONGINT   0		 ;left margin of clipping rect
1  3926	0000000C  01*(00000000)		 ps_topPaint		 LONGINT   0		 ;top margin of	clipping rect
1  3927	00000010  01*(00000000)		 ps_rightPaint		 LONGINT   0		 ;right	margin of clipping rect
1  3928	00000014  01*(00000000)		 ps_bottomPaint		 LONGINT   0		 ;bottom margin	of clipping rect
1  3929	00000018  01*(00000000)		 ps_fRestore		 BOOL	   FALSE	 ;(reserved)
1  3930	0000001C  01*(00000000)		 ps_fIncUpdate		 BOOL	   FALSE	 ;(reserved)
1  3931	00000020  01*(20*(00))		 ps_rgbReserved		 BYTE	   32 dup (0)	 ;(reserved)
1  3932	00000040			 PAINTSTRUCT		 ends
1  3933		  =0040			 PAINTSTRUCT_		 equ	   4+4+4+4+4+4+4+4+32
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 70
JANE.ASM



1  3934					 ;
1  3935					 ;------------------------------------------------------------------------------
1  3936					 ;
1  3937	00000000			 PROCESS_INFORMATION	 struct
1  3938	00000000  01*(00000000)		 pi_hProcess		 HANDLE	   0		 ;process handle
1  3939	00000004  01*(00000000)		 pi_hThread		 HANDLE	   0		 ;thread handle
1  3940	00000008  01*(00000000)		 pi_dwProcessId		 DWORD	   0		 ;process id
1  3941	0000000C  01*(00000000)		 pi_dwThreadId		 DWORD	   0		 ;thread id
1  3942	00000010			 PROCESS_INFORMATION	 ends
1  3943		  =0010			 PROCESS_INFORMATION_	 equ	   4+4+4+4
1  3944					 ;
1  3945					 ;------------------------------------------------------------------------------
1  3946					 ;
1  3947	00000000			 POINT			 struct
1  3948	00000000  01*(00000000)		 pt_x			 LONGINT   0		 ;x coordinate
1  3949	00000004  01*(00000000)		 pt_y			 LONGINT   0		 ;y coordinate
1  3950	00000008			 POINT			 ends
1  3951		  =0008			 POINT_			 equ	   4+4
1  3952					 ;
1  3953					 ;------------------------------------------------------------------------------
1  3954					 ;
1  3955	00000000			 RECT			 struct
1  3956	00000000  01*(00000000)		 rc_left		 LONGINT   0		 ;left margin
1  3957	00000004  01*(00000000)		 rc_top			 LONGINT   0		 ;top margin
1  3958	00000008  01*(00000000)		 rc_right		 LONGINT   0		 ;right	margin
1  3959	0000000C  01*(00000000)		 rc_bottom		 LONGINT   0		 ;bottom margin
1  3960	00000010			 RECT			 ends
1  3961		  =0010			 RECT_			 equ	   4+4+4+4
1  3962					 ;
1  3963					 ;------------------------------------------------------------------------------
1  3964					 ;
1  3965	00000000			 RGBQUAD		 struct
1  3966	00000000  01*(00)		 rq_rgbBlue		 BYTE	   0		 ;intensity of blue component
1  3967	00000001  01*(00)		 rq_rgbGreen		 BYTE	   0		 ;intensity of green component
1  3968	00000002  01*(00)		 rq_rgbRed		 BYTE	   0		 ;intensity of red component
1  3969	00000003  01*(00)		 rq_rgbReserved		 BYTE	   0		 ;(reserved)
1  3970	00000004			 RGBQUAD		 ends
1  3971		  =0004			 RGBQUAD_		 equ	   1+1+1+1
1  3972					 ;
1  3973					 ;------------------------------------------------------------------------------
1  3974					 ;
1  3975		  =000C			 SECURITY_ATTRIBUTES_	 equ	   4+4+4
1  3976	00000000			 SECURITY_ATTRIBUTES	 struct
1  3977	00000000  01*(0000000C)		 sa_nLength		 DWORD	   SECURITY_ATTRIBUTES_	;structure size
1  3978	00000004  01*(00000000)		 sa_lpSecurityDescriptor LPVOID	   0		 ;security descriptor
1  3979	00000008  01*(00000000)		 sa_bInheritHandle	 BOOL	   FALSE	 ;handle inheritance flag
1  3980	0000000C			 SECURITY_ATTRIBUTES	 ends
1  3981					 ;
1  3982					 ;------------------------------------------------------------------------------
1  3983					 ;
1  3984	00000000			 STARTUPINFO		 struct
1  3985	00000000  01*(00000000)		 si_cb			 DWORD	   0		 ;structure size
1  3986	00000004  01*(00000000)		 si_lpReserved		 LPSTR	   0		 ;(reserved)
1  3987	00000008  01*(00000000)		 si_lpDesktop		 LPSTR	   0		 ;desktop name
1  3988	0000000C  01*(00000000)		 sl_lpTitle		 LPSTR	   0		 ;console window title
1  3989	00000010  01*(00000000)		 si_dwX			 DWORD	   0		 ;window origin	(column)
1  3990	00000014  01*(00000000)		 si_dwY			 DWORD	   0		 ;window origin	(row)
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 71
JANE.ASM



1  3991	00000018  01*(00000000)		 si_dwXSize		 DWORD	   0		 ;window width
1  3992	0000001C  01*(00000000)		 si_dwYSize		 DWORD	   0		 ;window height
1  3993	00000020  01*(00000000)		 si_dwXCountChars	 DWORD	   0		 ;screen buffer	width
1  3994	00000024  01*(00000000)		 si_dwYCountChars	 DWORD	   0		 ;screen buffer	height
1  3995	00000028  01*(00000000)		 si_dwFillAttribute	 DWORD	   0		 ;console window initialization
1  3996	0000002C  01*(00000000)		 si_dwFlags		 DWORD	   0		 ;structure member flags
1  3997	00000030  01*(0000)		 si_wShowWindow		 WORD	   0		 ;ShowWindow() parameter
1  3998	00000032  01*(0000)		 si_cbReserved2		 WORD	   0		 ;(reserved)
1  3999	00000034  01*(00000000)		 si_lpReserved2		 LPBYTE	   0		 ;(reserved)
1  4000	00000038  01*(00000000)		 si_hStdInput		 HANDLE	   0		 ;standard input handle
1  4001	0000003C  01*(00000000)		 si_hStdOutput		 HANDLE	   0		 ;standard output handle
1  4002	00000040  01*(00000000)		 si_hStdError		 HANDLE	   0		 ;standard error handle
1  4003	00000044			 STARTUPINFO		 ends
1  4004		  =0044			 STARTUPINFO_		 equ	   4+4+4+4+4+4+4+4+4+4+4+4+2+2+4+4+4+4
1  4005					 ;
1  4006					 ;------------------------------------------------------------------------------
1  4007					 ;
1  4008	00000000			 SYSTEMTIME		 struct
1  4009	00000000  01*(0000)		 st_wYear		 WORD	   0		 ;current year
1  4010	00000002  01*(0000)		 st_wMonth		 WORD	   0		 ;current month	(1..12)
1  4011	00000004  01*(0000)		 st_wDayOfWeek		 WORD	   0		 ;day of week (0 = sunday)
1  4012	00000006  01*(0000)		 st_wDay		 WORD	   0		 ;current day of the month
1  4013	00000008  01*(0000)		 st_wHour		 WORD	   0		 ;current hour
1  4014	0000000A  01*(0000)		 st_wMinute		 WORD	   0		 ;current minute
1  4015	0000000C  01*(0000)		 st_wSecond		 WORD	   0		 ;current second
1  4016	0000000E  01*(0000)		 st_wMilliseconds	 WORD	   0		 ;current millisecond
1  4017	00000010			 SYSTEMTIME		 ends
1  4018		  =0010			 SYSTEMTIME_		 equ	   2+2+2+2+2+2+2+2
1  4019					 ;
1  4020					 ;------------------------------------------------------------------------------
1  4021					 ;
1  4022	00000000			 TBADDBITMAP		 struct
1  4023	00000000  01*(00000000)		 ta_hInst		 HINSTANCE 0		 ;resource module instance
1  4024	00000004  01*(00000000)		 ta_nID			 UINT	   0		 ;resource id
1  4025	00000008			 TBADDBITMAP		 ends
1  4026		  =0008			 TBADDBITMAP_		 equ	   4+4
1  4027					 ;
1  4028					 ;------------------------------------------------------------------------------
1  4029					 ;
1  4030	00000000			 TBBUTTON		 struct
1  4031	00000000  01*(00000000)		 tb_iBitmap		 INTEGER   0		 ;zero-based button image index
1  4032	00000004  01*(00000000)		 tb_idCommand		 INTEGER   0		 ;button command id
1  4033	00000008  01*(00)		 tb_fsState		 BYTE	   0		 ;button state flags
1  4034	00000009  01*(00)		 tb_fsStyle		 BYTE	   0		 ;button style
1  4035	0000000A  01*(00 00)		 tb_bReserved		 BYTE	   0, 0		 ;(reserved)
1  4036	0000000C  01*(00000000)		 tb_dwData		 DWORD	   0		 ;application defined value
1  4037	00000010  01*(00000000)		 tb_iString		 INTEGER   0		 ;zero-based button string index
1  4038	00000014			 TBBUTTON		 ends
1  4039		  =0014			 TBBUTTON_		 equ	   4+4+1+1+(1+1)+4+4
1  4040					 ;
1  4041					 ;------------------------------------------------------------------------------
1  4042					 ;
1  4043	00000000			 TEXTMETRIC		 struct
1  4044	00000000  01*(00000000)		 tm_tmHeight		 LONGINT   0		 ;char height (ascent+descent)
1  4045	00000004  01*(00000000)		 tm_tmAscent		 LONGINT   0		 ;units	above baseline
1  4046	00000008  01*(00000000)		 tm_tmDescent		 LONGINT   0		 ;units	below baseline
1  4047	0000000C  01*(00000000)		 tm_tmInternalLeading	 LONGINT   0		 ;space	included in tmHeight
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 72
JANE.ASM



1  4048	00000010  01*(00000000)		 tm_tmExternalLeading	 LONGINT   0		 ;extra	space between rows
1  4049	00000014  01*(00000000)		 tm_tmAveCharWidth	 LONGINT   0		 ;average character width ('x')
1  4050	00000018  01*(00000000)		 tm_tmMaxCharWidth	 LONGINT   0		 ;maximum character width
1  4051	0000001C  01*(00000000)		 tm_tmWeight		 LONGINT   0		 ;font weight
1  4052	00000020  01*(00000000)		 tm_tmOverhang		 LONGINT   0		 ;italic flag
1  4053	00000024  01*(00000000)		 tm_tmDigitizedAspectX	 LONGINT   0		 ;horizontal device aspect
1  4054	00000028  01*(00000000)		 tm_tmDigitizedAspectY	 LONGINT   0		 ;vertical device aspect
1  4055	0000002C  01*(00)		 tm_tmFirstChar		 CHAR	   0		 ;first	font character value
1  4056	0000002D  01*(00)		 tm_tmLastChar		 CHAR	   0		 ;last font character value
1  4057	0000002E  01*(00)		 tm_tmDefaultChar	 CHAR	   0		 ;default substitution character
1  4058	0000002F  01*(00)		 tm_tmBreakChar		 CHAR	   0		 ;word break character
1  4059	00000030  01*(00)		 tm_tmItalic		 BYTE	   0		 ;italic font
1  4060	00000031  01*(00)		 tm_tmUnderlined	 BYTE	   0		 ;underline font
1  4061	00000032  01*(00)		 tm_tmStruckOut		 BYTE	   0		 ;strikeout font
1  4062	00000033  01*(00)		 tm_tmPitchAndFamily	 BYTE	   0		 ;font pitch/family
1  4063	00000034  01*(00)		 tm_tmCharSet		 BYTE	   0		 ;font character set
1  4064	00000035			 TEXTMETRIC		 ends
1  4065		  =0035			 TEXTMETRIC_		 equ	   4+4+4+4+4+4+4+4+4+4+4+\
   4066									   CHAR_+CHAR_+CHAR_+CHAR_+\
   4067									   1+1+1+1+1
1  4068					 ;
1  4069					 ;------------------------------------------------------------------------------
1  4070					 ;
1  4071	00000000			 WNDCLASS		 struct
1  4072	00000000  01*(00000000)		 w_style		 UINT	   0		 ;class	style
1  4073	00000004  01*(00000000)		 w_lpfnWndProc		 WNDPROC   0		 ;window procedure
1  4074	00000008  01*(00000000)		 w_cbClsExtra		 INTEGER   0		 ;class	extra data
1  4075	0000000C  01*(00000000)		 w_cbWndExtra		 INTEGER   0		 ;window extra data
1  4076	00000010  01*(00000000)		 w_hInstance		 HINSTANCE 0		 ;class	owner
1  4077	00000014  01*(00000000)		 w_hIcon		 HICON	   0		 ;icon handle
1  4078	00000018  01*(00000000)		 w_hCursor		 HCURSOR   0		 ;cursor handle
1  4079	0000001C  01*(00000000)		 w_hbrBackground	 HBRUSH	   0		 ;background color
1  4080	00000020  01*(00000000)		 w_lpszMenuName		 LPCSTR	   0		 ;menu name
1  4081	00000024  01*(00000000)		 w_lpszClassName	 LPCSTR	   0		 ;class	name
1  4082	00000028			 WNDCLASS		 ends
1  4083		  =0028			 WNDCLASS_		 equ	   4+4+4+4+4+4+4+4+4+4
1  4084					 ;
1  4085					 ;------------------------------------------------------------------------------
1  4086					 ;
1  4087	00000000			 WNDPARAMETERS		 struct
1  4088	00000000  01*(00000000)		 wp_hWnd		 HWND	   0		 ;window handle
1  4089	00000004  01*(00000000)		 wp_FontId		 DWORD	   0		 ;font id
1  4090	00000008  01*(00000000)		 wp_TextColor		 COLORREF  0		 ;text color
1  4091	0000000C  01*(00000000)		 wp_BkColor		 COLORREF  0		 ;background color
1  4092	00000010  01*(00000000)		 wp_BkMode		 DWORD	   0		 ;background mode
1  4093	00000014			 WNDPARAMETERS		 ends
1  4094		  =0014			 WNDPARAMETERS_		 equ	   4+4+4+4+4
1  4095					 ;
1  4096					 ;==============================================================================
1  4097					 ;
1  4098					 ;	 DDE STRUCTURES
1  4099					 ;
1  4100					 ;==============================================================================
1  4101					 ;
1  4102	00000000			 DDEACK			 struct
1  4103	00000000  01*(0000)		 ddeack_Status		 WORD	   0		 ;status
1  4104	00000002			 DDEACK			 ends
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 73
JANE.ASM



1  4105		  =0002			 DDEACK_		 equ	   2
1  4106					 ;
1  4107					 ;------------------------------------------------------------------------------
1  4108					 ;
1  4109	00000000			 DDEADVISE		 struct
1  4110	00000000  01*(0000)		 ddeadvise_Status	 WORD	   0		 ;status
1  4111	00000002  01*(0000)		 ddeadvise_cfFormat	 WORD	   0		 ;clipboard data format
1  4112	00000004			 DDEADVISE		 ends
1  4113		  =0004			 DDEADVISE_		 equ	   2+2
1  4114					 ;
1  4115					 ;------------------------------------------------------------------------------
1  4116					 ;
1  4117	00000000			 DDEDATA		 struct
1  4118	00000000  01*(0000)		 ddedata_Status		 WORD	   0		 ;status
1  4119	00000002  01*(0000)		 ddedata_cfFormat	 WORD	   0		 ;clipboard data format
1  4120	00000004  01*(00)		 ddedata_Value		 BYTE	   0		 ;data item
1  4121	00000005			 DDEDATA		 ends
1  4122		  =0005			 DDEDATA_		 equ	   2+2+1
1  4123					 ;
1  4124					 ;------------------------------------------------------------------------------
1  4125					 ;
1  4126	00000000			 DDEPOKE		 struct
1  4127	00000000  01*(0000)		 ddepoke_Status		 WORD	   0		 ;status
1  4128	00000002  01*(0000)		 ddepoke_cfFormat	 WORD	   0		 ;clipboard data format
1  4129	00000004  01*(00)		 ddepoke_Value		 BYTE	   0		 ;data item
1  4130	00000005			 DDEPOKE		 ends
1  4131		  =0005			 DDEPOKE_		 equ	   2+2+1
1  4132					 ;
1  4133					 ;==============================================================================
1  4134
1  4135					 ;*bk*
1  4136					 ;be careful from here on. This	stuff assumes ansi, not	unicode.
1  4137					 ;for example, StartDoc	is equated to StartDocA, the ansi API
1  4138					 ;function. The	unicode	equivalent is StartDocB.
1  4139
1  4140
1  4141
1  4142					 LPSECURITY_ATTRIBUTES	 TYPEDEF PTR SECURITY_ATTRIBUTES
1  4143					 LPRECT		 TYPEDEF PTR RECT
1  4144					 LPPOINT	 TYPEDEF PTR POINT
1  4145					 LPPAINTSTRUCT		 TYPEDEF PTR PAINTSTRUCT
1  4146					 HGDIOBJ	 TYPEDEF DWORD
1  4147					 LPPROCESS_INFORMATION	 TYPEDEF PTR PROCESS_INFORMATION
1  4148					 LPSTARTUPINFO		 TYPEDEF PTR STARTUPINFOA
1  4149					 LPCTBBUTTON		 TYPEDEF PTR TBBUTTON
1  4150
1  4151					 ;*******************************************************************************
1  4152					 ;*			 WINDEF.H	 ****************************************
1  4153					 ;*******************************************************************************
1  4154
1  4155		  =0104			 MAX_PATH	 EQU	 0104h
1  4156
1  4157		  =0000			 NULL		 EQU	 0h
1  4158		  =0000			 FALSE		 EQU	 0h
1  4159		  =0001			 TRUE		 EQU	 1h
1  4160
1  4161					 ;CALLBACK	 TYPEDEF PROTO STDCALL
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 74
JANE.ASM



1  4162		  = STDCALL		 CALLBACK TEXTEQU	 <STDCALL>
1  4163					 ;WINAPI	 TYPEDEF PROTO STDCALL
1  4164		  = STDCALL		 WINAPI	TEXTEQU	 <STDCALL>
1  4165
1  4166
1  4167
1  4168
1  4169					 ;*******************************************************************************
1  4170					 ;*			 WINNT.H	 ****************************************
1  4171					 ;*******************************************************************************
1  4172
1  4173					 LPSTR		 TYPEDEF DWORD
1  4174					 LPCSTR		 TYPEDEF DWORD
1  4175
1  4176		  =0001			 FILE_ATTRIBUTE_READONLY EQU	 0001h
1  4177		  =0002			 FILE_ATTRIBUTE_HIDDEN	 EQU	 0002h
1  4178		  =0004			 FILE_ATTRIBUTE_SYSTEM	 EQU	 0004h
1  4179		  =0010			 FILE_ATTRIBUTE_DIRECTORY EQU	 0010h
1  4180		  =0020			 FILE_ATTRIBUTE_ARCHIVE	 EQU	 0020h
1  4181		  =0080			 FILE_ATTRIBUTE_NORMAL	 EQU	 0080h
1  4182		  =0100			 FILE_ATTRIBUTE_TEMPORARY EQU	 0100h
1  4183		  =0800			 FILE_ATTRIBUTE_COMPRESSED EQU	 0800h
1  4184
1  4185		  =80000000		 GENERIC_READ		 EQU	 080000000h
1  4186		  =40000000		 GENERIC_WRITE		 EQU	 040000000h
1  4187		  =20000000		 GENERIC_EXECUTE	 EQU	 020000000h
1  4188		  =10000000		 GENERIC_ALL		 EQU	 010000000h
1  4189
1  4190		  =0001			 DLL_PROCESS_ATTACH	 EQU	 01h
1  4191		  =0002			 DLL_THREAD_ATTACH	 EQU	 02h
1  4192		  =0003			 DLL_THREAD_DETACH	 EQU	 03h
1  4193		  =0000			 DLL_PROCESS_DETACH	 EQU	 00h
1  4194
1  4195					 RtlMoveMemory		 PROCDESC	 STDCALL :DWORD, :DWORD, :DWORD
1  4196		  = RtlMoveMemory	 MoveMemory		 TEXTEQU <RtlMoveMemory>
1  4197					 RtlFillMemory		 PROCDESC	 STDCALL :DWORD, :DWORD, :BYTE
1  4198		  = RtlFillMemory	 FillMemory		 TEXTEQU <RtlFillMemory>
1  4199
1  4200					 ;*******************************************************************************
1  4201					 ;*			 WINERROR.H	 ****************************************
1  4202					 ;*******************************************************************************
1  4203
1  4204		  =0000			 ERROR_SUCCESS		 EQU	 000h
1  4205		  =0006			 ERROR_INVALID_HANDLE	 EQU	 006h
1  4206		  =00B7			 ERROR_ALREADY_EXISTS	 EQU	 0B7h
1  4207
1  4208
1  4209					 ;*******************************************************************************
1  4210					 ;*	 KERNEL32.LIB	 WINBASE.H	 ****************************************
1  4211					 ;*******************************************************************************
1  4212
1  4213					 ;INVALID_HANDLE_VALUE	 EQU	 -1
1  4214
1  4215		  =0001			 CREATE_NEW		 EQU	 01h
1  4216		  =0002			 CREATE_ALWAYS		 EQU	 02h
1  4217		  =0003			 OPEN_EXISTING		 EQU	 03h
1  4218		  =0004			 OPEN_ALWAYS		 EQU	 04h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 75
JANE.ASM



1  4219		  =0005			 TRUNCATE_EXISTING	 EQU	 05h
1  4220
1  4221	00000000			 OVERLAPPED		 STRUCT
1  4222	00000000  01*(????????)			 Internal	 DWORD	 ?
1  4223	00000004  01*(????????)			 InternalHigh	 DWORD	 ?
1  4224	00000008  01*(????????)			 _Offset	 DWORD	 ?
1  4225	0000000C  01*(????????)			 OffsetHigh	 DWORD	 ?
1  4226	00000010  01*(????????)			 hEvent		 HANDLE	 ?
1  4227	00000014			 OVERLAPPED		 ENDS
1  4228					 LPOVERLAPPED		 TYPEDEF PTR OVERLAPPED
1  4229
1  4230
1  4231		  =0000			 GMEM_FIXED		 EQU	 00000h
1  4232		  =0002			 GMEM_MOVEABLE		 EQU	 00002h
1  4233		  =0040			 GMEM_ZEROINIT		 EQU	 00040h
1  4234		  =2000			 GMEM_SHARE		 EQU	 02000h
1  4235
1  4236		  =0001			 DEBUG_PROCESS		 EQU	 001h
1  4237		  =0002			 DEBUG_ONLY_THIS_PROCESS EQU	 002h
1  4238		  =0004			 CREATE_SUSPENDED	 EQU	 004h
1  4239		  =0008			 DETACHED_PROCESS	 EQU	 008h
1  4240		  =0010			 CREATE_NEWE_CONSOLE	 EQU	 010h
1  4241		  =0020			 NORMAL_PRIORITY_CLASS	 EQU	 020h
1  4242
1  4243					 WinMain		 PROCDESC	 WINAPI	 :HINSTANCE, :HINSTANCE, :LPSTR, :SDWORD
1  4244					 GlobalAlloc		 PROCDESC	 WINAPI	 :UINT,	:DWORD
1  4245					 GlobalLock		 PROCDESC	 WINAPI	 :HGLOBAL
1  4246					 GlobalUnlock		 PROCDESC	 WINAPI	 :HGLOBAL
1  4247					 GlobalFree		 PROCDESC	 WINAPI	 :HGLOBAL
1  4248					 ExitProcess		 PROCDESC	 WINAPI	 :DWORD
1  4249					 GetLastError		 PROCDESC	 WINAPI
1  4250					 DebugBreak		 PROCDESC	 WINAPI
1  4251					 Sleep			 PROCDESC	 WINAPI	 :DWORD
1  4252					 LoadResource		 PROCDESC	 WINAPI	 :HINSTANCE, :HRSRC
1  4253					 GetFileSize		 PROCDESC	 WINAPI	 :HANDLE, :LPDWORD
1  4254					 WriteFile		 PROCDESC	 WINAPI	 :HANDLE, :LPCVOID, :DWORD, :LPDWORD,	    +
   4255					 :LPOVERLAPPED
1  4256					 ReadFile		 PROCDESC	 WINAPI	 :HANDLE, :LPVOID, :DWORD, :LPDWORD,	    +
   4257					 :LPOVERLAPPED
1  4258					 CloseHandle		 PROCDESC	 WINAPI	 :HANDLE
1  4259					 Beep			 PROCDESC	 WINAPI	 :DWORD, :DWORD
1  4260					 lstrlenA		 PROCDESC	 WINAPI	 :LPCSTR
1  4261		  = lstrlenA		 lstrlen		 TEXTEQU <lstrlenA>
1  4262
1  4263					 lstrcatA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  4264		  = lstrcatA		 lstrcat	 TEXTEQU <lstrcatA>
1  4265
1  4266					 lstrcpyA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  4267		  = lstrcpyA		 lstrcpy	 TEXTEQU <lstrcpyA>
1  4268
1  4269		  =0001			 STARTF_USESHOWWINDOW	 EQU	 0001h
1  4270		  =0002			 STARTF_USESIZE		 EQU	 0002h
1  4271		  =0004			 STARTF_USEPOSITION	 EQU	 0004h
1  4272		  =0008			 STARTF_USECOUNTCHARS	 EQU	 0008h
1  4273		  =0010			 STARTF_USEFILLATTRIBUTE EQU	 0010h
1  4274		  =0020			 STARTF_RUNFULLSCREEN	 EQU	 0020h
1  4275		  =0040			 STARTF_FORCEONFEEDBACK	 EQU	 0040h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 76
JANE.ASM



1  4276		  =0080			 STARTF_FORCEOFFFEEDBACK EQU	 0080h
1  4277		  =0100			 STARTF_USESTDHANDLES	 EQU	 0100h
1  4278		  =0200			 STARTF_USEHOTKEY	 EQU	 0200h
1  4279
1  4280
1  4281					 CreateSemaphoreA	 PROCDESC	 WINAPI	 :LPSECURITY_ATTRIBUTES, :LONG,	:LONG,	    +
   4282					 :LPCSTR
1  4283		  = CreateSemaphoreA	 CreateSemaphore	 TEXTEQU <CreateSemaphoreA>
1  4284
1  4285					 GetModuleHandleA	 PROCDESC	 WINAPI	 :DWORD
1  4286		  = GetModuleHandleA	 GetModuleHandle	 TEXTEQU <GetModuleHandleA>
1  4287					 CreateProcessA		 PROCDESC	 STDCALL :LPCSTR, :LPSTR,\
   4288										 :LPSECURITY_ATTRIBUTES,\
   4289										 :LPSECURITY_ATTRIBUTES,\
   4290										 :BOOL,	:DWORD,	:LPVOID, :LPCSTR,\
   4291										 :LPSTARTUPINFO,\
   4292										 :LPPROCESS_INFORMATION
1  4293		  = CreateProcessA	 CreateProcess		 TEXTEQU <CreateProcessA>
1  4294					 GetStartupInfoA	 PROCDESC	 WINAPI	 :LPSTARTUPINFO
1  4295		  = GetStartupInfoA	 GetStartupInfo		 TEXTEQU <GetStartupInfoA>
1  4296					 GetCommandLineA	 PROCDESC	 WINAPI
1  4297		  = GetCommandLineA	 GetCommandLine		 TEXTEQU <GetCommandLineA>
1  4298					 OutputDebugStringA	 PROCDESC	 WINAPI	 :LPCSTR
1  4299		  = OutputDebugStringA	 OutputDebugString	 TEXTEQU <OutputDebugStringA>
1  4300					 FindResourceA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :LPCSTR
1  4301		  = FindResourceA	 FindResource		 TEXTEQU <FindResourceA>
1  4302					 CreateFileA		 PROCDESC	 WINAPI	 :LPCSTR, :DWORD, :DWORD,\
   4303										 :LPSECURITY_ATTRIBUTES,\
   4304										 :DWORD, :DWORD, :HANDLE
1  4305		  = CreateFileA		 CreateFile		 TEXTEQU <CreateFileA>
1  4306					 QueryPerformanceCounter PROCDESC	 WINAPI	 :DWORD
1  4307					 QueryPerformanceFrequency PROCDESC	 WINAPI	 :DWORD
1  4308
1  4309
1  4310					 ;*******************************************************************************
1  4311					 ;*	 GDI32.LIB	 WINGDI.H	 ****************************************
1  4312					 ;*******************************************************************************
1  4313
1  4314		  =00CC0020		 SRCCOPY		 EQU	 00CC0020h	 ;dest = source
1  4315		  =00EE0086		 SRCPAINT		 EQU	 00EE0086h	 ;dest = source	OR dest
1  4316		  =008800C6		 SRCAND			 EQU	 008800C6h	 ;dest = source	AND dest
1  4317		  =00660046		 SRCINVERT		 EQU	 00660046h	 ;dest = source	XOR dest
1  4318		  =00440328		 SRCERASE		 EQU	 00440328h	 ;dest = source	AND (NOT dest)
1  4319
1  4320		  =0000			 TA_LEFT		 EQU	 000h
1  4321		  =0002			 TA_RIGHT		 EQU	 002h
1  4322		  =0006			 TA_CENTER		 EQU	 006h
1  4323		  =0000			 TA_TOP			 EQU	 000h
1  4324		  =0008			 TA_BOTTOM		 EQU	 008h
1  4325		  =0018			 TA_BASELINE		 EQU	 018h
1  4326
1  4327		  =-0001		 SP_ERROR		 EQU	 -1
1  4328
1  4329
1  4330		  =0000			 DEFAULT_QUALITY	 EQU	 000h
1  4331		  =0001			 DRAFT_QUALITY		 EQU	 001h
1  4332		  =0002			 PROOF_QUALITY		 EQU	 002h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 77
JANE.ASM



1  4333		  =0000			 DEFAULT_PITCH		 EQU	 000h
1  4334		  =0001			 FIXED_PITCH		 EQU	 001h
1  4335		  =0002			 VARIABLE_PITCH		 EQU	 002h
1  4336		  =0190			 FW_NORMAL		 EQU	 400
1  4337		  =02BC			 FW_BOLD		 EQU	 700
1  4338		  =0010			 FF_ROMAN		 EQU	 010h
1  4339		  =0030			 FF_MODERN		 EQU	 030h
1  4340
1  4341		  =0000			 CLIP_DEFAULT_PRECIS	 EQU	 000h
1  4342		  =0080			 CLIP_EMBEDDED_PRECIS	 EQU	 128
1  4343		  =0000			 OUT_DEFAULT_PRECIS	 EQU	 000h
1  4344		  =0001			 DEFAULT_CHARSET	 EQU	 001h
1  4345
1  4346		  =0001			 TRANSPARENT		 EQU	 01h
1  4347		  =0002			 OPAQUE			 EQU	 02h
1  4348
1  4349		  =0000			 WHITE_BRUSH		 EQU	 00h
1  4350		  =0001			 LTGRAY_BRUSH		 EQU	 01h
1  4351		  =0002			 GRAY_BRUSH		 EQU	 02h
1  4352		  =0003			 DKGRAY_BRUSH		 EQU	 03h
1  4353		  =0004			 BLACK_BRUSH		 EQU	 04h
1  4354
1  4355					 BitBlt			 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD, :DWORD, :DWORD,\
   4356										 :HDC, :DWORD, :DWORD, :DWORD
1  4357					 CreateCompatibleDC	 PROCDESC	 WINAPI	 :HDC
1  4358					 CreateCompatibleBitmap	 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD
1  4359					 CreateFontA		 PROCDESC	 WINAPI	 :SDWORD, :SDWORD, :SDWORD, :SDWORD,	    +
   4360					 :SDWORD, :DWORD, :DWORD,\
   4361										 :DWORD, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD,    +
   4362					 :LPCSTR
1  4363		  = CreateFontA		 CreateFont		 TEXTEQU <CreateFontA>
1  4364					 CreateSolidBrush	 PROCDESC	 WINAPI	 :COLORREF
1  4365					 DeleteDC		 PROCDESC	 WINAPI	 :HDC
1  4366					 DeleteObject		 PROCDESC	 WINAPI	 :HGDIOBJ
1  4367					 GetStockObject		 PROCDESC	 WINAPI	 :SDWORD
1  4368					 LineTo			 PROCDESC	 WINAPI	 :HDC, :UINT, :UINT
1  4369					 RectVisible		 PROCDESC	 WINAPI	 :HDC, :LPRECT
1  4370					 SelectObject		 PROCDESC	 WINAPI	 :HDC, :HGDIOBJ
1  4371					 SetBkColor		 PROCDESC	 WINAPI	 :HDC, :COLORREF
1  4372					 SetBkMode		 PROCDESC	 WINAPI	 :HDC, :SDWORD
1  4373					 StretchBlt		 PROCDESC	 WINAPI	 :HDC, :SDWORD,	:SDWORD, :SDWORD, :SDWORD,\
   4374										 :HDC, :SDWORD,	:SDWORD, :SDWORD, :SDWORD, :DWORD
1  4375					 SetTextColor		 PROCDESC	 WINAPI	 :HDC, :COLORREF
1  4376					 SetTextAlign		 PROCDESC	 WINAPI	 :HDC, :UINT
1  4377
1  4378					 ;ABORTPROC		 TYPEDEF PROCDESC STDCALL
1  4379		  = STDCALL		 ABORTPROC TEXTEQU <STDCALL>
1  4380
1  4381	00000000			 DOCINFOA		 STRUCT
1  4382	00000000  01*(????????)			 cbSize		 SDWORD	 ?
1  4383	00000004  01*(????????)			 lpszDocName	 LPCSTR	 ?
1  4384	00000008  01*(????????)			 lpszOutput	 LPCSTR	 ?
1  4385	0000000C  01*(????????)			 lpszDataType	 LPCSTR	 ?
1  4386	00000010  01*(????????)			 fwType		 DWORD	 ?
1  4387	00000014			 DOCINFOA		 ENDS
1  4388					 LPDOCINFO		 TYPEDEF PTR DOCINFOA
1  4389		  = DOCINFOA		 DOCINFO		 TEXTEQU <DOCINFOA>
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 78
JANE.ASM



1  4390
1  4391					 StartDocA		 PROCDESC	 WINAPI	 :HDC, :LPDOCINFO
1  4392		  = StartDocA		 StartDoc		 TEXTEQU <StartDocA>
1  4393					 EndDoc			 PROCDESC	 WINAPI	 :HDC
1  4394					 StartPage		 PROCDESC	 WINAPI	 :HDC
1  4395					 EndPage		 PROCDESC	 WINAPI	 :HDC
1  4396					 AbortDoc		 PROCDESC	 WINAPI	 :HDC
1  4397					 ;SetAbortProc		 PROCDESC	 WINAPI	 :HDC, :ABORTPROC
1  4398					 SetAbortProc		 PROCDESC	 WINAPI	 :HDC, :DWORD
1  4399
1  4400					 MoveToEx		 PROCDESC	 WINAPI	 :HDC, :UINT, :UINT, :LPPOINT
1  4401					 TextOutA		 PROCDESC	 WINAPI	 :HDC, :DWORD, :DWORD, :LPCSTR,	:DWORD
1  4402		  = TextOutA		 TextOut		 TEXTEQU <TextOutA>
1  4403
1  4404
1  4405					 ;*******************************************************************************
1  4406					 ;*	 USER32.LIB	 WINUSER.H	 ****************************************
1  4407					 ;*******************************************************************************
1  4408
1  4409					 ;DLGPROC		 TYPEDEF PROCDESC STDCALL
1  4410		  = STDCALL		 DLGPROC TEXTEQU <STDCALL>
1  4411
1  4412		  =0000			 SB_HORZ		 EQU	 0
1  4413		  =0001			 SB_VERT		 EQU	 1
1  4414		  =0002			 SB_CTL			 EQU	 2
1  4415		  =0003			 SB_BOTH		 EQU	 3
1  4416		  =0004			 SB_THUMBPOSITION	 EQU	 4
1  4417		  =0008			 SB_ENDSCROLL		 EQU	 8
1  4418
1  4419		  =0000			 SW_HIDE		 EQU	 00h
1  4420		  =0001			 SW_SHOWNORMAL		 EQU	 01h
1  4421		  =0002			 SW_SHOWMINIMIZED	 EQU	 02h
1  4422		  =0003			 SW_SHOWMAXIMIZED	 EQU	 03h
1  4423		  =0005			 SW_SHOW		 EQU	 05h
1  4424		  =0009			 SW_RESTORE		 EQU	 09h
1  4425		  =000A			 SW_SHOWDEFAULT		 EQU	 0Ah
1  4426
1  4427		  =0030			 WNDCLASSEX_ EQU 4*12
1  4428	00000000			 WNDCLASSEXA		 STRUCT
1  4429	00000000  01*(????????)			 wc_cbSize		 UINT		 ?
1  4430	00000004  01*(????????)			 wc_style		 UINT		 ?
1  4431	00000008  01*(????????)			 wc_lpfnWndProc		 DWORD		 ?
1  4432	0000000C  01*(????????)			 wc_cbClsExtra		 SDWORD		 ?
1  4433	00000010  01*(????????)			 wc_cbWndExtra		 SDWORD		 ?
1  4434	00000014  01*(????????)			 wc_hInstance		 HINSTANCE	 ?
1  4435	00000018  01*(????????)			 wc_hIcon		 HICON		 ?
1  4436	0000001C  01*(????????)			 wc_hCursor		 HCURSOR	 ?
1  4437	00000020  01*(????????)			 wc_hbrBackground	 HBRUSH		 ?
1  4438	00000024  01*(????????)			 wc_lpszMenuName	 LPCSTR		 ?
1  4439	00000028  01*(????????)			 wc_lpszClassName	 LPCSTR		 ?
1  4440	0000002C  01*(????????)			 wc_hIconSm		 HICON		 ?
1  4441	00000030			 WNDCLASSEXA		 ENDS
1  4442		  = WNDCLASSEXA		 WNDCLASSEX		 TEXTEQU <WNDCLASSEXA>
1  4443
1  4444					 LPMSG			 TYPEDEF DWORD
1  4445
1  4446					 ;GWL_ID		 EQU	 0FFFFFFF4h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 79
JANE.ASM



1  4447
1  4448		  =0001			 WM_CREATE		 EQU	 0001h
1  4449		  =0002			 WM_DESTROY		 EQU	 0002h
1  4450		  =0005			 WM_SIZE		 EQU	 0005h
1  4451		  =000C			 WM_SETTEXT		 EQU	 000Ch
1  4452		  =000F			 WM_PAINT		 EQU	 000Fh
1  4453		  =0010			 WM_CLOSE		 EQU	 0010h
1  4454		  =0014			 WM_ERASEBKGND		 EQU	 0014h
1  4455		  =004E			 WM_NOTIFY		 EQU	 004Eh
1  4456		  =0053			 WM_HELP		 EQU	 0053h
1  4457		  =0102			 WM_CHAR		 EQU	 0102h
1  4458		  =0110			 WM_INITDIALOG		 EQU	 0110h
1  4459		  =0111			 WM_COMMAND		 EQU	 0111h
1  4460		  =0113			 WM_TIMER		 EQU	 0113h
1  4461		  =0114			 WM_HSCROLL		 EQU	 0114h
1  4462		  =0115			 WM_VSCROLL		 EQU	 0115h
1  4463		  =011F			 WM_MENUSELECT		 EQU	 011Fh
1  4464		  =0136			 WM_CTLCOLORDLG		 EQU	 0136h
1  4465		  =0200			 WM_MOUSEMOVE		 EQU	 0200h
1  4466		  =0201			 WM_LBUTTONDOWN		 EQU	 0201h
1  4467		  =0202			 WM_LBUTTONUP		 EQU	 0202h
1  4468		  =0203			 WM_LBUTTONDBLCLK	 EQU	 0203h
1  4469		  =0204			 WM_RBUTTONDOWN		 EQU	 0204h
1  4470		  =0205			 WM_RBUTTONUP		 EQU	 0205h
1  4471		  =0206			 WM_RBUTTONDBLCLK	 EQU	 0206h
1  4472		  =0300			 WM_CUT			 EQU	 0300h
1  4473		  =0301			 WM_COPY		 EQU	 0301h
1  4474		  =0302			 WM_PASTE		 EQU	 0302h
1  4475		  =0303			 WM_CLEAR		 EQU	 0303h
1  4476		  =0304			 WM_UNDO		 EQU	 0304h
1  4477		  =0400			 WM_USER		 EQU	 0400h
1  4478
1  4479		  =80000000		 WS_POPUP		 EQU	 080000000h
1  4480		  =40000000		 WS_CHILD		 EQU	 040000000h
1  4481		  =20000000		 WS_MINIMIZE		 EQU	 020000000h
1  4482		  =10000000		 WS_VISIBLE		 EQU	 010000000h
1  4483		  =01000000		 WS_MAXIMIZE		 EQU	 001000000h
1  4484		  =00C00000		 WS_CAPTION		 EQU	 000C00000h
1  4485		  =00800000		 WS_BORDER		 EQU	 000800000h
1  4486		  =00400000		 WS_DLGFRAME		 EQU	 000400000h
1  4487		  =00200000		 WS_VSCROLL		 EQU	 000200000h
1  4488		  =00100000		 WS_HSCROLL		 EQU	 000100000h
1  4489		  =00080000		 WS_SYSMENU		 EQU	 000080000h
1  4490					 ;WS_SIZEBOX		 EQU	 000040000h
1  4491		  =00020000		 WS_MINIMIZEBOX		 EQU	 000020000h
1  4492		  =00010000		 WS_MAXIMIZEBOX		 EQU	 000010000h
1  4493		  =00CF0000		 WS_OVERLAPPEDWINDOW	 EQU	 000CF0000h
1  4494		  =0004			 WS_EX_NOPARENTNOTIFY	 EQU	 000000004h
1  4495		  =0100			 WS_EX_WINDOWEDGE	 EQU	 000000100h
1  4496		  =0200			 WS_EX_CLIENTEDGE	 EQU	 000000200h
1  4497		  =0300			 WS_EX_OVERLAPPEDWINDOW	 EQU	 WS_EX_WINDOWEDGE + WS_EX_CLIENTEDGE
1  4498
1  4499		  =0001			 CS_VREDRAW		 EQU	 00001h
1  4500		  =0002			 CS_HREDRAW		 EQU	 00002h
1  4501		  =0080			 CS_PARENTDC		 EQU	 00080h
1  4502		  =2000			 CS_BYTEALIGNWINDOW	 EQU	 02000h
1  4503
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 80
JANE.ASM



1  4504		  =0001			 BDR_RAISEDOUTER	 EQU	 01h
1  4505		  =0002			 BDR_SUNKENOUTER	 EQU	 02h
1  4506		  =0004			 BDR_RAISEDINNER	 EQU	 04h
1  4507		  =0008			 BDR_SUNKENINNER	 EQU	 08h
1  4508		  =0005			 EDGE_RAISED		 EQU	 BDR_RAISEDOUTER + BDR_RAISEDINNER
1  4509		  =000A			 EDGE_SUNKEN		 EQU	 BDR_SUNKENOUTER + BDR_SUNKENINNER
1  4510		  =0006			 EDGE_ETCHED		 EQU	 BDR_SUNKENOUTER + BDR_RAISEDINNER
1  4511		  =0009			 EDGE_BUMP		 EQU	 BDR_RAISEDOUTER + BDR_SUNKENINNER
1  4512		  =0001			 BF_LEFT		 EQU	 01h
1  4513		  =0002			 BF_TOP			 EQU	 02h
1  4514		  =0004			 BF_RIGHT		 EQU	 04h
1  4515		  =0008			 BF_BOTTOM		 EQU	 08h
1  4516		  =000F			 BF_RECT		 EQU	 BF_LEFT + BF_TOP + BF_RIGHT + BF_BOTTOM
1  4517					 DrawEdge		 PROCDESC	 WINAPI	 :HDC, :LPRECT,	:UINT, :UINT
1  4518
1  4519
1  4520	00000000			 NMHDR			 STRUCT
1  4521	00000000  01*(????????)			 hwndFrom	 HWND	 ?
1  4522	00000004  01*(????????)			 idFrom		 UINT	 ?
1  4523	00000008  01*(????????)			 code		 UINT	 ?
1  4524	0000000C			 NMHDR			 ENDS
1  4525
1  4526					 GetMessageA		 PROCDESC	 WINAPI	 :LPMSG, :HWND,	:UINT, :UINT
1  4527		  = GetMessageA		 GetMessage		 TEXTEQU <GetMessageA>
1  4528					 TranslateMessage	 PROCDESC	 WINAPI	 :LPMSG
1  4529					 DispatchMessageA	 PROCDESC	 WINAPI	 :LPMSG
1  4530		  = DispatchMessageA	 DispatchMessage	 TEXTEQU <DispatchMessageA>
1  4531
1  4532					 PeekMessageA		 PROCDESC	 WINAPI	 :LPMSG, :HWND,	:UINT, :UINT, :UINT
1  4533		  = PeekMessageA	 PeekMessage		 TEXTEQU <PeekMessageA>
1  4534		  =0000			 PM_NOREMOVE		 EQU	 00h
1  4535		  =0001			 PM_REMOVE		 EQU	 01h
1  4536		  =0002			 PM_NOYIELD		 EQU	 02h
1  4537
1  4538					 SendMessageA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4539		  = SendMessageA	 SendMessage		 TEXTEQU <SendMessageA>
1  4540					 PostMessageA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4541		  = PostMessageA	 PostMessage		 TEXTEQU <PostMessageA>
1  4542					 DefWindowProcA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4543		  = DefWindowProcA	 DefWindowProc		 TEXTEQU <DefWindowProcA>
1  4544					 PostQuitMessage     PROCDESC	 WINAPI	 :DWORD
1  4545					 RegisterClassA	     PROCDESC WINAPI :DWORD
1  4546		  = RegisterClassA	 RegisterClass	     TEXTEQU <RegisterClassA>
1  4547					 RegisterClassExA	 PROCDESC	 WINAPI	 :DWORD
1  4548		  = RegisterClassExA	 RegisterClassEx	 TEXTEQU <RegisterClassExA>
1  4549					 CreateWindowA	 PROCDESC WINAPI :LPCTSTR, :LPCTSTR, :DWORD, :DWORD, :DWORD, :DWORD, :DWORD,+
   4550					 :HWND,	:HMENU,	:HANDLE, :DWORD
1  4551		  = CreateWindowA	 CreateWindow	 TEXTEQU <CreateWindowA>
1  4552					 CreateWindowExA	 PROCDESC	 WINAPI	 :DWORD, :LPCSTR, :LPCSTR, :DWORD, :SDWORD, +
   4553					 :SDWORD,\
   4554										 :SDWORD, :SDWORD, :HWND, :HMENU, :HINSTANCE, :DWORD
1  4555		  = CreateWindowExA	 CreateWindowEx		 TEXTEQU <CreateWindowExA>
1  4556					 DestroyWindow		 PROCDESC	 WINAPI	 :HWND
1  4557					 ShowWindow		 PROCDESC	 WINAPI	 :HWND,	:SDWORD
1  4558					 MoveWindow		 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :UINT, :UINT, :BOOL
1  4559					 SetWindowPos		 PROCDESC	 WINAPI	 :HWND,	:HWND, :UINT, :UINT, :UINT, :UINT,  +
   4560					 :UINT
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 81
JANE.ASM



1  4561					 IsIconic		 PROCDESC	 WINAPI	 :HWND
1  4562
1  4563		  =0001			 SWP_NOSIZE		 EQU	 001h
1  4564		  =0002			 SWP_NOMOVE		 EQU	 002h
1  4565		  =0004			 SWP_NOZORDER		 EQU	 004h
1  4566		  =0020			 SWP_FRAMECHANGED	 EQU	 020h
1  4567					 SWP_DRAWFRAME		 EQU	 SWP_FRAMECHANGED
1  4568		  =0000			 HWND_TOP		 EQU	 000h
1  4569
1  4570	00000000			 DLGTEMPLATE		 STRUCT
1  4571	00000000  01*(????????)			 style		 DWORD	 ?
1  4572	00000004  01*(????????)			 dwExtendedStyle DWORD	 ?
1  4573	00000008  01*(????)			 cdit		 WORD	 ?
1  4574	0000000A  01*(????)			 x		 SWORD	 ?
1  4575	0000000C  01*(????)			 y		 SWORD	 ?
1  4576	0000000E  01*(????)			 nx		 SWORD	 ?
1  4577	00000010  01*(????)			 ny		 SWORD	 ?
1  4578	00000012			 DLGTEMPLATE		 ENDS
1  4579					 ;LPCDLGTEMPLATE	 TYPEDEF PTR LPDLGTEMPLATE
1  4580
1  4581					 ;CreateDialogParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DLGPROC,	    +
   4582					 :LPARAM
1  4583					 CreateDialogParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DWORD, :LPARAM
1  4584		  = CreateDialogParamA	 CreateDialogParam	 TEXTEQU <CreateDialogParamA>
1  4585					 ;DialogBoxParamA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND,	    +
   4586					 :DLGPROC, :LPARAM
1  4587					 DialogBoxParamA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :HWND, :DWORD, :LPARAM
1  4588		  = DialogBoxParamA	 DialogBoxParam		 TEXTEQU <DialogBoxParamA>
1  4589					 EndDialog		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4590					 GetDlgItem		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4591					 SetDlgItemTextA	 PROCDESC	 WINAPI	 :HWND,	:SDWORD, :LPCSTR
1  4592		  = SetDlgItemTextA	 SetDlgItemText		 TEXTEQU <SetDlgItemTextA>
1  4593					 GetDlgItemTextA     PROCDESC	 WINAPI	 :HWND,	:SDWORD, :LPCSTR, :DWORD
1  4594		  = GetDlgItemTextA	 GetDlgItemText	     TEXTEQU <GetDlgItemTextA>
1  4595					 SendDlgItemMessageA	 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :WPARAM, :LPARAM
1  4596		  = SendDlgItemMessageA	 SendDlgItemMessage	 TEXTEQU <SendDlgItemMessageA>
1  4597					 DefDlgProcA		 PROCDESC	 WINAPI	 :HWND,	:UINT, :WPARAM,	:LPARAM
1  4598		  = DefDlgProcA		 DefDlgProc		 TEXTEQU <DefDlgProcA>
1  4599		  =001E			 DLGWINDOWEXTRA		 EQU	 00000001Eh
1  4600
1  4601					 SetFocus		 PROCDESC	 WINAPI	 :HWND
1  4602					 SetTimer		 PROCDESC	 WINAPI	 :HWND,	:UINT, :UINT, :PTR DWORD
1  4603					 KillTimer		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4604					 EnableWindow		 PROCDESC	 WINAPI	 :HWND,	:BOOL
1  4605					 LoadAcceleratorsA	 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4606		  = LoadAcceleratorsA	 LoadAccelerators	 TEXTEQU <LoadAcceleratorsA>
1  4607					 TranslateAcceleratorA	 PROCDESC	 WINAPI	 :HWND,	:HACCEL, :LPMSG
1  4608		  =		      +	 TranslateAccelerator	 TEXTEQU <TranslateAcceleratorA>
   4609		  TranslateAcceleratorA
1  4610
1  4611		  =0000			 SM_CXSCREEN		 EQU	 000h
1  4612		  =0001			 SM_CYSCREEN		 EQU	 001h
1  4613		  =0010			 SM_CXFULLSCREEN	 EQU	 010h
1  4614		  =0011			 SM_CYFULLSCREEN	 EQU	 011h
1  4615					 GetSystemMetrics	 PROCDESC	 WINAPI	 :UINT
1  4616					 DrawTextA		 PROCDESC	 WINAPI	 :HDC, :LPCSTR,	:UINT, :LPRECT,	:UINT
1  4617		  = DrawTextA		 DrawText		 TEXTEQU <DrawTextA>
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 82
JANE.ASM



1  4618					 UpdateWindow		 PROCDESC	 WINAPI	 :HWND
1  4619					 SetForegroundWindow	 PROCDESC	 WINAPI	 :HWND
1  4620					 GetDC			 PROCDESC	 WINAPI	 :HWND
1  4621					 GetWindowDC		 PROCDESC	 WINAPI	 :HWND
1  4622					 ReleaseDC		 PROCDESC	 WINAPI	 :HWND,	:HDC
1  4623					 BeginPaint		 PROCDESC	 WINAPI	 :HWND,	:LPPAINTSTRUCT
1  4624					 EndPaint		 PROCDESC	 WINAPI	 :HWND,	:LPPAINTSTRUCT
1  4625					 InvalidateRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT, :UINT
1  4626					 InvalidateRgn		 PROCDESC	 WINAPI	 :HWND,	:HRGN, :BOOL
1  4627					 GetScrollPos		 PROCDESC	 WINAPI	 :HWND,	:UINT
1  4628					 GetWindowTextA	     PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :DWORD
1  4629		  = GetWindowTextA	 GetWindowText	     TEXTEQU <GetWindowTextA>
1  4630					 SetWindowTextA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR
1  4631		  = SetWindowTextA	 SetWindowText		 TEXTEQU <SetWindowTextA>
1  4632					 GetClientRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT
1  4633					 GetWindowRect		 PROCDESC	 WINAPI	 :HWND,	:LPRECT
1  4634
1  4635		  =0000			 MB_OK			 EQU	 000h
1  4636		  =0001			 MB_OKCANCEL		 EQU	 001h
1  4637		  =0002			 MB_ABORTRETRYIGNORE	 EQU	 002h
1  4638		  =0003			 MB_YESNOCANCEL		 EQU	 003h
1  4639		  =0004			 MB_YESNO		 EQU	 004h
1  4640		  =0005			 MB_RETRYCANCEL		 EQU	 005h
1  4641					 ;MB_ICONERROR		 EQU	 010h
1  4642					 ;MB_ICONWARNING	 EQU	 030h
1  4643					 MessageBoxA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :LPCSTR, :UINT
1  4644		  = MessageBoxA		 MessageBox		 TEXTEQU <MessageBoxA>
1  4645
1  4646		  =0001			 COLOR_BACKGROUND	 EQU	 001h
1  4647		  =0005			 COLOR_WINDOW		 EQU	 005h
1  4648					 ;COLOR_3DFACE		 EQU	 00Fh
1  4649					 ;COLOR_3DSHADOW	 EQU	 010h
1  4650		  =000C			 COLOR_APPWORKSPACE	 EQU	 00Ch
1  4651		  =0016			 COLOR_3DLIGHT		 EQU	 016h
1  4652					 GetSysColor		 PROCDESC	 WINAPI	 :UINT
1  4653					 SetSysColors		 PROCDESC	 WINAPI	 :UINT
1  4654					 FillRect		 PROCDESC	 WINAPI	 :HDC, :LPRECT,	:HBRUSH
1  4655					 GetWindowLongA		 PROCDESC	 WINAPI	 :HWND,	:DWORD
1  4656		  = GetWindowLongA	 GetWindowLong		 TEXTEQU <GetWindowLongA>
1  4657					 GetDesktopWindow	 PROCDESC	 WINAPI
1  4658					 FindWindowA		 PROCDESC	 WINAPI	 :LPCSTR, :LPCSTR
1  4659		  = FindWindowA		 FindWindow		 TEXTEQU <FindWindowA>
1  4660					 FindWindowExA		 PROCDESC	 WINAPI	 :LPCSTR, :LPCSTR
1  4661		  = FindWindowExA	 FindWindowEx		 TEXTEQU <FindWindowExA>
1  4662					 GetLastActivePopup	 PROCDESC	 WINAPI	 :HWND
1  4663
1  4664		  =0010			 MF_POPUP		 EQU	 00010h
1  4665		  =2000			 MF_SYSMENU		 EQU	 02000h
1  4666					 ;MFT_SEPARATOR		 EQU	 00800h
1  4667
1  4668		  =F000			 SC_SIZE		 EQU	 0F000h
1  4669		  =F010			 SC_MOVE		 EQU	 0F010h
1  4670		  =F020			 SC_MINIMIZE		 EQU	 0F020h
1  4671		  =F030			 SC_MAXIMIZE		 EQU	 0F030h
1  4672		  =F060			 SC_CLOSE		 EQU	 0F060h
1  4673		  =F120			 SC_RESTORE		 EQU	 0F120h
1  4674
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 83
JANE.ASM



1  4675					 LoadBitmapA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4676		  = LoadBitmapA		 LoadBitmap		 TEXTEQU <LoadBitmapA>
1  4677					 LoadCursorA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4678		  = LoadCursorA		 LoadCursor		 TEXTEQU <LoadCursorA>
1  4679					 LoadCursorFromFileA	 PROCDESC	 WINAPI	 :LPCSTR
1  4680		  = LoadCursorFromFileA	 LoadCursorFromFile	 TEXTEQU <LoadCursorFromFileA>
1  4681					 SetCursor		 PROCDESC	 WINAPI	 :HCURSOR
1  4682					 LoadIconA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4683		  = LoadIconA		 LoadIcon		 TEXTEQU <LoadIconA>
1  4684					 LoadMenuA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR
1  4685		  = LoadMenuA		 LoadMenu		 TEXTEQU <LoadMenuA>
1  4686					 LoadStringA		 PROCDESC	 WINAPI	 :HINSTANCE, :INTEGER, :LPTSTR,	:INTEGER
1  4687		  = LoadStringA		 LoadString		 TEXTEQU <LoadStringA>
1  4688					 LoadLibraryA		 PROCDESC	 WINAPI	 :LPCSTR
1  4689		  = LoadLibraryA	 LoadLibrary		 TEXTEQU <LoadLibraryA>
1  4690
1  4691
1  4692		  =0000			 IMAGE_BITMAP		 EQU	 00000h
1  4693		  =0001			 IMAGE_ICON		 EQU	 00001h
1  4694		  =0002			 IMAGE_CURSOR		 EQU	 00002h
1  4695		  =0020			 LR_LOADTRANSPARENT	 EQU	 00020h
1  4696		  =1000			 LR_LOADMAP3DCOLORS	 EQU	 01000h
1  4697					 LoadImageA		 PROCDESC	 WINAPI	 :HINSTANCE, :LPCSTR, :UINT, :UINT, :UINT,  +
   4698					 :UINT
1  4699		  = LoadImageA		 LoadImage		 TEXTEQU <LoadImageA>
1  4700
1  4701		  =7F00			 IDC_ARROW		 EQU	 07f00h
1  4702
1  4703					 LoadStringA		 PROCDESC	 WINAPI	 :HINSTANCE, :UINT, :LPCSTR, :UINT
1  4704		  = LoadStringA		 LoadString		 TEXTEQU <LoadStringA>
1  4705
1  4706		  =0001			 IDOK			 EQU	 01h
1  4707		  =0002			 IDCANCEL		 EQU	 02h
1  4708		  =0003			 IDABORT		 EQU	 03h
1  4709		  =0004			 IDRETRY		 EQU	 04h
1  4710		  =0005			 IDIGNORE		 EQU	 05h
1  4711		  =0006			 IDYES			 EQU	 06h
1  4712		  =0007			 IDNO			 EQU	 07h
1  4713		  =0008			 IDCLOSE		 EQU	 08h
1  4714		  =0009			 IDHELP			 EQU	 09h
1  4715
1  4716		  =0000			 ES_LEFT		 EQU	 000h
1  4717		  =0004			 ES_MULTILINE		 EQU	 004h
1  4718		  =0040			 ES_AUTOVSCROLL		 EQU	 040h
1  4719
1  4720		  =00F0			 BM_GETCHECK		 EQU	 0F0h
1  4721		  =00F1			 BM_SETCHECK		 EQU	 0F1h
1  4722		  =00F5			 BM_CLICK		 EQU	 0F5h
1  4723		  =00F7			 BM_SETIMAGE		 EQU	 0F7h
1  4724
1  4725		  =0000			 BST_UNCHECKED		 EQU	 00h
1  4726		  =0001			 BST_CHECKED		 EQU	 01h
1  4727		  =0002			 BST_INDETERMINATE	 EQU	 02h
1  4728
1  4729		  =0000			 SS_LEFT		 EQU	 00h
1  4730		  =0001			 SS_CENTER		 EQU	 01h
1  4731		  =0002			 SS_RIGHT		 EQU	 02h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 84
JANE.ASM



1  4732		  =0003			 SS_ICON		 EQU	 03h
1  4733		  =0007			 SS_BLACKFRAME		 EQU	 07h
1  4734
1  4735					 IsDialogMessageA	 PROCDESC	 WINAPI	 :HWND,	:LPMSG
1  4736		  = IsDialogMessageA	 IsDialogMessage	 TEXTEQU <IsDialogMessageA>
1  4737
1  4738		  =0080			 DS_MODALFRAME		 EQU	 0080h
1  4739		  =0100			 DS_NOIDLEMSG		 EQU	 0100h
1  4740		  =0004			 DS_3DLOOK		 EQU	 0004h
1  4741
1  4742		  =0001			 HELP_CONTEXT		 EQU	 01h
1  4743		  =0002			 HELP_QUIT		 EQU	 02h
1  4744		  =0003			 HELP_INDEX		 EQU	 03h
1  4745		  =0003			 HELP_CONTENTS		 EQU	 03h
1  4746		  =0004			 HELP_HELPONHELP	 EQU	 04h
1  4747		  =000A			 HELP_CONTEXTMENU	 EQU	 0Ah
1  4748		  =000B			 HELP_FINDER		 EQU	 0Bh
1  4749		  =000C			 HELP_WM_HELP		 EQU	 0Ch
1  4750
1  4751					 WinHelpA		 PROCDESC	 WINAPI	 :HWND,	:LPCSTR, :UINT,	:DWORD
1  4752		  = WinHelpA		 WinHelp		 TEXTEQU <WinHelpA>
1  4753
1  4754
1  4755					 ;*******************************************************************************
1  4756					 ;*	 COMDLG32.LIB	 COMMDLG.H	 ****************************************
1  4757					 ;*******************************************************************************
1  4758
1  4759	00000000			 OPENFILENAMEA		 STRUCT
1  4760	00000000  01*(????????)			 op_lStructSize	 DWORD		 ?
1  4761	00000004  01*(????????)			 op_hwndOwner	 HWND		 ?
1  4762	00000008  01*(????????)			 op_hInstance	 HINSTANCE	 ?
1  4763	0000000C  01*(????????)			 op_lpstrFilter	 LPCSTR		 ?
1  4764	00000010  01*(????????)			 op_lpstrCustomFilter LPSTR		 ?
1  4765	00000014  01*(????????)			 op_nMaxCustFilter	 DWORD		 ?
1  4766	00000018  01*(????????)			 op_nFilterIndex DWORD		 ?
1  4767	0000001C  01*(????????)			 op_lpstrFile	 LPSTR		 ?
1  4768	00000020  01*(????????)			 op_nMaxFile	 DWORD		 ?
1  4769	00000024  01*(????????)			 op_lpstrFileTitle	 LPSTR		 ?
1  4770	00000028  01*(????????)			 op_nMaxFileTitle	 DWORD		 ?
1  4771	0000002C  01*(????????)			 op_lpstrInitialDir	 LPCSTR		 ?
1  4772	00000030  01*(????????)			 op_lpstrTitle	 LPCSTR		 ?
1  4773	00000034  01*(????????)			 op_Flags		 DWORD		 ?
1  4774	00000038  01*(????)			 op_nFileOffset	 WORD		 ?
1  4775	0000003A  01*(????)			 op_nFileExtension	 WORD		 ?
1  4776	0000003C  01*(????????)			 op_lpstrDefExt	 LPCSTR		 ?
1  4777	00000040  01*(????????)			 op_lCustData	 LPARAM		 ?
1  4778	00000044  01*(????????)			 op_lpfnHook	 DWORD		 ?
1  4779	00000048  01*(????????)			 op_lpTemplateName	 LPCSTR		 ?
1  4780	0000004C			 OPENFILENAMEA		 ENDS
1  4781					 LPOPENFILENAME		 TYPEDEF PTR OPENFILENAMEA
1  4782
1  4783					 GetOpenFileNameA	 PROCDESC	 WINAPI	 :LPOPENFILENAME
1  4784		  = GetOpenFileNameA	 GetOpenFileName	 TEXTEQU <GetOpenFileNameA>
1  4785					 GetSaveFileNameA	 PROCDESC	 WINAPI	 :LPOPENFILENAME
1  4786		  = GetSaveFileNameA	 GetSaveFileName	 TEXTEQU <GetSaveFileNameA>
1  4787
1  4788		  =0001			 OFN_READONLY		 EQU	 00000001h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 85
JANE.ASM



1  4789		  =0002			 OFN_OVERWRITEPROMPT	 EQU	 00000002h
1  4790		  =0004			 OFN_HIDEREADONLY	 EQU	 00000004h
1  4791		  =0008			 OFN_NOCHANGEDIR	 EQU	 00000008h
1  4792		  =0010			 OFN_SHOWHELP		 EQU	 00000010h
1  4793		  =0020			 OFN_ENABLEHOOK		 EQU	 00000020h
1  4794		  =0040			 OFN_ENABLETEMPLATE	 EQU	 00000040h
1  4795		  =0080			 OFN_ENABLETEMPLATEHANDLE EQU	 00000080h
1  4796		  =0100			 OFN_NOVALIDATE		 EQU	 00000100h
1  4797		  =0200			 OFN_ALLOWMULTISELECT	 EQU	 00000200h
1  4798		  =0400			 OFN_EXTENSIONDIFFERENT	 EQU	 00000400h
1  4799		  =0800			 OFN_PATHMUSTEXIST	 EQU	 00000800h
1  4800		  =1000			 OFN_FILEMUSTEXIST	 EQU	 00001000h
1  4801		  =2000			 OFN_CREATEPROMPT	 EQU	 00002000h
1  4802		  =4000			 OFN_SHAREAWARE		 EQU	 00004000h
1  4803		  =8000			 OFN_NOREADONLYRETURN	 EQU	 00008000h
1  4804		  =00010000		 OFN_NOTESTFILECREATE	 EQU	 00010000h
1  4805		  =00020000		 OFN_NONETWORKBUTTON	 EQU	 00020000h
1  4806		  =00040000		 OFN_NOLONGNAMES	 EQU	 00040000h
1  4807		  =00080000		 OFN_EXPLORER		 EQU	 00080000h
1  4808		  =00100000		 OFN_NODEREFERENCELINKS	 EQU	 00100000h
1  4809		  =00200000		 OFN_LONGNAMES		 EQU	 00200000h
1  4810
1  4811	00000000			 PRINTDLGA		 STRUCT
1  4812	00000000  01*(????????)			 pr_lStructSize	 DWORD	 ?
1  4813	00000004  01*(????????)			 pr_hwndOwner	 HWND	 ?
1  4814	00000008  01*(????????)			 pr_hDevMode	 HGLOBAL ?
1  4815	0000000C  01*(????????)			 pr_hDevNames	 HGLOBAL ?
1  4816	00000010  01*(????????)			 pr_hDC		 HDC	 ?
1  4817	00000014  01*(????????)			 pr_Flags		 DWORD	 ?
1  4818	00000018  01*(????)			 pr_nFromPage	 WORD	 ?
1  4819	0000001A  01*(????)			 pr_nToPage		 WORD	 ?
1  4820	0000001C  01*(????)			 pr_nMinPage	 WORD	 ?
1  4821	0000001E  01*(????)			 pr_nMaxPage	 WORD	 ?
1  4822	00000020  01*(????)			 pr_nCopies		 WORD	 ?
1  4823	00000022  01*(????????)			 pr_hInstance	 HINSTANCE ?
1  4824	00000026  01*(????????)			 pr_lCustData	 DWORD	 ?
1  4825	0000002A  01*(????????)			 pr_lpfnPrintHook	 DWORD	 ?
1  4826	0000002E  01*(????????)			 pr_lpfnSetupHook	 DWORD	 ?
1  4827	00000032  01*(????????)			 pr_lpPrintTemplateName	LPCSTR ?
1  4828	00000036  01*(????????)			 pr_lpSetupTemplateName	LPCSTR ?
1  4829	0000003A  01*(????????)			 pr_hPrintTemplate	 HGLOBAL ?
1  4830	0000003E  01*(????????)			 pr_hSetupTemplate	 HGLOBAL ?
1  4831	00000042			 PRINTDLGA		 ENDS
1  4832					 LPPRINTDLG		 TYPEDEF PTR PRINTDLGA
1  4833
1  4834					 PrintDlg		 PROCDESC	 WINAPI	 :LPPRINTDLG
1  4835
1  4836		  =0000			 PD_ALLPAGES		 EQU	 00000h
1  4837		  =0001			 PD_SELECTION		 EQU	 00001h
1  4838		  =0002			 PD_PAGENUMS		 EQU	 00002h
1  4839		  =0004			 PD_NOSELECTION		 EQU	 00004h
1  4840		  =0008			 PD_NOPAGENUMS		 EQU	 00008h
1  4841		  =0010			 PD_COLLATE		 EQU	 00010h
1  4842		  =0020			 PD_PRINTTOFILE		 EQU	 00020h
1  4843		  =0040			 PD_PRINTSETUP		 EQU	 00040h
1  4844		  =0080			 PD_NOWARNING		 EQU	 00080h
1  4845		  =0100			 PD_RETURNDC		 EQU	 00100h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 86
JANE.ASM



1  4846		  =0200			 PD_RETURNIC		 EQU	 00200h
1  4847		  =0400			 PD_RETURNDEFAULT	 EQU	 00400h
1  4848		  =0800			 PD_SHOWHELP		 EQU	 00800h
1  4849		  =1000			 PD_ENABLEPRINTHOOK	 EQU	 01000h
1  4850		  =2000			 PD_ENABLESETUPHOOK	 EQU	 02000h
1  4851		  =4000			 PD_ENABLEPRINTTEMPLATE	 EQU	 04000h
1  4852		  =8000			 PD_ENABLESETUPTEMPLATE	 EQU	 08000h
1  4853		  =00010000		 PD_ENABLEPRINTTEMPLATEHANDLE	 EQU	 0010000h
1  4854		  =00020000		 PD_ENABLESETUPTEMPLATEHANDLE	 EQU	 0020000h
1  4855		  =00040000		 PD_USEDEVMODECOPIES		 EQU	 0040000h
1  4856		  =00040000		 PD_USEDEVMODECOPIESANDCOLLATE	 EQU	 0040000h
1  4857		  =00080000		 PD_DISABLEPRINTTOFILE		 EQU	 0080000h
1  4858		  =00100000		 PD_HIDEPRINTTOFILE		 EQU	 0100000h
1  4859		  =00200000		 PD_NONETWORKBUTTON		 EQU	 0200000h
1  4860
1  4861					 CommDlgExtendedError	 PROCDESC	 WINAPI
1  4862
1  4863	00000000			 PAGESETUPDLGA		 STRUCT
1  4864	00000000  01*(????????)			 pa_lStructSize	 DWORD	 ?
1  4865	00000004  01*(????????)			 pa_hwndOwner	 HWND	 ?
1  4866	00000008  01*(????????)			 pa_hDevMode	 HGLOBAL ?
1  4867	0000000C  01*(????????)			 pa_hDevNames	 HGLOBAL ?
1  4868	00000010  01*(????????)			 pa_Flags		 DWORD	 ?
1  4869	00000014  01*(00000000	      +		 pa_ptPaperSize	 POINT	 <>
   4870		  00000000)
1  4871	0000001C  01*(00000000	      +		 pa_rtMinMargin	 RECT	 <>
   4872		  00000000 00000000   +
   4873		  00000000)
1  4874	0000002C  01*(00000000	      +		 pa_rtMargin	 RECT	 <>
   4875		  00000000 00000000   +
   4876		  00000000)
1  4877	0000003C  01*(????????)			 pa_hInstance	 HINSTANCE ?
1  4878	00000040  01*(????????)			 pa_lCustData	 LPARAM	 ?
1  4879	00000044  01*(????????)			 pa_lpfnPageSetupHook	 DWORD	 ?
1  4880	00000048  01*(????????)			 pa_lpfnPagePaintHook	 DWORD	 ?
1  4881	0000004C  01*(????????)			 pa_lpPageSetupTemplateName LPCSTR	 ?
1  4882	00000050  01*(????????)			 pa_hPageSetupTemplate	 HGLOBAL ?
1  4883	00000054			 PAGESETUPDLGA		 ENDS
1  4884					 LPPAGESETUPDLG		 TYPEDEF PTR PAGESETUPDLGA
1  4885
1  4886					 PageSetupDlg		 PROCDESC	 WINAPI	 :LPPAGESETUPDLG
1  4887
1  4888		  =0000			 PSD_DEFAULTMINMARGINS		 EQU	 0000000h
1  4889		  =0001			 PSD_MINMARGINS			 EQU	 0000001h
1  4890		  =0002			 PSD_MARGINS			 EQU	 0000002h
1  4891		  =0004			 PSD_INTHOUSANDTHSOFINCHES	 EQU	 0000004h
1  4892		  =0008			 PSD_INHUNDREDTHSOFMILLIMETERS	 EQU	 0000008h
1  4893		  =0010			 PSD_DISABLEMARGINS		 EQU	 0000010h
1  4894		  =0020			 PSD_DISABLEPRINTER		 EQU	 0000020h
1  4895		  =0080			 PSD_NOWARNING			 EQU	 0000080h
1  4896		  =0100			 PSD_DISABLEORIENTATION		 EQU	 0000100h
1  4897		  =0200			 PSD_DISABLEPAPER		 EQU	 0000200h
1  4898		  =0400			 PSD_RETURNDEFAULT		 EQU	 0000400h
1  4899		  =0800			 PSD_SHOWHELP			 EQU	 0000800h
1  4900		  =2000			 PSD_ENABLEPAGESETUPHOOK	 EQU	 0002000h
1  4901		  =8000			 PSD_ENABLEPAGESETUPTEMPLATE	 EQU	 0008000h
1  4902		  =00020000		 PSD_ENABLEPAGESETUPTEMPLATEHANDLE EQU	 0020000h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 87
JANE.ASM



1  4903		  =00040000		 PSD_ENABLEPAGEPAINTHOOK	 EQU	 0040000h
1  4904		  =00080000		 PSD_DISABLEPAGEPAINTING	 EQU	 0080000h
1  4905		  =00200000		 PSD_NONETWORKBUTTON		 EQU	 0200000h
1  4906
1  4907
1  4908					 ;*******************************************************************************
1  4909					 ;*	 COMCTL32.LIB	 COMMCTRL.H	 ****************************************
1  4910					 ;*******************************************************************************
1  4911
1  4912					 InitCommonControls	 PROCDESC	 WINAPI
1  4913
1  4914
1  4915					 CreateToolbarEx	 PROCDESC	 WINAPI	 :HWND,	:DWORD,	:UINT, :SDWORD,\
   4916										 :HINSTANCE, :UINT, :LPCTBBUTTON,\
   4917										 :SDWORD, :SDWORD, :SDWORD,\
   4918										 :SDWORD, :SDWORD, :UINT
1  4919		  =0004			 TBSTATE_ENABLED	 EQU	 4h
1  4920		  =0000			 TBSTYLE_BUTTON		 EQU	 0h
1  4921		  =0001			 TBSTYLE_SEP		 EQU	 1h
1  4922		  =0100			 TBSTYLE_TOOLTIPS	 EQU	 0100h
1  4923
1  4924		  =0413			 TB_ADDBITMAP		 EQU	 WM_USER + 13h
1  4925
1  4926
1  4927		  =-0001		 HINST_COMMCTRL		 EQU	 -1h
1  4928		  =0000			 IDB_STD_SMALL_COLOR	 EQU	 00h
1  4929
1  4930		  =0000			 STD_CUT		 EQU	 00h
1  4931		  =0001			 STD_COPY		 EQU	 01h
1  4932		  =0002			 STD_PASTE		 EQU	 02h
1  4933		  =0003			 STD_UNDO		 EQU	 03h
1  4934		  =0004			 STD_REDOW		 EQU	 04h
1  4935		  =0005			 STD_DELETE		 EQU	 05h
1  4936		  =0006			 STD_FILENEW		 EQU	 06h
1  4937		  =0007			 STD_FILEOPEN		 EQU	 07h
1  4938		  =0008			 STD_FILESAVE		 EQU	 08h
1  4939		  =0009			 STD_PRINTPRE		 EQU	 09h
1  4940		  =000A			 STD_PROPERTIES		 EQU	 0Ah
1  4941		  =000B			 STD_HELP		 EQU	 0Bh
1  4942		  =000C			 STD_FIND		 EQU	 0Ch
1  4943		  =000D			 STD_REPLACE		 EQU	 0Dh
1  4944		  =000E			 STD_PRINT		 EQU	 0Eh
1  4945
1  4946		  =-0208		 TTN_FIRST		 EQU	 -520
1  4947		  =-0208		 TTN_NEEDTEXT		 EQU	 TTN_FIRST - 0
1  4948
1  4949	00000000			 TOOLTIPTEXTA		 STRUCT
1  4950	00000000  01*(0C*(??))			 hdr		 NMHDR	 <>
1  4951	0000000C  01*(????????)			 lpszText	 LPSTR	 ?
1  4952	00000010  01*(50*(??))			 szText		 SBYTE	 80 DUP	(?)
1  4953	00000060  01*(????????)			 hinst		 HINSTANCE ?
1  4954	00000064  01*(????????)			 uFlags		 UINT	 ?
1  4955	00000068			 TOOLTIPTEXTA		 ENDS
1  4956					 LPTOOLTIPTEXT		 TYPEDEF PTR TOOLTIPTEXTA
1  4957		  = TOOLTIPTEXTA	 TOOLTIPTEXT		 TEXTEQU <TOOLTIPTEXTA>
1  4958
1  4959					 CreateStatusWindow	 PROCDESC	 WINAPI	 :LONG,	:LPCSTR, :HWND,	:UINT
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 88
JANE.ASM



1  4960
1  4961		  =0401			 SB_SETTEXTA		 EQU	 (WM_USER+1)
1  4962					 SB_SETTEXT		 EQU	 SB_SETTEXTA
1  4963		  =0409			 SB_SIMPLE		 EQU	 (WM_USER+9)
1  4964		  =0100			 SBT_NOBORDERS		 EQU	 0100h
1  4965		  =0200			 SBT_POPOUT		 EQU	 0200h
1  4966
1  4967		  =0400			 TBM_GETPOS		 EQU	 (WM_USER)
1  4968		  =0405			 TBM_SETPOS		 EQU	 (WM_USER+5)
1  4969		  =0406			 TBM_SETRANGE		 EQU	 (WM_USER+6)
1  4970		  =0414			 TBM_SETTICFREQ		 EQU	 (WM_USER+20)
1  4971		  =0415			 TBM_SETPAGESIZE	 EQU	 (WM_USER+21)
1  4972		  =0000			 TB_LINEUP		 EQU	 00h
1  4973		  =0001			 TB_LINEDOWN		 EQU	 01h
1  4974		  =0002			 TB_PAGEUP		 EQU	 02h
1  4975		  =0003			 TB_PAGEDOWN		 EQU	 03h
1  4976		  =0004			 TB_THUMBPOSITION	 EQU	 04h
1  4977		  =0005			 TB_THUMBTRACK		 EQU	 05h
1  4978		  =0006			 TB_TOP			 EQU	 06h
1  4979		  =0007			 TB_BOTTOM		 EQU	 07h
1  4980		  =0008			 TB_ENDTRACK		 EQU	 08h
1  4981
1  4982		  =0465			 UDM_SETRANGE		 EQU	 (WM_USER+101)
1  4983		  =0467			 UDM_SETPOS		 EQU	 (WM_USER+103)
1  4984		  =0468			 UDM_GETPOS		 EQU	 (WM_USER+104)
1  4985
1  4986
1  4987
1  4988					 ;............................
1  4989					 ;Added	21 Feb 97
1  4990
1  4991		  =7F00			 IDI_APPLICATION EQU	 32512
1  4992		  =7F01			 IDI_HAND EQU	    32513
1  4993		  =7F02			 IDI_QUESTION EQU	    32514
1  4994		  =7F03			 IDI_EXCLAMATION EQU   32515
1  4995		  =7F04			 IDI_ASTERISK EQU	    32516
1  4996
1  4997		  =0010			 MB_ICONHAND EQU	     00000010h
1  4998		  =0020			 MB_ICONQUESTION EQU	    00000020h
1  4999		  =0030			 MB_ICONEXCLAMATION EQU	    00000030h
1  5000		  =0040			 MB_ICONASTERISK EQU	    00000040h
1  5001
1  5002					 ;taken	from WINGDI.H:
1  5003		  =000A			 OEM_FIXED_FONT	    EQU	10
1  5004		  =000B			 ANSI_FIXED_FONT   EQU 11
1  5005		  =000C			 ANSI_VAR_FONT	   EQU 12
1  5006		  =000D			 SYSTEM_FONT	   EQU 13
1  5007		  =000E			 DEVICE_DEFAULT_FONT EQU 14
1  5008		  =000F			 DEFAULT_PALETTE   EQU 15
1  5009		  =0010			 SYSTEM_FIXED_FONT   EQU  16
1  5010
1  5011
1  5012					 MessageBeep PROCDESC WINAPI :DWORD
1  5013
1  5014	00000000			 MINMAXINFO struc
1  5015	00000000  01*(????????)		   res_x	       dd ?
1  5016	00000004  01*(????????)		   res_y	       dd ?
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 89
JANE.ASM



1  5017	00000008  01*(????????)		   maxsize_x	       dd ?
1  5018	0000000C  01*(????????)		   maxsize_y	       dd ?
1  5019	00000010  01*(????????)		   maxposition_x       dd ?
1  5020	00000014  01*(????????)		   maxposition_y       dd ?
1  5021	00000018  01*(????????)		   mintrackposition_x  dd ?
1  5022	0000001C  01*(????????)		   mintrackposition_y  dd ?
1  5023	00000020  01*(????????)		   maxtrackposition_x  dd ?
1  5024	00000024  01*(????????)		   maxtrackposition_y  dd ?
1  5025	00000028			 MINMAXINFO ends
1  5026
1  5027
1  5028		  =0006			 RT_STRING		 EQU	 6
1  5029		  =0443			 EM_SETBKGNDCOLOR	 EQU	 WM_USER + 67
1  5030		  =044D			 EM_SETOPTIONS		 EQU	 WM_USER + 77
1  5031		  =044E			 EM_GETOPTIONS		 EQU	 WM_USER + 78
1  5032
1  5033		  =0459			 EM_SETTEXTMODE		 EQU	 WM_USER + 89
1  5034		  =045A			 EM_GETTEXTMODE		 EQU	 WM_USER + 90
1  5035		  =0001			 TM_PLAINTEXT		 EQU	 1
1  5036		  =0002			 TM_RICHTEXT		 EQU	 2
1  5037
1  5038		  =045D			 EM_SETPALETTE		 EQU	 WM_USER + 93
1  5039		  =2000			 ES_DISABLENOSCROLL	 EQU	 2000h
1  5040
1  5041					 GetTickCount		 PROCDESC	 WINAPI
1  5042
1  5043		  =0002			 RT_BITMAP		 EQU	 2
1  5044		  =0172			 STM_SETIMAGE		 EQU	 0172h
1  5045		  =0000			 STN_CLICKED		 EQU	 0
1  5046		  =0001			 STN_DBLCLK		 EQU	 1
1  5047		  =0002			 STN_ENABLE		 EQU	 2
1  5048		  =0003			 STN_DISABLE		 EQU	 3
1  5049
1  5050
1  5051					 GetProcAddress		 PROCDESC	 WINAPI
1  5052
1  5053					 FindFirstFileA	PROCDESC WINAPI	:DWORD
1  5054		  = FindFirstFileA	 FindFirstFile textequ <FindFirstFileA>
1  5055					 FindNextFileA PROCDESC	WINAPI :DWORD
1  5056		  = FindNextFileA	 FindNextFile textequ <FindNextFileA>
1  5057
1  5058					 GetCurrentDirectoryA PROCDESC WINAPI :DWORD
1  5059		  =		      +	 GetCurrentDirectory textequ <GetCurrentDirectoryA>
   5060		  GetCurrentDirectoryA
1  5061					 SetCurrentDirectoryA PROCDESC WINAPI :DWORD
1  5062		  =		      +	 SetCurrentDirectory textequ <SetCurrentDirectoryA>
   5063		  SetCurrentDirectoryA
1  5064
1  5065	00000000			 COMBOBOXINFO		 STRUCT
1  5066	00000000  01*(????????)		  cxSize	 DWORD	 ?
1  5067	00000004  01*(10*(??))		  rcItem	 RECT	 ?
1  5068	00000014  01*(10*(??))		  rcButton	 RECT	 ?
1  5069	00000024  01*(????????)		  stateButton	 DWORD	 ?
1  5070	00000028  01*(????????)		  wndCombo	 HWND	 ?
1  5071	0000002C  01*(????????)		  wndItem	 HWND	 ?
1  5072	00000030  01*(????????)		  wndList	 HWND	 ?
1  5073	00000034			 COMBOBOXINFO		 ENDS
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 90
JANE.ASM



1  5074					 GetComboBoxInfo PROCDESC WINAPI :DWORD
1  5075
1  5076					 FILE_MAP_COPY		 EQU	 SECTION_QUERY
1  5077					 FILE_MAP_WRITE		 EQU	 SECTION_MAP_WRITE
1  5078					 FILE_MAP_READ		 EQU	 SECTION_MAP_READ
1  5079					 FILE_MAP_ALL_ACCESS	 EQU	 SECTION_ALL_ACCESS
1  5080					 UnmapViewOfFile PROCDESC WINAPI :DWORD
1  5081					 MapViewOfFile PROCDESC	WINAPI :DWORD
1  5082					 CreateFileMappingA PROCDESC WINAPI :DWORD
1  5083		  = CreateFileMappingA	 CreateFileMapping textequ <CreateFileMappingA>
1  5084
1  5085		  =0460			 EM_SHOWSCROLLBAR	 EQU	 (WM_USER + 96)
1  5086		  =0461			 EM_SETTEXTEX		 EQU	 (WM_USER + 97)
1  5087		  =0464			 EM_SETPUNCTUATION	 EQU	 (WM_USER + 100)
1  5088		  =0465			 EM_GETPUNCTUATION	 EQU	 (WM_USER + 101)
1  5089		  =0466			 EM_SETWORDWRAPMODE	 EQU	 (WM_USER + 102)
1  5090		  =0467			 EM_GETWORDWRAPMODE	 EQU	 (WM_USER + 103)
1  5091
1  5092					 TrackPopupMenuEx PROCDESC WINAPI :DWORD
1  5093					 GetSubMenu PROCDESC WINAPI :DWORD
1  5094					 SetActiveWindow PROCDESC WINAPI :DWORD
1  5095
1  5096		  =0000			 TPM_LEFTALIGN		 equ	 000h
1  5097		  =0004			 TPM_CENTERALIGN	 equ	 004h
1  5098		  =0008			 TPM_RIGHTALIGN		 equ	 008h
1  5099		  =0000			 TPM_TOPALIGN		 equ	 000h
1  5100		  =0010			 TPM_VCENTERALIGN	 equ	 010h
1  5101		  =0020			 TPM_BOTTOMALIGN	 equ	 020h
1  5102		  =0100			 TPM_RETURNCMD		 equ	 100h
1  5103
1  5104		  =0800			 TBSTYLE_FLAT		 equ	 800h
1  5105
1  5106					 WritePrivateProfileStringA PROCDESC WINAPI :DWORD
1  5107		  =		      +	 WritePrivateProfileString textequ <WritePrivateProfileStringA>
   5108		  WritePrivateProfileSt
   5109		  ringA
1  5110					 GetPrivateProfileStringA PROCDESC WINAPI :DWORD
1  5111		  =		      +	 GetPrivateProfileString textequ <GetPrivateProfileStringA>
   5112		  GetPrivateProfileStri
   5113		  ngA
1  5114
1  5115					 CreateCompatibleDC PROCDESC WINAPI :DWORD
1  5116
1  5117		  =0000			 LR_DEFAULTCOLOR     = 0000h
1  5118		  =0001			 LR_MONOCHROME	     = 0001h
1  5119		  =0002			 LR_COLOR	     = 0002h
1  5120		  =0004			 LR_COPYRETURNORG    = 0004h
1  5121		  =0008			 LR_COPYDELETEORG    = 0008h
1  5122		  =0010			 LR_LOADFROMFILE     = 0010h
1  5123		  =0020			 LR_LOADTRANSPARENT  = 0020h
1  5124		  =0040			 LR_DEFAULTSIZE	     = 0040h
1  5125		  =0080			 LR_VGACOLOR	     = 0080h
1  5126		  =1000			 LR_LOADMAP3DCOLORS  = 1000h
1  5127		  =2000			 LR_CREATEDIBSECTION = 2000h
1  5128		  =4000			 LR_COPYFROMRESOURCE = 4000h
1  5129		  =8000			 LR_SHARED	     = 8000h
1  5130
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 91
JANE.ASM



1  5131					 GetMenu PROCDESC WINAPI :DWORD
1  5132					 SetMenuItemBitmaps PROCDESC WINAPI :DWORD
1  5133		  =0000			 ICON_SMALL	 =	 0
1  5134		  =0001			 ICON_BIG	 =	 1
1  5135					 GetFileInformationByHandle PROCDESC WINAPI :DWORD
1  5136
1  5137					 extrn	 ExitWindowsEx:PROC
1  5138
1  5139		  =0000			 EWX_LOGOFF	 =	 0
1  5140		  =0001			 EWX_SHUTDOWN	 =	 1
1  5141		  =0002			 EWX_REBOOT	 =	 2
1  5142		  =0004			 EWX_FORCE	 =	 4
1  5143		  =0008			 EWX_POWEROFF	 =	 8
1  5144
1  5145		  =0001			 WA_ACTIVE	 =	 1
1  5146
1  5147					 BringWindowToTop PROCDESC WINAPI :DWORD
1  5148					 GetActiveWindow PROCDESC WINAPI :DWORD
1  5149
1  5150		  =0004			 HORZSIZE			      equ 4
1  5151		  =0006			 VERTSIZE			      equ 6
1  5152		  =0008			 HORZRES			      equ 8
1  5153		  =000A			 VERTRES			      equ 10
1  5154		  =000C			 BITSPIXEL			      equ 12
1  5155		  =000E			 PLANES				      equ 14
1  5156		  =0001			 DCX_WINDOW	 equ	 1
1  5157					 GetDCEx PROCDESC WINAPI :DWORD
1  5158					 GetLocalTime PROCDESC WINAPI :DWORD
1  5159
1  5160					 lstrcmpA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5161		  = lstrcmpA		 lstrcmp	 TEXTEQU <lstrcmpA>
1  5162					 lstrcmpiA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5163		  = lstrcmpiA		 lstrcmpi	 TEXTEQU <lstrcmpiA>
1  5164					 SetFilePointer	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5165
1  5166					 CopyFileA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5167		  = CopyFileA		 CopyFile	 TEXTEQU <CopyFileA>
1  5168
1  5169					 DeleteFileA	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5170		  = DeleteFileA		 DeleteFile	   TEXTEQU <DeleteFileA>
1  5171					 MoveFileA	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5172		  = MoveFileA		 MoveFile	   TEXTEQU <MoveFileA>
1  5173
1  5174					 GetShortPathNameA	 PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5175		  = GetShortPathNameA	 GetShortPathName	 TEXTEQU <GetShortPathNameA>
1  5176
1  5177					 GetUserNameA	    PROCDESC	WINAPI	:LPCSTR	,:LPCSTR
1  5178		  = GetUserNameA	 GetUserName	    TEXTEQU <GetUserNameA>
1  5179
1  5180					 WaitForSingleObject	   PROCDESC    WINAPI  :LPCSTR ,:LPCSTR
1  5181					 Sleep	     PROCDESC	 WINAPI	 :DWORD
1  5182					 WindowFromPoint       PROCDESC	   WINAPI  :DWORD
1  5183					 GetWindow	 PROCDESC    WINAPI  :DWORD
1  5184
1  5185					 ValidateRect	       PROCDESC	       WINAPI  :HWND, :LPRECT, :UINT
1  5186
1  5187	00000000			 aSIZE	 struct
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 92
JANE.ASM



1  5188	00000000  01*(????????)		 dcx	 dd	 ?
1  5189	00000004  01*(????????)		 dcy	 dd	 ?
1  5190	00000008			 aSIZE	 ends
1  5191
1  5192					 GetBitmapDimensionEx	 PROCDESC	 WINAPI
1  5193					 TransparentBlt	 PROCDESC	 WINAPI
1  5194					 GetObjectA		 PROCDESC	 WINAPI
1  5195		  = GetObjectA		 GetObject		 TEXTEQU <GetObjectA>
1  5196					 SetPixel		 PROCDESC	 WINAPI	:DWORD
1  5197					 GetPixel		 PROCDESC	 WINAPI	:DWORD
1  5198					 CreateThread		 PROCDESC	 WINAPI	:DWORD
   5199					 INCLUDELIB ..\win32\Win32.LIB
   5200					 INCLUDELIB ..\win32\GDI32.LIB
   5201					 INCLUDELIB ..\win32\MSImg32.LIB
   5202
   5203					 INCLUDE Constants.inc
1  5204					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Ninja States
1  5205		  =0000			 NINJA_STATE_WALKING		 equ	 000h
1  5206		  =0001			 NINJA_STATE_STANDING		 equ	 001h
1  5207		  =0002			 NINJA_STATE_JUMPING		 equ	 002h
1  5208		  =0003			 NINJA_STATE_KICKING		 equ	 003h
1  5209		  =0004			 NINJA_STATE_PUNCHING		 equ	 004h
1  5210		  =0005			 NINJA_STATE_SLASHING		 equ	 005h
1  5211		  =0006			 NINJA_STATE_PICKUP		 equ	 006h	 ; \_ Same animation, same functions, but   +
   5212					 for clarity in	code
1  5213		  =0006			 NINJA_STATE_PARRY		 equ	 006h	 ; /
1  5214		  =0007			 NINJA_STATE_HURT		 equ	 007h
1  5215		  =0008			 NINJA_STATE_DYING		 equ	 008h
1  5216		  =0009			 NINJA_STATE_DEAD		 equ	 009h
1  5217		  =000A			 NINJA_STATE_DROWNING		 equ	 00Ah
1  5218		  =000B			 NINJA_STATE_SINKING		 equ	 00Bh	 ; Used	for sinking anim, but for room	    +
   5219					 transition, not dying
1  5220		  =000C			 NINJA_STATE_JABING		 equ	 00Ch
1  5221		  =000D			 NINJA_STATE_SWITCHING	 equ	 00Dh
1  5222
1  5223		  =00FF			 NINJA_STATE_TRANSITION	 equ	 0FFh
1  5224
1  5225					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Ninja Directions
1  5226		  =0000			 NINJA_FACING_NORTH		 equ	 00h
1  5227		  =0001			 NINJA_FACING_EAST		 equ	 01h
1  5228		  =0002			 NINJA_FACING_SOUTH		 equ	 02h
1  5229		  =0003			 NINJA_FACING_WEST		 equ	 03h
1  5230
1  5231
1  5232					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Ninja Controls
1  5233		  =0001			 NINJA_CONTROL_UP		 equ	 01h
1  5234		  =0002			 NINJA_CONTROL_RIGHT		 equ	 02h
1  5235		  =0004			 NINJA_CONTROL_DOWN		 equ	 04h
1  5236		  =0008			 NINJA_CONTROL_LEFT		 equ	 08h
1  5237		  =000F			 NINJA_CONTROL_DIRMASK	 equ	 0Fh
1  5238		  =0010			 NINJA_CONTROL_FIRE		 equ	 10h
1  5239		  =0080			 NINJA_CONTROL_CHEAT		 equ	 80h
1  5240
1  5241					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Ninja Keyboard
1  5242		  =0026			 NINJA_KEY_UP			 equ	 026h
1  5243		  =0025			 NINJA_KEY_LEFT		 equ	 025h
1  5244		  =0028			 NINJA_KEY_DOWN		 equ	 028h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 93
JANE.ASM



1  5245		  =0027			 NINJA_KEY_RIGHT	 equ	 027h
1  5246		  =0011			 NINJA_KEY_FIRE		 equ	 011h
1  5247		  =00DF			 NINJA_KEY_DEBUG	 equ	 0DFh
1  5248		  =0076			 NINJA_KEY_CHEAT	 equ	 076h
1  5249		  =0070			 NINJA_KEY_HELP		 equ	 070h
1  5250		  =0020			 NINJA_KEY_SWITCH		 equ	 020h
1  5251
1  5252		  =0071			 NINJA_KEY_DEBUG_DROWN	 equ	 071h
1  5253		  =0072			 NINJA_KEY_DEBUG_HURT		 equ	 072h
1  5254		  =0073			 NINJA_KEY_DEBUG_GARGOYLE	 equ	 073h
1  5255		  =0074			 NINJA_KEY_DEBUG_LOGIC	 equ	 074h
1  5256
1  5257					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Screen Information
1  5258		  =01EC			 GAME_SCREEN_WIDTH		 equ	 492
1  5259		  =016E			 GAME_SCREEN_HEIGHT		 equ	 366
1  5260		  =01E0			 GAME_ACTION_WIDTH		 equ	 480
1  5261		  =0120			 GAME_ACTION_HEIGHT		 equ	 288
1  5262		  =0006			 GAME_ACTION_LEFT		 equ	 6
1  5263		  =0006			 GAME_ACTION_TOP	 equ	 6
1  5264
1  5265		  =000B			 GAME_HEALTH_PLY_LEFT		 equ	 11
1  5266		  =0142			 GAME_HEALTH_PLY_TOP		 equ	 322
1  5267		  =00EE			 GAME_HEALTH_PLY_WIDTH	 equ	 238
1  5268		  =0008			 GAME_HEALTH_PLY_HEIGHT	 equ	 8
1  5269
1  5270		  =000B			 GAME_HEALTH_E1_LEFT		 equ	 11
1  5271		  =0151			 GAME_HEALTH_E1_TOP		 equ	 337
1  5272		  =00EE			 GAME_HEALTH_E1_WIDTH		 equ	 238
1  5273		  =0008			 GAME_HEALTH_E1_HEIGHT	 equ	 8
1  5274
1  5275		  =000B			 GAME_HEALTH_E2_LEFT		 equ	 11
1  5276		  =015A			 GAME_HEALTH_E2_TOP		 equ	 346
1  5277		  =00EE			 GAME_HEALTH_E2_WIDTH		 equ	 238
1  5278		  =0008			 GAME_HEALTH_E2_HEIGHT	 equ	 8
1  5279
1  5280		  =00FF			 GAME_INVENTORY_LEFT		 equ	 255
1  5281		  =0130			 GAME_INVENTORY_TOP		 equ	 304
1  5282		  =005B			 GAME_INVENTORY_WIDTH		 equ	 91
1  5283		  =0034			 GAME_INVENTORY_HEIGHT	 equ	 52
1  5284
1  5285					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; General Constants
1  5286					 GAME_MAX_HEALTH	 equ	 GAME_HEALTH_PLY_WIDTH
1  5287
1  5288		  =0050			 NINJA_FRAME_WIDTH		 equ	 80
1  5289		  =0064			 NINJA_FRAME_HEIGHT		 equ	 100
1  5290
1  5291		  =0028			 NINJA_FRAME_OFFSET_X		 equ	 40
1  5292		  =0058			 NINJA_FRAME_OFFSET_Y		 equ	 88
1  5293
1  5294		  =0023			 TIMER_PAINTER			 equ	 23h
1  5295		  =0024			 TIMER_ANIMATOR		 equ	 24h
1  5296
1  5297					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Graphics Control Mode
1  5298		  =0000			 GAME_GRAPHICS_ROOM		 equ	 0
1  5299		  =0001			 GAME_GRAPHICS_SCROLL		 equ	 1	 ; For Multiplayer
1  5300
1  5301
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 94
JANE.ASM



1  5302					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Inventory Types
1  5303		  =0000			 INVENTORY_TYPE_HANDHELD equ	 0
1  5304		  =0001			 INVENTORY_TYPE_THROW		 equ	 1
1  5305		  =0002			 INVENTORY_TYPE_TIMER		 equ	 2	 ; Collecting this type	of item	prevents    +
   5306					 item switching
1  5307
1  5308
1  5309					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Enemy Inventory Types
1  5310		  =0000			 ENEMY_INVENTORY_NONE		 equ	 0
1  5311		  =0001			 ENEMY_INVENTORY_SWORD	 equ	 1
1  5312		  =0002			 ENEMY_INVENTORY_NUMC		 equ	 2
1  5313		  =0003			 ENEMY_INVENTORY_STAFF	 equ	 3
1  5314		  =0004			 ENEMY_INVENTORY_SHURIK	 equ	 4	 ; Gonna need ninja magic! ;-)
1  5315
1  5316
1  5317					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Colour Maps
1  5318		  =008BFBFB		 COLOURS_SCENERY_TRANS	 equ	 08BFBFBh
1  5319		  =00FFFFFF		 COLOURS_NINJA_TRANS		 equ	 0FFFFFFh
1  5320		  =009CCEFF		 COLOURS_ENERGY_NINJA		 equ	 09CCEFFh
1  5321		  =00C60000		 COLOURS_ENERGY_ENEMY		 equ	 0C60000h
1  5322
1  5323		  =6600			 COLOURS_MAP_NOWALK		 equ	 0006600h
1  5324		  =0099CCCC		 COLOURS_MAP_WALK		 equ	 099CCCCh
1  5325		  =00FF6600		 COLOURS_MAP_WATER		 equ	 0FF6600h
1  5326		  =FFFFFFFF		 COLOURS_MAP_TRANSITION	 equ	 0FFFFFFFFh
   5327					 INCLUDE Structures.inc
1  5328	00000000			 NinjaGraphics	 struct
1  5329	00000000  01*(????????)			 offsStand		 dd	 ?
1  5330	00000004  01*(????????)			 offsKick		 dd	 ?
1  5331	00000008  01*(????????)			 offsJump		 dd	 ?
1  5332	0000000C  01*(????????)			 offsJab	 dd	 ?
1  5333	00000010  01*(????????)			 offsSlash		 dd	 ?
1  5334	00000014  01*(????????)			 offsParry		 dd	 ?
1  5335	00000018  01*(????????)			 offsPunch		 dd	 ?
1  5336	0000001C  01*(????????)			 offsSwitch		 dd	 ?
1  5337	00000020  01*(????????)			 offsHurt		 dd	 ?
1  5338	00000024  01*(????????)			 offsDying		 dd	 ?
1  5339	00000028  01*(????????)			 offsDead		 dd	 ?
1  5340	0000002C  01*(????????)			 offsClimb		 dd	 ?
1  5341	00000030  01*(????????)			 offsNorthWalkF	 dd	 ?
1  5342	00000034  01*(????????)			 offsNorthWalkB	 dd	 ?
1  5343	00000038  01*(????????)			 offsEastWalkF		 dd	 ?
1  5344	0000003C  01*(????????)			 offsEastWalkB		 dd	 ?
1  5345	00000040  01*(????????)			 offsSouthWalkF	 dd	 ?
1  5346	00000044  01*(????????)			 offsSouthWalkB	 dd	 ?
1  5347	00000048  01*(????????)			 offsWestWalkF		 dd	 ?
1  5348	0000004C  01*(????????)			 offsWestWalkB		 dd	 ?
1  5349	00000050			 NinjaGraphics	 ends
1  5350
1  5351	00000000			 Ninja		 struct
1  5352	00000000  01*(????????)			 ScreenX	 dd	 ?
1  5353	00000004  01*(????????)			 ScreenY	 dd	 ?
1  5354	00000008  01*(????????)			 ScreenID		 dd	 ?
1  5355
1  5356	0000000C  01*(??)			 State			 db	 ?	 ; NINJA_STATE_*
1  5357	0000000D  01*(??)			 Control	 db	 ?	 ; NINJA_CONTROL_* mask
1  5358	0000000E  01*(??)			 Facing			 db	 ?	 ; NINJA_FACING_*
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 95
JANE.ASM



1  5359
1  5360	0000000F  01*(????)			 Health			 dw	 ?	 ; Max = GAME_MAX_HEALTH
1  5361
1  5362	00000011  01*(??)			 ActiveInventory db	 ?	 ; Currently held item,	also source of frames
1  5363
1  5364	00000012  01*(????)			 Frame			 dw	 ?	 ; Active Frame	Number
1  5365
1  5366	00000014  01*(????????)			 SinkCount		 dd	 ?
1  5367
1  5368	00000018			 Ninja		 ends
1  5369		  =0018			 Ninja_Len	 equ	 4+4+4 + 1+1+1 + 2 + 1 + 2 + 4
1  5370
1  5371	00000000			 Inventory	 struct
1  5372	00000000  01*(????)			 NinjaFrameset		 dw	 ?	 ; Bitmap ptr for Ninja	(ADD offset	    +
   5373					 bmp_Skins)
1  5374	00000002  01*(????)			 InventoryGfx		 dw	 ?	 ; Bitmap ptr for display in UI	(ADD offset +
   5375					 bmp_Inv)
1  5376
1  5377	00000004  01*(??)			 QtyHeld	 db	 ?	 ; Qty / Time Left for ninja magic
1  5378	00000005  01*(??)			 Type			 db	 ?	 ; INVENTORY_TYPE_*
1  5379	00000006			 Inventory	 ends
1  5380		  =0006			 Inventory_Len	 equ	 2+2 + 1+1
1  5381
1  5382	00000000			 Object		 struct
1  5383	00000000  01*(????????)			 ScreenX	 dd	 ?
1  5384	00000004  01*(????????)			 ScreenY	 dd	 ?
1  5385
1  5386	00000008  01*(????????)			 AttackFunction	 dd	 ?	 ; Address of function to run if hit/kicked
1  5387	0000000C  01*(????????)			 UpdateFunction	 dd	 ?	 ; Address of function on Tick
1  5388
1  5389	00000010  01*(????)			 ObjectGfx		 dw	 ?	 ; Bitmap of item (ADD offset bmp_Objects)
1  5390	00000012  01*(????)			 Frame			 dw	 ?	 ; Active Frame
1  5391	00000014  01*(????)			 FrameWidth		 dw	 ?	 ; Width of frames (height is full size)
1  5392	00000016  01*(????)			 FrameCount		 dw	 ?	 ; Number of frames in bitmap
1  5393
1  5394	00000018  01*(??)			 Collect_InvIdx	 db	 ?
1  5395	00000019  01*(??)			 Collect_Qty		 db	 ?	 ; 0 = Not pickup
1  5396
1  5397	0000001A			 Object		 ends
1  5398		  =001A			 Object_Len	 equ	 4+4 + 4+4 + 2+2+2+2 + 1+1
1  5399
1  5400	00000000			 Enemy		 struct
1  5401	00000000  01*(????????)			 enemy_ScreenX			 dd	 ?
1  5402	00000004  01*(????????)			 enemy_ScreenY			 dd	 ?
1  5403	00000008  01*(????)			 enemy_Frameset		 dw	 ?	 ; Bitmap for Enemy (ADD offset	bmp_Skins)
1  5404	0000000A  01*(????)			 enemy_FrameIdx		 dw	 ?
1  5405	0000000C  01*(??)			 enemy_State			 db	 ?	 ; NINJA_STATE_*
1  5406	0000000D  01*(??)			 enemy_LivesLeft	 db	 ?	 ; Set to 0FFh for no enemy
1  5407	0000000E  01*(??)			 enemy_Facing			 db	 ?	 ; NINJA_FACING_*
1  5408	0000000F  01*(????)			 enemy_Health			 dw	 ?	 ; Max = GAME_MAX_HEALTH
1  5409	00000011  01*(??)			 enemy_ActiveInventory	 db	 ?	 ; ENEMY_INVENTORY_*
1  5410	00000012			 Enemy		 ends
1  5411		  =0012			 Enemy_Len	 equ	 4+4 + 2+2 + 1+1+1 + 2 + 1
1  5412
1  5413	00000000			 MapRoom struct
1  5414	00000000  01*(????)			 BackgroundGfx			 dw	 ?	 ; Background graphic
1  5415
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 96
JANE.ASM



1  5416	00000002  01*(????????)			 enemy1_ScreenX		 dd	 ?
1  5417	00000006  01*(????????)			 enemy1_ScreenY		 dd	 ?
1  5418	0000000A  01*(????)			 enemy1_Frameset	 dw	 ?	 ; Bitmap for Enemy (ADD offset	bmp_Skins)
1  5419	0000000C  01*(????)			 enemy1_FrameIdx	 dw	 ?
1  5420	0000000E  01*(??)			 enemy1_State			 db	 ?	 ; NINJA_STATE_*
1  5421	0000000F  01*(??)			 enemy1_LivesLeft		 db	 ?	 ; Set to 0FFh for no enemy
1  5422	00000010  01*(??)			 enemy1_Facing			 db	 ?	 ; NINJA_FACING_*
1  5423	00000011  01*(????)			 enemy1_Health			 dw	 ?	 ; Max = GAME_MAX_HEALTH
1  5424	00000013  01*(??)			 enemy1_ActiveInventory	 db	 ?	 ; ENEMY_INVENTORY_*
1  5425
1  5426	00000014  01*(????????)			 enemy2_ScreenX		 dd	 ?
1  5427	00000018  01*(????????)			 enemy2_ScreenY		 dd	 ?
1  5428	0000001C  01*(????)			 enemy2_Frameset	 dw	 ?	 ; Bitmap for Enemy (ADD offset	bmp_Skins)
1  5429	0000001E  01*(????)			 enemy2_FrameIdx	 dw	 ?
1  5430	00000020  01*(??)			 enemy2_State			 db	 ?	 ; NINJA_STATE_*
1  5431	00000021  01*(??)			 enemy2_LivesLeft		 db	 ?	 ; Set to 0FFh for no enemy
1  5432	00000022  01*(??)			 enemy2_Facing			 db	 ?	 ; NINJA_FACING_*
1  5433	00000023  01*(????)			 enemy2_Health			 dw	 ?	 ; Max = GAME_MAX_HEALTH
1  5434	00000025  01*(??)			 enemy2_ActiveInventory	 db	 ?	 ; ENEMY_INVENTORY_*
1  5435
1  5436	00000026  01*(????????)			 screen_ObjectList		 dd	 ?	 ; Points to list of object	    +
   5437					 structures
1  5438	0000002A			 MapRoom ends
1  5439		  =002A			 MapRoom_Len	 equ	 2 + Enemy_Len+Enemy_Len + 4
   5440
   5441	00000000				 .data
   5442	00000000			 engine_count_data:
   5443	00000000  4A 75	73 74 20 41 6E+	 versionTag	 db	 'Just Another Ninja Engine v2',0Dh,0Ah,0Dh,0Ah
   5444		  6F 74	68 65 72 20 4E+
   5445		  69 6E	6A 61 20 45 6E+
   5446		  67 69	6E 65 20 76 32+
   5447		  0D 0A	0D 0A
   5448	00000020  57 72	69 74 74 65 6E+			 db	 'Written by Marq Watkin',0Dh,0Ah
   5449		  20 62	79 20 4D 61 72+
   5450		  71 20	57 61 74 6B 69+
   5451		  6E 0D	0A
   5452	00000038  68 74	74 70 3A 2F 2F+			 db	 'http://www.pmprog.co.uk',0
   5453		  77 77	77 2E 70 6D 70+
   5454		  72 6F	67 2E 63 6F 2E+
   5455		  75 6B	00
   5456
   5457					 INCLUDE Data-Animation.inc
1  5458	00000050				 .data
1  5459
1  5460	00000050  00000190r 000001BAr +	 Animation_EmptyHand_Player	 NinjaGraphics	 < offset Animation_Ninja_Stand, offset	    +
   5461		  000001C2r 000001A6r +	 Animation_Ninja_Kick, offset Animation_Ninja_Jump, offset Animation_Ninja_Jab,	offset	    +
   5462		  000001AAr 000001D2r +	 Animation_Ninja_EmptyHanded_Slash, offset Animation_Ninja_Pickup, offset		    +
   5463		  00000192r 000001CCr +	 Animation_Ninja_EmptyHanded_Punch, offset Animation_Ninja_Switch, offset		    +
   5464		  000001DDr 000001E7r +	 Animation_Ninja_Hurt, offset Animation_Ninja_Dying, offset Animation_Ninja_Dead, offset    +
   5465		  00000252r 00000205r +	 Animation_Ninja_Climbing, offset Animation_Ninja_NorthForwards, offset			    +
   5466		  0000020Ar 00000213r +	 Animation_Ninja_NorthBackwards, offset	Animation_Ninja_EastForwards, offset		    +
   5467		  0000022Er 00000237r +	 Animation_Ninja_EastBackwards,	offset Animation_Ninja_SouthForwards, offset Animation_
   5468		  0000021Cr 00000225r +
   5469		  00000240r 00000249r
1  5470
1  5471	000000A0  00000190r 000001BAr +	 Animation_SwordHand_Player	 NinjaGraphics	 < offset Animation_Ninja_Stand, offset	    +
   5472		  000001C2r 000001A6r +	 Animation_Ninja_Kick, offset Animation_Ninja_Jump, offset Animation_Ninja_Jab,	offset	    +
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 97
JANE.ASM



   5473		  000001B1r 000001D2r +	 Animation_Ninja_SwordHanded_Slash, offset Animation_Ninja_Pickup, offset		    +
   5474		  00000199r 000001CCr +	 Animation_Ninja_SwordHanded_Punch, offset Animation_Ninja_Switch, offset		    +
   5475		  000001E2r 000001F6r +	 Animation_Ninja_Sword_Hurt, offset Animation_Ninja_Sword_Dying, offset			    +
   5476		  00000254r 00000205r +	 Animation_Ninja_Sword_Dead, offset Animation_Ninja_Climbing, offset			    +
   5477		  0000020Ar 00000213r +	 Animation_Ninja_NorthForwards,	offset Animation_Ninja_NorthBackwards, offset		    +
   5478		  0000022Er 00000237r +	 Animation_Ninja_EastForwards, offset Animation_Ninja_EastBackwards, offset		    +
   5479		  0000021Cr 00000225r +	 Animation_Ninja_SouthForwards,
   5480		  00000240r 00000249r
1  5481
1  5482	000000F0  00000256r 00000281r +	 Animation_EmptyHand_Enemy	 NinjaGraphics < offset	Animation_Enemy_Stand, offset	    +
   5483		  00000000 0000026Fr  +	 Animation_Enemy_Kick, 0, offset Animation_Enemy_Jab, offset Animation_Enemy_Kick, 0,	    +
   5484		  00000281r 00000000  +	 Animation_Enemy_EmptyHanded_Punch, 0, offset Animation_Enemy_Hurt, offset		    +
   5485		  00000258r 00000000  +	 Animation_Enemy_Dying,	offset Animation_Enemy_Dead, 0,	offset				    +
   5486		  0000028Br 0000028Er +	 Animation_Enemy_NorthForwards,	offset Animation_Enemy_NorthBackwards, offset		    +
   5487		  00000296r 00000000  +	 Animation_Enemy_EastForwards, offset Animation_Enemy_EastBackwards, offset		    +
   5488		  000002A5r 000002AEr +	 Animation_Enemy_SouthForwards,	offset Animation_Enemy_SouthBackwards, offset		    +
   5489		  000002C9r 000002D2r +	 Animation_Enemy_WestForwards, offset Animation_Enemy_WestBackwards >
   5490		  000002B7r 000002C0r +
   5491		  000002DBr 000002E4r
1  5492	00000140  00000256r 00000281r +	 Animation_SwordHand_Enemy	 NinjaGraphics < offset	Animation_Enemy_Stand, offset	    +
   5493		  00000000 0000026Fr  +	 Animation_Enemy_Kick, 0, offset Animation_Enemy_Jab, offset				    +
   5494		  00000275r 00000000  +	 Animation_Enemy_SwordHanded_Slash, 0, Animation_Enemy_SwordHanded_Punch, 0, offset	    +
   5495		  00000261r 00000000  +	 Animation_Enemy_SHurt,	offset Animation_Enemy_SDying, offset Animation_Enemy_SDead, 0,	    +
   5496		  00000298r 0000029Br +	 offset	Animation_Enemy_NorthForwards, offset Animation_Enemy_NorthBackwards, offset	    +
   5497		  000002A3r 00000000  +	 Animation_Enemy_EastForwards, offset Animation_Enemy_EastBackwards, offset		    +
   5498		  000002A5r 000002AEr +	 Animation_Enemy_SouthForwards,	offset Animation_Enemy_SouthBackwards, offset		    +
   5499		  000002C9r 000002D2r +	 Animation_Enemy_WestForwards, offset Animation_Enemy_WestBackwards >
   5500		  000002B7r 000002C0r +
   5501		  000002DBr 000002E4r
1  5502
1  5503	00000190  08 FF			 Animation_Ninja_Stand				 db	 08h, 0FFh
1  5504	00000192  09 09	09 09 09 09 FF	 Animation_Ninja_EmptyHanded_Punch			 db	 09h, 09h, 09h,	09h, 09h,   +
   5505					 09h, 0FFh
1  5506	00000199  17 17	17 17 18 18 18+	 Animation_Ninja_SwordHanded_Punch			 db	 17h, 17h, 17h,	17h, 18h,   +
   5507		  18 18	18 18 17 FF	 18h, 18h, 18h,	18h, 18h, 18h, 17h, 0FFh
1  5508	000001A6  09 09	09 FF		 Animation_Ninja_Jab					 db	 09h, 09h, 09h,	0FFh
1  5509	000001AA  09 09	09 09 09 09 FF	 Animation_Ninja_EmptyHanded_Slash			 db	 09h, 09h, 09h,	09h, 09h,   +
   5510					 09h, 0FFh
1  5511	000001B1  15 15	15 15 16 16 16+	 Animation_Ninja_SwordHanded_Slash			 db	 15h, 15h, 15h,	15h, 16h,   +
   5512		  16 FF			 16h, 16h, 16h,	0FFh
1  5513	000001BA  0A 0A	0B 0B 0B 0A 0A+	 Animation_Ninja_Kick					 db	 0Ah, 0Ah, 0Bh,	0Bh, 0Bh,   +
   5514		  FF			 0Ah, 0Ah, 0FFh
1  5515	000001C2  0C 0D	0D 0E 0E 0E 0F+	 Animation_Ninja_Jump					 db	 0Ch, 0Dh, 0Dh,	0Eh, 0Eh,   +
   5516		  0F 0C	FF		 0Eh, 0Fh, 0Fh,	0Ch, 0FFh
1  5517	000001CC  11 12	13 14 15 FF	 Animation_Ninja_Switch				 db	 11h, 12h, 13h,	14h, 15h, 0FFh
1  5518	000001D2  10 10	10 10 10 10 10+	 Animation_Ninja_Pickup				 db	 10h, 10h, 10h,	10h, 10h, 10h, 10h, +
   5519		  10 10	10 FF		 10h, 10h, 10h,	0FFh
1  5520	000001DD  16 16	16 16 FF	 Animation_Ninja_Hurt					 db	 16h, 16h, 16h,	16h, 0FFh
1  5521	000001E2  1A 1A	1A 1A FF	 Animation_Ninja_Sword_Hurt				 db	 1Ah, 1Ah, 1Ah,	1Ah, 0FFh
1  5522	000001E7  16 16	16 17 17 17 18+	 Animation_Ninja_Dying				 db	 16h, 16h, 16h,	17h, 17h, 17h, 18h, +
   5523		  18 18	18 18 18 18 18+	 18h, 18h, 18h,	18h, 18h, 18h, 18h, 0FFh
   5524		  FF
1  5525	000001F6  1A 1A	1A 1B 1B 1B 1C+	 Animation_Ninja_Sword_Dying				 db	 1Ah, 1Ah, 1Ah,	1Bh, 1Bh,   +
   5526		  1C 1C	1C 1C 1C 1C 1C+	 1Bh, 1Ch, 1Ch,	1Ch, 1Ch, 1Ch, 1Ch, 1Ch, 1Ch, 0FFh
   5527		  FF
1  5528	00000205  19 1B	1A 1B FF	 Animation_Ninja_Climbing				 db	 19h, 1Bh, 1Ah,	1Bh, 0FFh
1  5529	0000020A  00 01	02 03 04 05 06+	 Animation_Ninja_NorthForwards			 db	 00h, 01h, 02h,	03h, 04h, 05h, 06h, +
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 98
JANE.ASM



   5530		  07 FF			 07h, 0FFh
1  5531	00000213  07 06	05 04 03 02 01+	 Animation_Ninja_NorthBackwards			 db	 07h, 06h, 05h,	04h, 03h, 02h, 01h, +
   5532		  00 FF			 00h, 0FFh
1  5533	0000021C  00 01	02 03 04 05 06+	 Animation_Ninja_SouthForwards			 db	 00h, 01h, 02h,	03h, 04h, 05h, 06h, +
   5534		  07 FF			 07h, 0FFh
1  5535	00000225  07 06	05 04 03 02 01+	 Animation_Ninja_SouthBackwards			 db	 07h, 06h, 05h,	04h, 03h, 02h, 01h, +
   5536		  00 FF			 00h, 0FFh
1  5537	0000022E  07 06	05 04 03 02 01+	 Animation_Ninja_EastForwards			 db	 07h, 06h, 05h,	04h, 03h, 02h, 01h, +
   5538		  00 FF			 00h, 0FFh
1  5539	00000237  00 01	02 03 04 05 06+	 Animation_Ninja_EastBackwards			 db	 00h, 01h, 02h,	03h, 04h, 05h, 06h, +
   5540		  07 FF			 07h, 0FFh
1  5541	00000240  07 06	05 04 03 02 01+	 Animation_Ninja_WestForwards			 db	 07h, 06h, 05h,	04h, 03h, 02h, 01h, +
   5542		  00 FF			 00h, 0FFh
1  5543	00000249  00 01	02 03 04 05 06+	 Animation_Ninja_WestBackwards			 db	 00h, 01h, 02h,	03h, 04h, 05h, 06h, +
   5544		  07 FF			 07h, 0FFh
1  5545	00000252  18 FF			 Animation_Ninja_Dead					 db	 18h, 0FFh
1  5546	00000254  1C FF			 Animation_Ninja_Sword_Dead				 db	 1Ch, 0FFh
1  5547
1  5548	00000256  08 FF			 Animation_Enemy_Stand				 db	 08h, 0FFh
1  5549	00000258  09 09	09 09 09 09 08+	 Animation_Enemy_EmptyHanded_Punch			 db	 09h, 09h, 09h,	09h, 09h,   +
   5550		  08 FF			 09h, 08h, 08h,	0FFh
1  5551	00000261  0F 0F	10 10 10 11 11+	 Animation_Enemy_SwordHanded_Punch			 db	 0Fh, 0Fh, 10h,	10h, 10h,   +
   5552		  11 10	10 0F 08 08 FF	 11h, 11h, 11h,	10h, 10h, 0Fh, 08h, 08h, 0FFh
1  5553	0000026F  09 09	09 08 08 FF	 Animation_Enemy_Jab					 db	 09h, 09h, 09h,	08h, 08h,   +
   5554					 0FFh
1  5555					 ;Animation_Enemy_EmptyHanded_Slash			 db	 09h, 09h, 09h,	09h, 09h,   +
   5556					 09h, 0FFh
1  5557	00000275  0C 0C	0C 0D 0D 0D 0E+	 Animation_Enemy_SwordHanded_Slash			 db	 0Ch, 0Ch, 0Ch,	0Dh, 0Dh,   +
   5558		  0E 0E	08 08 FF	 0Dh, 0Eh, 0Eh,	0Eh, 08h, 08h, 0FFh
1  5559	00000281  0A 0A	0B 0B 0B 0A 0A+	 Animation_Enemy_Kick					 db	 0Ah, 0Ah, 0Bh,	0Bh, 0Bh,   +
   5560		  08 08	FF		 0Ah, 0Ah, 08h,	08h, 0FFh
1  5561	0000028B  0C 0C	FF		 Animation_Enemy_Hurt					 db	 0Ch, 0Ch, 0FFh
1  5562	0000028E  0C 0C	0C 0D 0D 0D 0E+	 Animation_Enemy_Dying				 db	 0Ch, 0Ch, 0Ch,	0Dh, 0Dh, 0Dh, 0Eh, +
   5563		  FF			 0FFh
1  5564	00000296  0E FF			 Animation_Enemy_Dead					 db	 0Eh, 0FFh
1  5565	00000298  12 12	FF		 Animation_Enemy_SHurt				 db	 12h, 12h, 0FFh
1  5566	0000029B  12 12	12 13 13 13 14+	 Animation_Enemy_SDying				 db	 12h, 12h, 12h,	13h, 13h, 13h, 14h, +
   5567		  FF			 0FFh
1  5568	000002A3  14 FF			 Animation_Enemy_SDead				 db	 14h, 0FFh
1  5569	000002A5  00 01	02 03 04 05 06+	 Animation_Enemy_NorthForwards			 db	 00h, 01h, 02h,	03h, 04h, 05h, 06h, +
   5570		  07 FF			 07h, 0FFh
1  5571	000002AE  07 06	05 04 03 02 01+	 Animation_Enemy_NorthBackwards			 db	 07h, 06h, 05h,	04h, 03h, 02h, 01h, +
   5572		  00 FF			 00h, 0FFh
1  5573	000002B7  00 01	02 03 04 05 06+	 Animation_Enemy_SouthForwards			 db	 00h, 01h, 02h,	03h, 04h, 05h, 06h, +
   5574		  07 FF			 07h, 0FFh
1  5575	000002C0  07 06	05 04 03 02 01+	 Animation_Enemy_SouthBackwards			 db	 07h, 06h, 05h,	04h, 03h, 02h, 01h, +
   5576		  00 FF			 00h, 0FFh
1  5577	000002C9  07 06	05 04 03 02 01+	 Animation_Enemy_EastForwards			 db	 07h, 06h, 05h,	04h, 03h, 02h, 01h, +
   5578		  00 FF			 00h, 0FFh
1  5579	000002D2  00 01	02 03 04 05 06+	 Animation_Enemy_EastBackwards			 db	 00h, 01h, 02h,	03h, 04h, 05h, 06h, +
   5580		  07 FF			 07h, 0FFh
1  5581	000002DB  07 06	05 04 03 02 01+	 Animation_Enemy_WestForwards			 db	 07h, 06h, 05h,	04h, 03h, 02h, 01h, +
   5582		  00 FF			 00h, 0FFh
1  5583	000002E4  00 01	02 03 04 05 06+	 Animation_Enemy_WestBackwards			 db	 00h, 01h, 02h,	03h, 04h, 05h, 06h, +
   5584		  07 FF			 07h, 0FFh
1  5585
   5586					 INCLUDE Data-Game.inc
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 99
JANE.ASM



1  5587	000002ED				 .data
1  5588
1  5589	000002ED			 Ninjas:
1  5590	000002ED  000000C8 000000B4   +	 CurrentNinja	 Ninja	 <200, 180, 0, NINJA_STATE_WALKING, 0, NINJA_FACING_EAST,	    +
   5591		  00000000 00 00 01   +	 GAME_MAX_HEALTH, 0, 0,	0>
   5592		  00EE 00 0000	      +
   5593		  00000000
1  5594	00000305  000000C8 000000B4   +	 ResetToNinja	 Ninja	 <200, 180, 0, NINJA_STATE_WALKING, 0, NINJA_FACING_EAST,	    +
   5595		  00000000 00 00 01   +	 GAME_MAX_HEALTH, 0, 0,	0>
   5596		  00EE 00 0000	      +
   5597		  00000000
1  5598
1  5599					 INCLUDE Data-Map.inc
2  5600	0000031D				 .data
2  5601
2  5602	0000031D			 Jane_Map:
2  5603	0000031D  0000 00000000	      +	 room_start	 MapRoom < 0, 0,0,0,0,0,0FFh,0,0,0, 0,0,0,0,0,0FFh,0,0,0, offset	    +
   5604		  00000000 0000	0000  +	 scenery_room1 >
   5605		  00 FF	00 0000	00    +
   5606		  00000000 00000000   +
   5607		  0000 0000 00 FF 00  +
   5608		  0000 00 00000578r
2  5609
2  5610	00000347  0003 00000000	      +	 room_tjunc	 MapRoom < 3, 0,0,0,0,0,0FFh,0,0,0, 0,0,0,0,0,0FFh,0,0,0, offset	    +
   5611		  00000000 0000	0000  +	 scenery_tjunc >
   5612		  00 FF	00 0000	00    +
   5613		  00000000 00000000   +
   5614		  0000 0000 00 FF 00  +
   5615		  0000 00 00000615r
2  5616	00000371  0002 00000109	      +	 room_fight1	 MapRoom < 2, 265, 155,2,0,NINJA_STATE_WALKING,00h,NINJA_FACING_EAST,	    +
   5617		  0000009B 0002	0000  +	 GAME_MAX_HEALTH,0, 0,0,0,0,0,0FFh,0,0,0, offset scenery_fight1	>
   5618		  00 00	01 00EE	00    +
   5619		  00000000 00000000   +
   5620		  0000 0000 00 FF 00  +
   5621		  0000 00 00000806r
2  5622	0000039B  0000 00000109	      +	 room_logic	 MapRoom < 0, 265, 155,2,0,NINJA_STATE_WALKING,00h,NINJA_FACING_EAST,	    +
   5623		  0000009B 0002	0000  +	 GAME_MAX_HEALTH,0, 0,0,0,0,0,0FFh,0,0,0, offset scenery_logic >
   5624		  00 00	01 00EE	00    +
   5625		  00000000 00000000   +
   5626		  0000 0000 00 FF 00  +
   5627		  0000 00 00000AAEr
2  5628	000003C5  0001 00000000	      +	 room_sword	 MapRoom < 1, 0,0,0,0,0,0FFh,0,0,0, 0,0,0,0,0,0FFh,0,0,0, offset	    +
   5629		  00000000 0000	0000  +	 scenery_sword >
   5630		  00 FF	00 0000	00    +
   5631		  00000000 00000000   +
   5632		  0000 0000 00 FF 00  +
   5633		  0000 00 000008BDr
2  5634
2  5635	000003EF  0001 0000017C	      +	 room_prewater	 MapRoom < 1, 380, 190,2,0,NINJA_STATE_WALKING,01h,NINJA_FACING_SOUTH,	    +
   5636		  000000BE 0002	0000  +	 GAME_MAX_HEALTH,0, 0,0,0,0,0,0FFh,0,0,0, offset scenery_prewater >
   5637		  00 01	02 00EE	00    +
   5638		  00000000 00000000   +
   5639		  0000 0000 00 FF 00  +
   5640		  0000 00 00000701r
2  5641	00000419  0004 00000000	      +	 room_water	 MapRoom < 4, 0,0,0,0,0,0FFh,0,0,0, 0,0,0,0,0,0FFh,0,0,0, offset	    +
   5642		  00000000 0000	0000  +	 scenery_water >
   5643		  00 FF	00 0000	00    +
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 100
JANE.ASM



   5644		  00000000 00000000   +
   5645		  0000 0000 00 FF 00  +
   5646		  0000 00 00000974r
2  5647
2  5648	00000443  0000 00000109	      +	 room_preduel	 MapRoom < 0, 265, 155,3,0,NINJA_STATE_WALKING,01h,NINJA_FACING_EAST,	    +
   5649		  0000009B 0003	0000  +	 GAME_MAX_HEALTH,ENEMY_INVENTORY_SWORD,	0,0,0,0,0,0FFh,0,0,0, offset scenery_room1 >
   5650		  00 01	01 00EE	01    +
   5651		  00000000 00000000   +
   5652		  0000 0000 00 FF 00  +
   5653		  0000 00 00000578r
2  5654
2  5655	0000046D  0006 00000181	      +	 room_duel	 MapRoom < 6, 385, 215,2,0,NINJA_STATE_WALKING,00h,NINJA_FACING_WEST,	    +
   5656		  000000D7 0002	0000  +	 GAME_MAX_HEALTH,0, 120,195,3,0,NINJA_STATE_WALKING,00h,NINJA_FACING_NORTH,GAME_MAX_HEALTH, +
   5657		  00 00	03 00EE	00    +	 ENEMY_INVENTORY_SWORD,	offset scenery_duel >
   5658		  00000078 000000C3   +
   5659		  0003 0000 00 00 00  +
   5660		  00EE 01 000004C1r
2  5661	00000497  0007 00000168	      +	 room_end	 MapRoom < 7, 360, 200,3,0,NINJA_STATE_WALKING,00h,NINJA_FACING_WEST,	    +
   5662		  000000C8 0003	0000  +	 GAME_MAX_HEALTH,ENEMY_INVENTORY_SWORD,	120,195,3,0,NINJA_STATE_WALKING,00h,		    +
   5663		  00 00	03 00EE	01    +	 NINJA_FACING_NORTH,GAME_MAX_HEALTH,ENEMY_INVENTORY_SWORD, offset scenery_end  >
   5664		  00000078 000000C3   +
   5665		  0003 0000 00 00 00  +
   5666		  00EE 01 00000A5Fr
2  5667
2  5668		  =OFFSET 000A		 Jane_Map_Size		 equ	 (offset $ - offset Jane_Map) /	MapRoom_Len
2  5669
2  5670
2  5671	000004C1			 scenery_duel:
2  5672	000004C1  000000DC FFFFFFE0   +		 Object		 <220, -32, 0, 0, 0Bh, 1, 1, 0,	0, 0>
   5673		  00000000 00000000   +
   5674		  000B 0001 0001 0000 +
   5675		  00 00
2  5676	000004DB  0000010E FFFFFFE8   +		 Object		 <270, -24, 0, 0, 0Bh, 1, 1, 0,	0, 0>
   5677		  00000000 00000000   +
   5678		  000B 0001 0001 0000 +
   5679		  00 00
2  5680	000004F5  00000140 FFFFFFF0   +		 Object		 <320, -16, 0, 0, 0Bh, 1, 1, 0,	0, 0>
   5681		  00000000 00000000   +
   5682		  000B 0001 0001 0000 +
   5683		  00 00
2  5684	0000050F  00000172 FFFFFFF8   +		 Object		 <370, -08, 0, 0, 0Bh, 1, 1, 0,	0, 0>
   5685		  00000000 00000000   +
   5686		  000B 0001 0001 0000 +
   5687		  00 00
2  5688	00000529  000001A4 00000000   +		 Object		 <420, 00, 0, 0, 0Bh, 1, 1, 0, 0, 0>
   5689		  00000000 00000000   +
   5690		  000B 0001 0001 0000 +
   5691		  00 00
2  5692
2  5693	00000543  0000000A 000000B2   +		 Object		 <10, GAME_ACTION_HEIGHT - 110,	0, 0, 0Ah, 1, 1, 0, 0, 0>
   5694		  00000000 00000000   +
   5695		  000A 0001 0001 0000 +
   5696		  00 00
2  5697	0000055D  000000C8 00000102   +		 Object		 <200, GAME_ACTION_HEIGHT - 30,	0, 0, 01h, 1, 1, 0, 0, 0>
   5698		  00000000 00000000   +
   5699		  0001 0001 0001 0000 +
   5700		  00 00
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 101
JANE.ASM



2  5701	00000577  00				 db		 00h
2  5702
2  5703	00000578			 scenery_room1:
2  5704	00000578  00000028 000000AA   +		 Object		 <40, 170, 0, 0, 5, 1, 1, 0, 0,	0>
   5705		  00000000 00000000   +
   5706		  0005 0001 0001 0000 +
   5707		  00 00
2  5708	00000592  00000064 00000014   +		 Object		 <100, 20, 0, 0, 7, 1, 1, 0, 0,	0>
   5709		  00000000 00000000   +
   5710		  0007 0001 0001 0000 +
   5711		  00 00
2  5712	000005AC  0000014A 00000096   +		 Object		 <330, 150, 0, 0, 1, 1,	1, 0, 0, 0>
   5713		  00000000 00000000   +
   5714		  0001 0001 0001 0000 +
   5715		  00 00
2  5716	000005C6  00000096 00000028   +		 Object		 <150, 40, 0, 0, 6, 1, 1, 0, 0,	0>
   5717		  00000000 00000000   +
   5718		  0006 0001 0001 0000 +
   5719		  00 00
2  5720	000005E0  0000000A 00000028   +		 Object		 <10, 40, 0, 0,	0Ah, 1,	1, 0, 0, 0>
   5721		  00000000 00000000   +
   5722		  000A 0001 0001 0000 +
   5723		  00 00
2  5724	000005FA  00000082 000000AA   +		 Object		 <130, 170, 0, 0, 0Ah, 1, 1, 0,	0, 0>
   5725		  00000000 00000000   +
   5726		  000A 0001 0001 0000 +
   5727		  00 00
2  5728	00000614  00				 db		 00h
2  5729
2  5730	00000615			 scenery_tjunc:
2  5731	00000615  00000014 00000064   +		 Object		 <20, 100, 0, 0, 03h, 1, 1, 0, 0, 0>
   5732		  00000000 00000000   +
   5733		  0003 0001 0001 0000 +
   5734		  00 00
2  5735	0000062F  0000000F 00000096   +		 Object		 <15, 150, 0, 0, 01h, 1, 1, 0, 0, 0>
   5736		  00000000 00000000   +
   5737		  0001 0001 0001 0000 +
   5738		  00 00
2  5739	00000649  00000032 000000B4   +		 Object		 <50, 180, 0, 0, 01h, 1, 1, 0, 0, 0>
   5740		  00000000 00000000   +
   5741		  0001 0001 0001 0000 +
   5742		  00 00
2  5743	00000663  00000168 00000082   +		 Object		 <360, 130, 0, 0, 0Ah, 1, 1, 0,	0, 0>
   5744		  00000000 00000000   +
   5745		  000A 0001 0001 0000 +
   5746		  00 00
2  5747	0000067D  000000FA 000000F0   +		 Object		 <250, 240, 0, 0, 00h, 1, 1, 0,	0, 0>
   5748		  00000000 00000000   +
   5749		  0000 0001 0001 0000 +
   5750		  00 00
2  5751	00000697  00000154 0000001E   +		 Object		 <340, 30, 0, 0, 0Bh, 1, 1, 0, 0, 0>
   5752		  00000000 00000000   +
   5753		  000B 0001 0001 0000 +
   5754		  00 00
2  5755	000006B1  00000082 00000028   +		 Object		 <130, 40, 0, 0, 06h, 1, 1, 0, 0, 0>
   5756		  00000000 00000000   +
   5757		  0006 0001 0001 0000 +
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 102
JANE.ASM



   5758		  00 00
2  5759	000006CB  000000E6 0000003C   +	 posto	 Object		 <230, 60, offset PostHit, 0, 02h, 1, 1, 0, 0, 0>
   5760		  00001E59r 00000000  +
   5761		  0002 0001 0001 0000 +
   5762		  00 00
2  5763	000006E5  000000F0 0000000A   +		 Object		 <240, 10, 0, 0, 0Bh, 1, 1, 0, 0, 0>
   5764		  00000000 00000000   +
   5765		  000B 0001 0001 0000 +
   5766		  00 00
2  5767	000006FF  00				 db		 00h
2  5768
2  5769	00000700			 scenery_notdefined:
2  5770	00000700  00				 db		 00h
2  5771
2  5772	00000701			 scenery_prewater:
2  5773	00000701  00000172 00000023   +		 Object		 <370, 35, 0, 0, 0Ah, 1, 1, 0, 0, 0>
   5774		  00000000 00000000   +
   5775		  000A 0001 0001 0000 +
   5776		  00 00
2  5777	0000071B  0000000A 00000069   +		 Object		 <10, 105, 0, 0, 04h, 1, 1, 0, 0, 0>
   5778		  00000000 00000000   +
   5779		  0004 0001 0001 0000 +
   5780		  00 00
2  5781	00000735  00000186 000000B4   +		 Object		 <390, 180, 0, 0, 05h, 1, 1, 0,	0, 0>
   5782		  00000000 00000000   +
   5783		  0005 0001 0001 0000 +
   5784		  00 00
2  5785	0000074F  0000008C 0000001E   +		 Object		 <140, 30, 0, 0, 05h, 1, 1, 0, 0, 0>
   5786		  00000000 00000000   +
   5787		  0005 0001 0001 0000 +
   5788		  00 00
2  5789	00000769  0000013B 000000CD   +		 Object		 <315, 205, 0, 0, 00h, 1, 1, 0,	0, 0>
   5790		  00000000 00000000   +
   5791		  0000 0001 0001 0000 +
   5792		  00 00
2  5793	00000783  00000118 000000D2   +		 Object		 <280, 210, 0, 0, 00h, 1, 1, 0,	0, 0>
   5794		  00000000 00000000   +
   5795		  0000 0001 0001 0000 +
   5796		  00 00
2  5797	0000079D  00000140 000000E1   +		 Object		 <320, 225, 0, 0, 00h, 1, 1, 0,	0, 0>
   5798		  00000000 00000000   +
   5799		  0000 0001 0001 0000 +
   5800		  00 00
2  5801	000007B7  000000B4 0000003C   +		 Object		 <180, 60, 0, 0, 01h, 1, 1, 0, 0, 0>
   5802		  00000000 00000000   +
   5803		  0001 0001 0001 0000 +
   5804		  00 00
2  5805	000007D1  00000118 00000064   +		 Object		 <280, 100, 0, 0, 06h, 1, 1, 0,	0, 0>
   5806		  00000000 00000000   +
   5807		  0006 0001 0001 0000 +
   5808		  00 00
2  5809	000007EB  000000C8 00000109   +		 Object		 <200, 265, 0, 0, 06h, 1, 1, 0,	0, 0>
   5810		  00000000 00000000   +
   5811		  0006 0001 0001 0000 +
   5812		  00 00
2  5813	00000805  00				 db		 00h
2  5814
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 103
JANE.ASM



2  5815	00000806			 scenery_fight1:
2  5816	00000806  00000050 00000028   +		 Object		 <80, 40, 0, 0,	0Bh, 1,	1, 0, 0, 0>
   5817		  00000000 00000000   +
   5818		  000B 0001 0001 0000 +
   5819		  00 00
2  5820	00000820  000000B4 00000032   +		 Object		 <180, 50, 0, 0, 01h, 1, 1, 0, 0, 0>
   5821		  00000000 00000000   +
   5822		  0001 0001 0001 0000 +
   5823		  00 00
2  5824	0000083A  00000104 000000D2   +		 Object		 <260, 210, 0, 0, 01h, 1, 1, 0,	0, 0>
   5825		  00000000 00000000   +
   5826		  0001 0001 0001 0000 +
   5827		  00 00
2  5828	00000854  0000012C 00000014   +		 Object		 <300, 20, 0, 0, 05h, 1, 1, 0, 0, 0>
   5829		  00000000 00000000   +
   5830		  0005 0001 0001 0000 +
   5831		  00 00
2  5832	0000086E  00000028 000000DC   +		 Object		 <40, 220, 0, 0, 05h, 1, 1, 0, 0, 0>
   5833		  00000000 00000000   +
   5834		  0005 0001 0001 0000 +
   5835		  00 00
2  5836	00000888  00000005 00000014   +		 Object		 <5, 20, 0, 0, 07h, 1, 1, 0, 0,	0>
   5837		  00000000 00000000   +
   5838		  0007 0001 0001 0000 +
   5839		  00 00
2  5840	000008A2  00000168 000000F0   +		 Object		 <360, 240, 0, 0, 06h, 1, 1, 0,	0, 0>
   5841		  00000000 00000000   +
   5842		  0006 0001 0001 0000 +
   5843		  00 00
2  5844	000008BC  00				 db		 00h
2  5845
2  5846	000008BD			 scenery_sword:
2  5847	000008BD  0000014A 00000050   +		 Object		 <330, 80, 0, 0, 0Dh, 1, 1, 0, 1, 1>
   5848		  00000000 00000000   +
   5849		  000D 0001 0001 0000 +
   5850		  01 01
2  5851	000008D7  00000172 000000B4   +		 Object		 <370, 180, 0, 0, 03h, 1, 1, 0,	0, 0>
   5852		  00000000 00000000   +
   5853		  0003 0001 0001 0000 +
   5854		  00 00
2  5855	000008F1  000000DC 000000DC   +		 Object		 <220, 220, 0, 0, 03h, 1, 1, 0,	0, 0>
   5856		  00000000 00000000   +
   5857		  0003 0001 0001 0000 +
   5858		  00 00
2  5859	0000090B  0000014A 0000001E   +		 Object		 <330, 30, 0, 0, 08h, 1, 1, 0, 0, 0>
   5860		  00000000 00000000   +
   5861		  0008 0001 0001 0000 +
   5862		  00 00
2  5863	00000925  000000B4 00000014   +		 Object		 <180, 20, 0, 0, 00h, 1, 1, 0, 0, 0>
   5864		  00000000 00000000   +
   5865		  0000 0001 0001 0000 +
   5866		  00 00
2  5867	0000093F  00000028 00000078   +		 Object		 <40, 120, 0, 0, 01h, 1, 1, 0, 0, 0>
   5868		  00000000 00000000   +
   5869		  0001 0001 0001 0000 +
   5870		  00 00
2  5871	00000959  0000000A 000000B4   +		 Object		 <10, 180, 0, 0, 07h, 1, 1, 0, 0, 0>
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 104
JANE.ASM



   5872		  00000000 00000000   +
   5873		  0007 0001 0001 0000 +
   5874		  00 00
2  5875	00000973  00				 db		 00h
2  5876
2  5877	00000974			 scenery_water:
2  5878	00000974  00000104 0000008C   +		 Object		 <260, 140, 0, 0, 02h, 1, 1, 0,	0, 0>
   5879		  00000000 00000000   +
   5880		  0002 0001 0001 0000 +
   5881		  00 00
2  5882	0000098E  0000017C 000000AF   +		 Object		 <380, 175, 0, 0, 02h, 1, 1, 0,	0, 0>
   5883		  00000000 00000000   +
   5884		  0002 0001 0001 0000 +
   5885		  00 00
2  5886	000009A8  000000B9 000000D2   +		 Object		 <185, 210, 0, 0, 02h, 1, 1, 0,	0, 0>
   5887		  00000000 00000000   +
   5888		  0002 0001 0001 0000 +
   5889		  00 00
2  5890	000009C2  0000003C 000000AF   +		 Object		 <60, 175, 0, 0, 02h, 1, 1, 0, 0, 0>
   5891		  00000000 00000000   +
   5892		  0002 0001 0001 0000 +
   5893		  00 00
2  5894
2  5895	000009DC  0000000A 00000014   +		 Object		 <10, 20, 0, 0,	03h, 1,	1, 0, 0, 0>
   5896		  00000000 00000000   +
   5897		  0003 0001 0001 0000 +
   5898		  00 00
2  5899	000009F6  00000136 00000028   +		 Object		 <310, 40, 0, 0, 05h, 1, 1, 0, 0, 0>
   5900		  00000000 00000000   +
   5901		  0005 0001 0001 0000 +
   5902		  00 00
2  5903	00000A10  000000DC 00000050   +		 Object		 <220, 80, 0, 0, 06h, 1, 1, 0, 0, 0>
   5904		  00000000 00000000   +
   5905		  0006 0001 0001 0000 +
   5906		  00 00
2  5907	00000A2A  0000015E 0000000A   +		 Object		 <350, 10, 0, 0, 0Ah, 1, 1, 0, 0, 0>
   5908		  00000000 00000000   +
   5909		  000A 0001 0001 0000 +
   5910		  00 00
2  5911	00000A44  0000010E 0000005A   +		 Object		 <270, 90, 0, 0, 00h, 1, 1, 0, 0, 0>
   5912		  00000000 00000000   +
   5913		  0000 0001 0001 0000 +
   5914		  00 00
2  5915	00000A5E  00				 db		 00h
2  5916
2  5917	00000A5F			 scenery_end:
2  5918	00000A5F  00000136 00000091   +		 Object		 <310, 145, 0, 0, 0Ah, 1, 1, 0,	0, 0>
   5919		  00000000 00000000   +
   5920		  000A 0001 0001 0000 +
   5921		  00 00
2  5922	00000A79  000000F0 00000014   +		 Object		 <240, 20, 0, 0, 00h, 1, 1, 0, 0, 0>
   5923		  00000000 00000000   +
   5924		  0000 0001 0001 0000 +
   5925		  00 00
2  5926	00000A93  0000001E FFFFFFE2   +		 Object		 <30, -30, 0, 0, 0Bh, 1, 1, 0, 0, 0>
   5927		  00000000 00000000   +
   5928		  000B 0001 0001 0000 +
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 105
JANE.ASM



   5929		  00 00
2  5930	00000AAD  00				 db		 00h
2  5931
2  5932	00000AAE			 scenery_logic:
2  5933	00000AAE  00000073 00000064   +		 Object		 <115, 100, 0, 0, 02h, 1, 1, 0,	0, 0>
   5934		  00000000 00000000   +
   5935		  0002 0001 0001 0000 +
   5936		  00 00
2  5937	00000AC8  000000B4 00000055   +	 postb	 Object		 <180, 85, offset PostHitB, 0, 02h, 1, 1, 0, 0,	0>
   5938		  00001E94r 00000000  +
   5939		  0002 0001 0001 0000 +
   5940		  00 00
2  5941	00000AE2  000000FF 00000041   +		 Object		 <255, 65, 0, 0, 02h, 1, 1, 0, 0, 0>
   5942		  00000000 00000000   +
   5943		  0002 0001 0001 0000 +
   5944		  00 00
2  5945	00000AFC  0000014A 0000002D   +		 Object		 <330, 45, 0, 0, 02h, 1, 1, 0, 0, 0>
   5946		  00000000 00000000   +
   5947		  0002 0001 0001 0000 +
   5948		  00 00
2  5949	00000B16  00000028 000000AA   +		 Object		 <40, 170, 0, 0, 0Ah, 1, 1, 0, 0, 0>
   5950		  00000000 00000000   +
   5951		  000A 0001 0001 0000 +
   5952		  00 00
2  5953	00000B30  0000000A 00000028   +		 Object		 <10, 40, 0, 0,	01h, 1,	1, 0, 0, 0>
   5954		  00000000 00000000   +
   5955		  0001 0001 0001 0000 +
   5956		  00 00
2  5957	00000B4A  0000014A 0000005A   +		 Object		 <330, 90, 0, 0, 09h, 1, 1, 0, 0, 0>
   5958		  00000000 00000000   +
   5959		  0009 0001 0001 0000 +
   5960		  00 00
2  5961	00000B64  00				 db		 00h
   5962					 INCLUDE Data-Globals.inc
1  5963	00000B65				 .data
1  5964
1  5965	00000B65  0000000B 00000142   +	 rectPlyHealth	 RECT	 <GAME_HEALTH_PLY_LEFT,	GAME_HEALTH_PLY_TOP, GAME_HEALTH_PLY_LEFT + +
   5966		  000000F9 0000014A	 GAME_HEALTH_PLY_WIDTH,	GAME_HEALTH_PLY_TOP + GAME_HEALTH_PLY_HEIGHT>
1  5967
1  5968	00000B75  0000000B 00000151   +	 rectEn1Health	 RECT	 <GAME_HEALTH_E1_LEFT, GAME_HEALTH_E1_TOP, GAME_HEALTH_E1_LEFT +    +
   5969		  000000F9 00000159	 GAME_HEALTH_E1_WIDTH, GAME_HEALTH_E1_TOP + GAME_HEALTH_E1_HEIGHT>
1  5970	00000B85  0000000B 0000015A   +	 rectEn2Health	 RECT	 <GAME_HEALTH_E2_LEFT, GAME_HEALTH_E2_TOP, GAME_HEALTH_E2_LEFT +    +
   5971		  000000F9 00000162	 GAME_HEALTH_E2_WIDTH, GAME_HEALTH_E2_TOP + GAME_HEALTH_E2_HEIGHT>
1  5972
1  5973	00000B95  00000050 00000064   +	 rectTransition	 RECT	 <NINJA_FRAME_WIDTH, NINJA_FRAME_HEIGHT, NINJA_FRAME_WIDTH +	    +
   5974		  00000230 00000064	 GAME_ACTION_WIDTH, NINJA_FRAME_HEIGHT>
1  5975
1  5976	00000BA5				 .data?
1  5977
1  5978	00000000  ????????		 engineDC		 dd	 ?
1  5979
1  5980	00000004  ????????		 bufferDC		 dd	 ?
1  5981	00000008  ????????		 bufferBMP		 dd	 ?
1  5982
1  5983	0000000C  ????????		 actionDC		 dd	 ?
1  5984	00000010  ????????		 actionBMP		 dd	 ?
1  5985
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 106
JANE.ASM



1  5986	00000014  ????????		 copierDC		 dd	 ?
1  5987
1  5988	00000018  ????????		 userintBMP		 dd	 ?
1  5989
1  5990	0000001C  18*(??)		 bitmapDimensions	 BITMAP	 ?
1  5991
1  5992	00000034  ??			 debugMode		 db	 ?
1  5993
1  5994	00000035  ????????		 brushTmp		 dd	 ?
1  5995
1  5996	00000039  ??			 jumpingFlags		 db	 ?
1  5997	0000003A  ????????		 sinkingFlags		 dd	 ?
1  5998
1  5999	0000003E  ????????		 sinkingFrame		 dd	 ?
1  6000
1  6001
1  6002	00000042  ????????		 randomSeed		 dd	 ?
1  6003
1  6004	00000046  ??			 logic_switch_A	 db	 ?
1  6005	00000047  ??			 logic_switch_B	 db	 ?
   6006					 INCLUDE Data-Inventory.inc
1  6007	00000048				 .data
1  6008
1  6009	00000BA5			 InventoryList:
1  6010	00000BA5  0000 0000 01 00	 inv_none	 Inventory	 <0, 0,	1, 0>				 ; Empty Inventory
1  6011	00000BAB  0001 0001 00 00	 inv_sword	 Inventory	 <1, 1,	0, INVENTORY_TYPE_HANDHELD>	 ; Sword
1  6012	00000BB1  0002 0000 00 00	 inv_key_slvr	 Inventory	 <2, 0,	0, INVENTORY_TYPE_HANDHELD>	 ; Silver Key
1  6013
1  6014
1  6015		  =OFFSET 0003		 Inventory_Count equ	 (offset $ - offset InventoryList) / Inventory_Len
1  6016
   6017
   6018		  =OFFSET 0BB7		 TOTAL_ENGINE_DATA_SIZE	 equ	 offset	$ - engine_count_data
   6019
   6020	00000BB7				 .code
   6021	00000000			 engine_count_code:
   6022					 INCLUDE Windows.inc
1  6023	00000000				 .data
1  6024
1  6025	00000BB7  4A 41	4E 45 20 76 32+	 engineCLS	 db	 'JANE v2.0',0
   6026		  2E 30	00
1  6027	00000BC1  41 70	70 49 63 6F 00	 engineICO	 db	 'AppIco',0
1  6028
1  6029	00000BC8				 .data?
1  6030	00000048  28*(??)		 engineClass		 WNDCLASS	 ?
1  6031	00000070  ????????		 engineInstance	 dd		 ?
1  6032	00000074  ????????		 engineWnd		 dd		 ?
1  6033	00000078  1C*(??)		 engineMsg		 MSG		 ?
1  6034	00000094  40*(??)		 enginePaint		 PAINTSTRUCT	 ?
1  6035
1  6036	000000D4				 .code
1  6037
1  6038	00000000  6A 00			 start:	 push	 0
1  6039	00000002  E8 00000000e			 call	 GetModuleHandleA			 ;Obtain the applications instance
1  6040	00000007  A3 00000070r			 mov	 engineInstance, eax
1  6041
1  6042	0000000C  68 00000BC1r			 push	 offset	engineICO
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 107
JANE.ASM



1  6043	00000011  FF 35	00000070r		 push	 engineInstance
1  6044	00000017  E8 00000000e			 call	 LoadIcon				 ;Load the Main	window's icon and   +
   6045					 put it	into the class struct
1  6046	0000001C  A3 0000005Cr			 mov	 engineClass.w_hIcon,eax
1  6047
1  6048	00000021  68 00007F00			 push	 IDC_ARROW
1  6049	00000026  6A 00				 push	 0
1  6050	00000028  E8 00000000e			 call	 LoadCursor				 ;Set standard cursors for the	    +
   6051					 windows
1  6052	0000002D  A3 00000060r			 mov	 engineClass.w_hCursor,eax
1  6053
1  6054	00000032  C7 05	00000048r     +		 mov	 engineClass.w_style, CS_HREDRAW + CS_VREDRAW +	CS_DBLCLKS
   6055		  0000000B
1  6056	0000003C  C7 05	0000004Cr     +		 mov	 engineClass.w_lpfnWndProc, offset WndProc
   6057		  0000017Dr
1  6058	00000046  C7 05	00000068r     +		 mov	 engineClass.w_lpszMenuName,offset engineCLS
   6059		  00000BB7r
1  6060	00000050  C7 05	0000006Cr     +		 mov	 engineClass.w_lpszClassName,offset engineCLS
   6061		  00000BB7r
1  6062	0000005A  C7 05	00000064r     +		 mov	 engineClass.w_hbrBackground, COLOR_WINDOW
   6063		  00000005
1  6064
1  6065	00000064  68 00000048r			 push	 offset	engineClass
1  6066	00000069  E8 00000000e			 call	 RegisterClassA
1  6067
1  6068	0000006E  6A 00				 push	 0
1  6069	00000070  FF 35	00000070r		 push	 engineInstance
1  6070	00000076  6A 00				 push	 0
1  6071	00000078  6A 00				 push	 0
1  6072	0000007A  68 0000016E			 push	 GAME_SCREEN_HEIGHT
1  6073	0000007F  68 000001EC			 push	 GAME_SCREEN_WIDTH
1  6074	00000084  6A 00				 push	 0
1  6075	00000086  6A 00				 push	 0
1  6076	00000088  68 10080000			 push	 WS_VISIBLE + WS_SYSMENU
1  6077	0000008D  68 00000BB7r			 push	 offset	engineCLS
1  6078	00000092  68 00000BB7r			 push	 offset	engineCLS
1  6079	00000097  6A 00				 push	 0
1  6080	00000099  E8 00000000e			 call	 CreateWindowEx
1  6081	0000009E  A3 00000074r			 mov	 engineWnd,eax
1  6082
1  6083	000000A3  50				 push	 eax
1  6084	000000A4  E8 00000000e			 call	 GetWindowDC
1  6085	000000A9  A3 00000000r			 mov	 engineDC, eax
1  6086
1  6087	000000AE  50				 push	 eax
1  6088	000000AF  E8 00000000e			 call	 CreateCompatibleDC
1  6089	000000B4  A3 00000004r			 mov	 bufferDC, eax
1  6090
1  6091	000000B9  68 0000016E			 push	 GAME_SCREEN_HEIGHT
1  6092	000000BE  68 000001EC			 push	 GAME_SCREEN_WIDTH
1  6093	000000C3  FF 35	00000000r		 push	 engineDC
1  6094	000000C9  E8 00000000e			 call	 CreateCompatibleBitmap
1  6095	000000CE  A3 00000008r			 mov	 bufferBMP, eax
1  6096
1  6097	000000D3  50				 push	 eax
1  6098	000000D4  FF 35	00000004r		 push	 bufferDC
1  6099	000000DA  E8 00000000e			 call	 SelectObject
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 108
JANE.ASM



1  6100
1  6101	000000DF  FF 35	00000000r		 push	 engineDC
1  6102	000000E5  E8 00000000e			 call	 CreateCompatibleDC
1  6103	000000EA  A3 0000000Cr			 mov	 actionDC, eax
1  6104
1  6105	000000EF  68 00000184			 push	 GAME_ACTION_HEIGHT + NINJA_FRAME_HEIGHT
1  6106	000000F4  68 00000230			 push	 GAME_ACTION_WIDTH + NINJA_FRAME_WIDTH
1  6107	000000F9  FF 35	00000000r		 push	 engineDC
1  6108	000000FF  E8 00000000e			 call	 CreateCompatibleBitmap
1  6109	00000104  A3 00000010r			 mov	 actionBMP, eax
1  6110
1  6111	00000109  50				 push	 eax
1  6112	0000010A  FF 35	0000000Cr		 push	 actionDC
1  6113	00000110  E8 00000000e			 call	 SelectObject
1  6114
1  6115	00000115  FF 35	00000000r		 push	 engineDC
1  6116	0000011B  E8 00000000e			 call	 CreateCompatibleDC
1  6117	00000120  A3 00000014r			 mov	 copierDC, eax
1  6118
1  6119	00000125  E8 000000DF			 call	 OnLoad
1  6120
1  6121	0000012A  6A 00				 push	 0
1  6122	0000012C  6A 20				 push	 20h
1  6123	0000012E  6A 23				 push	 TIMER_PAINTER
1  6124	00000130  FF 35	00000074r		 push	 engineWnd
1  6125	00000136  E8 00000000e			 call	 SetTimer
1  6126
1  6127	0000013B  6A 00				 push	 0
1  6128	0000013D  6A 20				 push	 20h
1  6129	0000013F  6A 24				 push	 TIMER_ANIMATOR
1  6130	00000141  FF 35	00000074r		 push	 engineWnd
1  6131	00000147  E8 00000000e			 call	 SetTimer
1  6132
1  6133					 ;	 push	 0
1  6134					 ;	 push	 0
1  6135					 ;	 push	 0
1  6136					 ;;	 push	 offset	ControlHandler
1  6137					 ;	 push	 offset	AnimationControl
1  6138					 ;	 push	 0
1  6139					 ;	 push	 0
1  6140					 ;	 call	 CreateThread
1  6141
1  6142	0000014C			 Messagz:
1  6143	0000014C  6A 00	6A 00 6A 00		 push	 0 0 0
1  6144	00000152  68 00000078r			 push	 offset	engineMsg
1  6145	00000157  E8 00000000e			 call	 GetMessage
1  6146	0000015C  66| 3D 0000			 cmp	 ax,0
1  6147	00000160  74 16				 je	 finn
1  6148
1  6149	00000162  68 00000078r			 push	 offset	engineMsg
1  6150	00000167  E8 00000000e			 call	 TranslateMessage
1  6151
1  6152	0000016C  68 00000078r			 push	 offset	engineMsg
1  6153	00000171  E8 00000000e			 call	 DispatchMessage
1  6154
1  6155	00000176  EB D4				 jmp	 Messagz
1  6156
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 109
JANE.ASM



1  6157	00000178  E8 00000000e		 finn:	 call	 ExitProcess
1  6158
1  6159
1  6160					 ;/////////////////////////////////////////////////////////////////////////
1  6161	0000017D			 WndProc proc STDCALL, hwnd:DWORD, wmsg:DWORD, wparam:DWORD, lparam:DWORD
1  6162
2  6163	0000017D  C8 0000 00			 ENTERD	 00000h,0
2  6164	00000181  8B 45	0C			 mov	 eax,wmsg
1  6165	00000184  8B 5D	10			 mov	 ebx, wparam
1  6166
1  6167	00000187  60				 pusha
1  6168
1  6169						 .IF ax==WM_DESTROY
2  6170	00000188  66| 3D 0002			 cmp	 ax,WM_DESTROY
2  6171	0000018C  75 12				 jnz	 @C0001
1  6172	0000018E  E8 0000007C				 call	 OnExit
1  6173
1  6174	00000193  6A 00					 push	 0
1  6175	00000195  E8 00000000e				 call	 PostQuitMessage
2  6176	0000019A  C9				 LEAVED
2  6177	0000019B  C2 0010			 RET	 00010h
1  6178						 .ELSEIF ax==WM_TIMER
2  6179	0000019E  EB 40				 jmp	 @C0000
2  6180	000001A0			 @C0001:
2  6181	000001A0  66| 3D 0113			 cmp	 ax,WM_TIMER
2  6182	000001A4  75 08				 jnz	 @C0002
1  6183	000001A6  53					 push	 ebx
1  6184	000001A7  E8 000006CE				 call	 OnTimer
1  6185						 .ELSEIF ax==WM_KEYDOWN
2  6186	000001AC  EB 32				 jmp	 @C0000
2  6187	000001AE			 @C0002:
2  6188	000001AE  66| 3D 0100			 cmp	 ax,WM_KEYDOWN
2  6189	000001B2  75 08				 jnz	 @C0003
1  6190	000001B4  53					 push	 ebx
1  6191	000001B5  E8 00000056				 call	 KeyDown
1  6192						 .ELSEIF ax==WM_KEYUP
2  6193	000001BA  EB 24				 jmp	 @C0000
2  6194	000001BC			 @C0003:
2  6195	000001BC  66| 3D 0101			 cmp	 ax,WM_KEYUP
2  6196	000001C0  75 08				 jnz	 @C0004
1  6197	000001C2  53					 push	 ebx
1  6198	000001C3  E8 00000135				 call	 KeyUp
1  6199					 ;	 .ELSEIF ax==WM_PAINT
1  6200					 ;		 push	 offset	enginePaint
1  6201					 ;		 push	 hwnd
1  6202					 ;		 call	 BeginPaint
1  6203					 ;
1  6204					 ;		 push	 offset	enginePaint
1  6205					 ;		 push	 hwnd
1  6206					 ;		 call	 EndPaint
1  6207						 .ELSE
2  6208	000001C8  EB 16				 jmp	 @C0000
2  6209	000001CA			 @C0004:
1  6210	000001CA  61					 popa
1  6211							 call	 DefWindowProc,	hwnd,wmsg,wparam,lparam
2  6212	000001CB  FF 75	14			 PUSH	 lparam
2  6213	000001CE  FF 75	10			 PUSH	 wparam
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 110
JANE.ASM



2  6214	000001D1  FF 75	0C			 PUSH	 wmsg
2  6215	000001D4  FF 75	08			 PUSH	 hwnd
2  6216	000001D7  E8 00000000e			 CALL	 DefWindowProcA
2  6217	000001DC  C9				 LEAVED
2  6218	000001DD  C2 0010			 RET	 00010h
1  6219						 .ENDIF
2  6220	000001E0			 @C0000:
1  6221
1  6222	000001E0  61				 popa
1  6223
1  6224	000001E1  33 C0				 xor eax,eax
2  6225	000001E3  C9				 LEAVED
2  6226	000001E4  C2 0010			 RET	 00010h
1  6227
1  6228	000001E7			 WndProc endp
1  6229					 ;/////////////////////////////////////////////////////////////////////////
1  6230
1  6231
1  6232	000001E7			 RandomNumber	 proc	 STDCALL, SeedExtra:DWORD
2  6233	000001E7  C8 0000 00			 ENTERD	 00000h,0
2  6234	000001EB  E8 00000000e			 call	 GetTickCount
1  6235	000001F0  8B 5D	08			 mov	 ebx, SeedExtra
1  6236	000001F3  33 C3				 xor	 eax, ebx
1  6237	000001F5  8B 1D	00000042r		 mov	 ebx, randomSeed
1  6238	000001FB  33 C3				 xor	 eax, ebx
1  6239	000001FD  C1 C0	03			 rol	 eax, 3h
1  6240	00000200  A3 00000042r			 mov	 randomSeed, eax
2  6241	00000205  C9				 LEAVED
2  6242	00000206  C2 0004			 RET	 00004h
1  6243	00000209			 RandomNumber	 endp
   6244
   6245
   6246					 INCLUDE Events-Win.inc
1  6247	00000209				 .code
1  6248
1  6249					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; On Load
1  6250	00000209			 OnLoad	 proc	 STDCALL
1  6251	00000209  E8 00000BB6			 call	 LoadResources
2  6252	0000020E  C3				 RET	 00000h
1  6253	0000020F			 OnLoad	 endp
1  6254
1  6255					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; On Exit
1  6256	0000020F			 OnExit	 proc	 STDCALL
2  6257	0000020F  C3				 RET	 00000h
1  6258	00000210			 OnExit	 endp
1  6259
1  6260					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; On KeyDown
1  6261	00000210			 KeyDown proc	 STDCALL, key:DWORD
2  6262	00000210  C8 0000 00			 ENTERD	 00000h,0
2  6263	00000214  8B 45	08			 mov	 eax, key
1  6264						 .IF eax == NINJA_KEY_UP				 ; Up
2  6265	00000217  83 F8	26			 cmp	 eax,NINJA_KEY_UP
2  6266	0000021A  75 10				 jnz	 @C0006
1  6267	0000021C  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6268	00000221  B3 01					 mov	 bl, NINJA_CONTROL_UP
1  6269	00000223  0A C3					 or	 al, bl
1  6270	00000225  A2 000002FAr				 mov	 CurrentNinja.Control, al
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 111
JANE.ASM



1  6271
1  6272						 .ELSEIF eax ==	NINJA_KEY_DOWN				 ; Down
2  6273	0000022A  EB 7A				 jmp	 @C0005
2  6274	0000022C			 @C0006:
2  6275	0000022C  83 F8	28			 cmp	 eax,NINJA_KEY_DOWN
2  6276	0000022F  75 10				 jnz	 @C0007
1  6277	00000231  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6278	00000236  B3 04					 mov	 bl, NINJA_CONTROL_DOWN
1  6279	00000238  0A C3					 or	 al, bl
1  6280	0000023A  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6281
1  6282						 .ELSEIF eax ==	NINJA_KEY_LEFT				 ; Left
2  6283	0000023F  EB 65				 jmp	 @C0005
2  6284	00000241			 @C0007:
2  6285	00000241  83 F8	25			 cmp	 eax,NINJA_KEY_LEFT
2  6286	00000244  75 10				 jnz	 @C0008
1  6287	00000246  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6288	0000024B  B3 08					 mov	 bl, NINJA_CONTROL_LEFT
1  6289	0000024D  0A C3					 or	 al, bl
1  6290	0000024F  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6291
1  6292						 .ELSEIF eax ==	NINJA_KEY_RIGHT				 ; Right
2  6293	00000254  EB 50				 jmp	 @C0005
2  6294	00000256			 @C0008:
2  6295	00000256  83 F8	27			 cmp	 eax,NINJA_KEY_RIGHT
2  6296	00000259  75 10				 jnz	 @C0009
1  6297	0000025B  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6298	00000260  B3 02					 mov	 bl, NINJA_CONTROL_RIGHT
1  6299	00000262  0A C3					 or	 al, bl
1  6300	00000264  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6301
1  6302						 .ELSEIF eax ==	NINJA_KEY_FIRE
2  6303	00000269  EB 3B				 jmp	 @C0005
2  6304	0000026B			 @C0009:
2  6305	0000026B  83 F8	11			 cmp	 eax,NINJA_KEY_FIRE
2  6306	0000026E  75 10				 jnz	 @C0010
1  6307	00000270  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6308	00000275  B3 10					 mov	 bl, NINJA_CONTROL_FIRE
1  6309	00000277  0A C3					 or	 al, bl
1  6310	00000279  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6311
1  6312						 .ELSEIF eax ==	NINJA_KEY_SWITCH
2  6313	0000027E  EB 26				 jmp	 @C0005
2  6314	00000280			 @C0010:
2  6315	00000280  83 F8	20			 cmp	 eax,NINJA_KEY_SWITCH
2  6316	00000283  75 09				 jnz	 @C0011
1  6317	00000285  6A 0D					 push	 NINJA_STATE_SWITCHING
1  6318	00000287  E8 00000BF1				 call	 SetNinjaState
1  6319
1  6320						 .ELSEIF eax ==	NINJA_KEY_HELP				 ; F1 -	Help/About
2  6321	0000028C  EB 18				 jmp	 @C0005
2  6322	0000028E			 @C0011:
2  6323	0000028E  83 F8	70			 cmp	 eax,NINJA_KEY_HELP
2  6324	00000291  75 13				 jnz	 @C0012
1  6325	00000293  6A 00					 push	 0
1  6326	00000295  68 00000BB7r				 push	 offset	engineCLS
1  6327	0000029A  68 00000000r				 push	 offset	versionTag
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 112
JANE.ASM



1  6328	0000029F  6A 00					 push	 0
1  6329	000002A1  E8 00000000e				 call	 MessageBox
1  6330						 .ENDIF
2  6331	000002A6			 @C0012:
2  6332	000002A6			 @C0005:
1  6333
1  6334						 .IF debugMode != 0						 ;;;; Debug keys
2  6335	000002A6  80 3D	00000034r 00		 cmp	 debugMode,0
2  6336	000002AD  74 3A				 jz	 @C0014
1  6337							 .IF eax == NINJA_KEY_DEBUG_DROWN
2  6338	000002AF  83 F8	71			 cmp	 eax,NINJA_KEY_DEBUG_DROWN
2  6339	000002B2  75 09				 jnz	 @C0016
1  6340	000002B4  6A 0A						 push	 NINJA_STATE_DROWNING
1  6341	000002B6  E8 00000BC2					 call	 SetNinjaState
1  6342							 .ELSEIF eax ==	NINJA_KEY_DEBUG_HURT
2  6343	000002BB  EB 2C				 jmp	 @C0015
2  6344	000002BD			 @C0016:
2  6345	000002BD  83 F8	72			 cmp	 eax,NINJA_KEY_DEBUG_HURT
2  6346	000002C0  75 09				 jnz	 @C0017
1  6347	000002C2  6A 10						 push	 10h
1  6348	000002C4  E8 00000AC3					 call	 OnTakeDamage
1  6349							 .ELSEIF eax ==	NINJA_KEY_DEBUG_GARGOYLE
2  6350	000002C9  EB 1E				 jmp	 @C0015
2  6351	000002CB			 @C0017:
2  6352	000002CB  83 F8	73			 cmp	 eax,NINJA_KEY_DEBUG_GARGOYLE
2  6353	000002CE  75 0F				 jnz	 @C0018
1  6354	000002D0  B0 01						 mov	 al, 01h
1  6355	000002D2  2A 05	00000D3Cr				 sub	 al, debugGargoyle
1  6356	000002D8  A2 00000D3Cr					 mov	 debugGargoyle,	al
1  6357							 .ELSEIF eax ==	NINJA_KEY_DEBUG_LOGIC
2  6358	000002DD  EB 0A				 jmp	 @C0015
2  6359	000002DF			 @C0018:
2  6360	000002DF  83 F8	74			 cmp	 eax,NINJA_KEY_DEBUG_LOGIC
2  6361	000002E2  75 05				 jnz	 @C0019
1  6362	000002E4  E8 00001BE6					 call	 LogicActivate
1  6363							 .ENDIF
2  6364	000002E9			 @C0019:
2  6365	000002E9			 @C0015:
1  6366						 .ENDIF
2  6367	000002E9			 @C0014:
2  6368	000002E9			 @C0013:
1  6369
1  6370						 .IF CurrentNinja.State	== NINJA_STATE_TRANSITION
2  6371	000002E9  80 3D	000002F9r FF		 cmp	 CurrentNinja .	State,NINJA_STATE_TRANSITION
2  6372	000002F0  75 07				 jnz	 @C0021
1  6373	000002F2  C6 05	000002FAr 00			 mov	 CurrentNinja.Control, 0h
1  6374						 .ENDIF
2  6375	000002F9			 @C0021:
2  6376	000002F9			 @C0020:
1  6377
2  6378	000002F9  C9				 LEAVED
2  6379	000002FA  C2 0004			 RET	 00004h
1  6380	000002FD			 KeyDown endp
1  6381
1  6382					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; On KeyUp
1  6383	000002FD			 KeyUp	 proc	 STDCALL, key:DWORD
2  6384	000002FD  C8 0000 00			 ENTERD	 00000h,0
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 113
JANE.ASM



2  6385	00000301  8B 45	08			 mov	 eax, key
1  6386						 .IF eax == NINJA_KEY_DEBUG					 ; Debug key	    +
   6387					 (backtick)
2  6388	00000304  3D 000000DF			 cmp	 eax,NINJA_KEY_DEBUG
2  6389	00000309  75 0F				 jnz	 @C0023
1  6390	0000030B  B0 01					 mov	 al, 1
1  6391	0000030D  2A 05	00000034r			 sub	 al, debugMode
1  6392	00000313  A2 00000034r				 mov	 debugMode, al
1  6393
1  6394						 .ELSEIF eax ==	NINJA_KEY_UP					 ; Up
2  6395	00000318  EB 71				 jmp	 @C0022
2  6396	0000031A			 @C0023:
2  6397	0000031A  83 F8	26			 cmp	 eax,NINJA_KEY_UP
2  6398	0000031D  75 12				 jnz	 @C0024
1  6399	0000031F  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6400	00000324  B3 01					 mov	 bl, NINJA_CONTROL_UP
1  6401	00000326  F6 D3					 not	 bl
1  6402	00000328  22 C3					 and	 al, bl
1  6403	0000032A  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6404
1  6405						 .ELSEIF eax ==	NINJA_KEY_DOWN				 ; Down
2  6406	0000032F  EB 5A				 jmp	 @C0022
2  6407	00000331			 @C0024:
2  6408	00000331  83 F8	28			 cmp	 eax,NINJA_KEY_DOWN
2  6409	00000334  75 12				 jnz	 @C0025
1  6410	00000336  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6411	0000033B  B3 04					 mov	 bl, NINJA_CONTROL_DOWN
1  6412	0000033D  F6 D3					 not	 bl
1  6413	0000033F  22 C3					 and	 al, bl
1  6414	00000341  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6415
1  6416						 .ELSEIF eax ==	NINJA_KEY_LEFT				 ; Left
2  6417	00000346  EB 43				 jmp	 @C0022
2  6418	00000348			 @C0025:
2  6419	00000348  83 F8	25			 cmp	 eax,NINJA_KEY_LEFT
2  6420	0000034B  75 12				 jnz	 @C0026
1  6421	0000034D  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6422	00000352  B3 08					 mov	 bl, NINJA_CONTROL_LEFT
1  6423	00000354  F6 D3					 not	 bl
1  6424	00000356  22 C3					 and	 al, bl
1  6425	00000358  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6426
1  6427						 .ELSEIF eax ==	NINJA_KEY_RIGHT				 ; Right
2  6428	0000035D  EB 2C				 jmp	 @C0022
2  6429	0000035F			 @C0026:
2  6430	0000035F  83 F8	27			 cmp	 eax,NINJA_KEY_RIGHT
2  6431	00000362  75 12				 jnz	 @C0027
1  6432	00000364  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6433	00000369  B3 02					 mov	 bl, NINJA_CONTROL_RIGHT
1  6434	0000036B  F6 D3					 not	 bl
1  6435	0000036D  22 C3					 and	 al, bl
1  6436	0000036F  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6437
1  6438						 .ELSEIF eax ==	NINJA_KEY_FIRE				 ; Right
2  6439	00000374  EB 15				 jmp	 @C0022
2  6440	00000376			 @C0027:
2  6441	00000376  83 F8	11			 cmp	 eax,NINJA_KEY_FIRE
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 114
JANE.ASM



2  6442	00000379  75 10				 jnz	 @C0028
1  6443	0000037B  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  6444	00000380  B3 10					 mov	 bl, NINJA_CONTROL_FIRE
1  6445	00000382  F6 D3					 not	 bl
1  6446	00000384  22 C3					 and	 al, bl
1  6447	00000386  A2 000002FAr				 mov	 CurrentNinja.Control, al
1  6448						 .ENDIF
2  6449	0000038B			 @C0028:
2  6450	0000038B			 @C0022:
2  6451	0000038B  C9				 LEAVED
2  6452	0000038C  C2 0004			 RET	 00004h
1  6453	0000038F			 KeyUp	 endp
1  6454
1  6455					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; On Paint
1  6456	0000038F			 OnPaint proc	 STDCALL
1  6457
1  6458					 INCLUDE Gfx-UI.inc
2  6459	0000038F  FF 35	000000D4r		 push	 bmp_UserInterface
2  6460	00000395  FF 35	00000014r		 push	 copierDC
2  6461	0000039B  E8 00000000e			 call	 SelectObject
2  6462
2  6463	000003A0  68 00CC0020			 push	 SRCCOPY
2  6464	000003A5  6A 00				 push	 0
2  6465	000003A7  6A 00				 push	 0
2  6466	000003A9  FF 35	00000014r		 push	 copierDC
2  6467	000003AF  68 0000016E			 push	 GAME_SCREEN_HEIGHT
2  6468	000003B4  68 000001EC			 push	 GAME_SCREEN_WIDTH
2  6469	000003B9  6A 00				 push	 0
2  6470	000003BB  6A 00				 push	 0
2  6471	000003BD  FF 35	00000004r		 push	 bufferDC
2  6472	000003C3  E8 00000000e			 call	 BitBlt
2  6473
2  6474					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Simple Inventory Display
2  6475	000003C8  0F B6	05 000002FEr		 movzx	 eax, CurrentNinja.ActiveInventory
2  6476	000003CF  C1 E0	02			 shl	 eax, 2					 ; *4
2  6477	000003D2  05 00000140r			 add	 eax, offset bmp_Inventory		 ; eax -> bitmap handle
2  6478	000003D7  FF 30				 push	 dword ptr [eax]
2  6479	000003D9  FF 35	00000014r		 push	 copierDC
2  6480	000003DF  E8 00000000e			 call	 SelectObject
2  6481
2  6482	000003E4  68 00CC0020			 push	 SRCCOPY
2  6483	000003E9  6A 00				 push	 0
2  6484	000003EB  6A 00				 push	 0
2  6485	000003ED  FF 35	00000014r		 push	 copierDC
2  6486	000003F3  6A 34				 push	 GAME_INVENTORY_HEIGHT
2  6487	000003F5  6A 5B				 push	 GAME_INVENTORY_WIDTH
2  6488	000003F7  68 00000130			 push	 GAME_INVENTORY_TOP
2  6489	000003FC  68 000000FF			 push	 GAME_INVENTORY_LEFT
2  6490	00000401  FF 35	00000004r		 push	 bufferDC
2  6491	00000407  E8 00000000e			 call	 BitBlt
2  6492
2  6493
2  6494					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Ninja's Health
2  6495	0000040C  68 009CCEFF			 push	 COLOURS_ENERGY_NINJA
2  6496	00000411  E8 00000000e			 call	 CreateSolidBrush
2  6497	00000416  A3 00000035r			 mov	 brushTmp, eax
2  6498
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 115
JANE.ASM



2  6499	0000041B  BB 0000000B			 mov	 ebx, GAME_HEALTH_PLY_LEFT
2  6500	00000420  89 1D	00000B65r		 mov	 rectPlyHealth.rc_left,	ebx
2  6501	00000426  0F B7	0D 000002FCr		 movzx	 ecx, CurrentNinja.Health
2  6502	0000042D  03 D9				 add	 ebx, ecx
2  6503	0000042F  89 1D	00000B6Dr		 mov	 rectPlyHealth.rc_right, ebx
2  6504
2  6505	00000435  50				 push	 eax
2  6506	00000436  68 00000B65r			 push	 offset	rectPlyHealth
2  6507	0000043B  FF 35	00000004r		 push	 bufferDC
2  6508	00000441  E8 00000000e			 call	 FillRect
2  6509
2  6510	00000446  FF 35	00000035r		 push	 brushTmp
2  6511	0000044C  E8 00000000e			 call	 DeleteObject
2  6512
2  6513					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Enemies' Health
2  6514	00000451  68 00C60000			 push	 COLOURS_ENERGY_ENEMY
2  6515	00000456  E8 00000000e			 call	 CreateSolidBrush
2  6516	0000045B  A3 00000035r			 mov	 brushTmp, eax
2  6517
2  6518	00000460  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
2  6519	00000465  B9 0000002A			 mov	 ecx, MapRoom_Len
2  6520	0000046A  F7 E1				 mul	 ecx
2  6521	0000046C  05 0000031Dr			 add	 eax, offset Jane_Map			 ; eax -> MapRoom structure
2  6522	00000471  8B F0				 mov	 esi, eax				 ; esi -> MapRoom structure
2  6523
2  6524	00000473  80 7E	0F FF			 cmp	 [esi].enemy1_LivesLeft, 0FFh
2  6525	00000477  74 28				 je	 gfxui_noenemyone
2  6526
2  6527	00000479  8B 1D	00000B75r		 mov	 ebx, rectEn1Health.rc_left
2  6528	0000047F  0F B7	4E 11			 movzx	 ecx, [esi].enemy1_Health
2  6529	00000483  03 D9				 add	 ebx, ecx
2  6530	00000485  89 1D	00000B7Dr		 mov	 rectEn1Health.rc_right, ebx
2  6531
2  6532	0000048B  FF 35	00000035r		 push	 brushTmp
2  6533	00000491  68 00000B75r			 push	 offset	rectEn1Health
2  6534	00000496  FF 35	00000004r		 push	 bufferDC
2  6535	0000049C  E8 00000000e			 call	 FillRect
2  6536
2  6537	000004A1			 gfxui_noenemyone:
2  6538	000004A1  80 7E	21 FF			 cmp	 [esi].enemy2_LivesLeft, 0FFh
2  6539	000004A5  74 28				 je	 gfxui_noenemytwo
2  6540
2  6541	000004A7  8B 1D	00000B85r		 mov	 ebx, rectEn2Health.rc_left
2  6542	000004AD  0F B7	4E 23			 movzx	 ecx, [esi].enemy2_Health
2  6543	000004B1  03 D9				 add	 ebx, ecx
2  6544	000004B3  89 1D	00000B8Dr		 mov	 rectEn2Health.rc_right, ebx
2  6545
2  6546	000004B9  FF 35	00000035r		 push	 brushTmp
2  6547	000004BF  68 00000B85r			 push	 offset	rectEn2Health
2  6548	000004C4  FF 35	00000004r		 push	 bufferDC
2  6549	000004CA  E8 00000000e			 call	 FillRect
2  6550
2  6551	000004CF			 gfxui_noenemytwo:
2  6552	000004CF  FF 35	00000035r		 push	 brushTmp
2  6553	000004D5  E8 00000000e			 call	 DeleteObject
2  6554
1  6555
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 116
JANE.ASM



1  6556					 INCLUDE Gfx-Action.inc
2  6557
2  6558						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Draw background
2  6559	000004DA  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
2  6560	000004DF  B9 0000002A			 mov	 ecx, MapRoom_Len
2  6561	000004E4  F7 E1				 mul	 ecx
2  6562	000004E6  05 0000031Dr			 add	 eax, offset Jane_Map
2  6563	000004EB  0F B7	00			 movzx	 eax, [eax].BackgroundGfx
2  6564	000004EE  C1 E0	02			 shl	 eax, 2h			 ; *4
2  6565	000004F1  05 00000120r			 add	 eax, offset bmp_MapScreens
2  6566	000004F6  FF 30				 push	 dword ptr [eax]
2  6567	000004F8  FF 35	00000014r		 push	 copierDC
2  6568	000004FE  E8 00000000e			 call	 SelectObject
2  6569
2  6570						 .IF debugMode == 0
3  6571	00000503  80 3D	00000034r 00		 cmp	 debugMode,0
3  6572	0000050A  75 2A				 jnz	 @C0030
2  6573	0000050C  68 00CC0020				 push	 SRCCOPY
2  6574	00000511  6A 00					 push	 0
2  6575	00000513  6A 00					 push	 0
2  6576	00000515  FF 35	00000014r			 push	 copierDC
2  6577	0000051B  68 00000120				 push	 GAME_ACTION_HEIGHT
2  6578	00000520  68 000001E0				 push	 GAME_ACTION_WIDTH
2  6579	00000525  6A 64					 push	 NINJA_FRAME_HEIGHT
2  6580	00000527  6A 50					 push	 NINJA_FRAME_WIDTH
2  6581	00000529  FF 35	0000000Cr			 push	 actionDC
2  6582	0000052F  E8 00000000e				 call	 BitBlt
2  6583						 .ELSE
3  6584	00000534  EB 2B				 jmp	 @C0029
3  6585	00000536			 @C0030:
2  6586	00000536  68 00CC0020				 push	 SRCCOPY
2  6587	0000053B  68 00000120				 push	 GAME_ACTION_HEIGHT
2  6588	00000540  6A 00					 push	 0
2  6589	00000542  FF 35	00000014r			 push	 copierDC
2  6590	00000548  68 00000120				 push	 GAME_ACTION_HEIGHT
2  6591	0000054D  68 000001E0				 push	 GAME_ACTION_WIDTH
2  6592	00000552  6A 64					 push	 NINJA_FRAME_HEIGHT
2  6593	00000554  6A 50					 push	 NINJA_FRAME_WIDTH
2  6594	00000556  FF 35	0000000Cr			 push	 actionDC
2  6595	0000055C  E8 00000000e				 call	 BitBlt
2  6596						 .ENDIF
3  6597	00000561			 @C0029:
2  6598
2  6599						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Draw Scenery above ninja
2  6600	00000561  6A 00				 push	 0
2  6601	00000563  E8 00000FE9			 call	 PaintScenery						 ; Draw	initial	    +
   6602					 scenery
2  6603
2  6604						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Draw Enemies above ninja
2  6605	00000568  6A 00				 push	 0
2  6606	0000056A  E8 0000127C			 call	 GfxDrawEnemyBelow
2  6607
2  6608	0000056F  50				 push	 eax							 ; Subsitute this   +
   6609					 for lowest enemy on screen
2  6610	00000570  E8 00000FDC			 call	 PaintScenery						 ; Draw	2nd layer   +
   6611					 scenery
2  6612
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 117
JANE.ASM



2  6613					 INCLUDE Gfx-Ninja.inc
3  6614					 ;;;;;;;;;;;;;;;; Ninja	Gfx
3  6615					 ;	 cmp	 CurrentNinja.State, NINJA_STATE_TRANSITION
3  6616					 ;	 je	 gfxninja_nodrawing
3  6617
3  6618	00000575  E8 00000DAF			 call	 CalcNinjaAnimOffset
3  6619
3  6620	0000057A  C1 E0	02			 shl	 eax, 2h
3  6621	0000057D  05 000000D8r			 add	 eax, offset bmp_Skins			 ; eax -> bitmap handle
3  6622
3  6623	00000582  FF 30				 push	 dword ptr [eax]
3  6624	00000584  FF 35	00000014r		 push	 copierDC
3  6625	0000058A  E8 00000000e			 call	 SelectObject
3  6626
3  6627	0000058F  E8 00000DC9			 call	 CalcNinjaFrame
3  6628
3  6629	00000594  0F B7	05 000002FFr		 movzx	 eax, CurrentNinja.Frame
3  6630	0000059B  03 F0				 add	 esi, eax
3  6631	0000059D  0F B6	06			 movzx	 eax, byte ptr [esi]				 ; eax == frame	number
3  6632	000005A0  B9 00000050			 mov	 ecx, NINJA_FRAME_WIDTH
3  6633	000005A5  F7 E1				 mul	 ecx
3  6634	000005A7  8B F8				 mov	 edi, eax					 ; edx == Left in frames
3  6635
3  6636	000005A9  80 3D	000002F9r 0A		 cmp	 CurrentNinja.State, NINJA_STATE_DROWNING
3  6637	000005B0  74 0D				 je	 gfxninja_sinking
3  6638	000005B2  80 3D	000002F9r 0B		 cmp	 CurrentNinja.State, NINJA_STATE_SINKING
3  6639	000005B9  0F 85	000000AD		 jne	 gfxninja_notsinking
3  6640	000005BF			 gfxninja_sinking:
3  6641	000005BF  A1 0000003Er			 mov	 eax, sinkingFrame
3  6642	000005C4  B9 00000050			 mov	 ecx, NINJA_FRAME_WIDTH
3  6643	000005C9  F7 E1				 mul	 ecx
3  6644	000005CB  8B F8				 mov	 edi, eax					 ; edx == Left in frames
3  6645
3  6646	000005CD  68 00FFFFFF			 push	 COLOURS_NINJA_TRANS
3  6647	000005D2  B8 00000058			 mov	 eax, NINJA_FRAME_OFFSET_Y
3  6648	000005D7  2B 05	0000003Ar		 sub	 eax, sinkingFlags
3  6649	000005DD  50				 push	 eax
3  6650	000005DE  6A 50				 push	 NINJA_FRAME_WIDTH
3  6651	000005E0  B8 00000064			 mov	 eax, NINJA_FRAME_HEIGHT
3  6652	000005E5  0F B6	0D 000002FBr		 movzx	 ecx, CurrentNinja.Facing
3  6653	000005EC  F7 E1				 mul	 ecx
3  6654	000005EE  50				 push	 eax						 ; eax -> Top of frame
3  6655	000005EF  57				 push	 edi
3  6656	000005F0  FF 35	00000014r		 push	 copierDC
3  6657	000005F6  B8 00000058			 mov	 eax, NINJA_FRAME_OFFSET_Y
3  6658	000005FB  2B 05	0000003Ar		 sub	 eax, sinkingFlags
3  6659	00000601  50				 push	 eax
3  6660	00000602  6A 50				 push	 NINJA_FRAME_WIDTH
3  6661	00000604  A1 000002F1r			 mov	 eax, CurrentNinja.ScreenY
3  6662	00000609  03 05	0000003Ar		 add	 eax, sinkingFlags
3  6663	0000060F  50				 push	 eax
3  6664	00000610  A1 000002EDr			 mov	 eax, CurrentNinja.ScreenX
3  6665	00000615  50				 push	 eax
3  6666	00000616  FF 35	0000000Cr		 push	 actionDC
3  6667	0000061C  E8 00000000e			 call	 TransparentBlt
3  6668
3  6669	00000621  FF 05	0000003Ar		 inc	 sinkingFlags
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 118
JANE.ASM



3  6670	00000627  FF 05	0000003Ar		 inc	 sinkingFlags
3  6671	0000062D  FF 05	0000003Ar		 inc	 sinkingFlags
3  6672	00000633  FF 05	0000003Ar		 inc	 sinkingFlags
3  6673
3  6674						 .IF sinkingFlags == NINJA_FRAME_HEIGHT
4  6675	00000639  83 3D	0000003Ar 64		 cmp	 sinkingFlags,NINJA_FRAME_HEIGHT
4  6676	00000640  75 25				 jnz	 @C0032
3  6677							 .IF CurrentNinja.State	== NINJA_STATE_DROWNING
4  6678	00000642  80 3D	000002F9r 0A		 cmp	 CurrentNinja .	State,NINJA_STATE_DROWNING
4  6679	00000649  75 09				 jnz	 @C0034
3  6680	0000064B  6A 09						 push	 NINJA_STATE_DEAD
3  6681	0000064D  E8 0000082B					 call	 SetNinjaState
3  6682							 .ELSEIF CurrentNinja.State == NINJA_STATE_SINKING
4  6683	00000652  EB 13				 jmp	 @C0033
4  6684	00000654			 @C0034:
4  6685	00000654  80 3D	000002F9r 0B		 cmp	 CurrentNinja .	State,NINJA_STATE_SINKING
4  6686	0000065B  75 0A				 jnz	 @C0035
3  6687	0000065D  68 000000FF					 push	 NINJA_STATE_TRANSITION
3  6688	00000662  E8 00000816					 call	 SetNinjaState
3  6689							 .ENDIF
4  6690	00000667			 @C0035:
4  6691	00000667			 @C0033:
3  6692						 .ENDIF
4  6693	00000667			 @C0032:
4  6694	00000667			 @C0031:
3  6695
3  6696	00000667  E9 000000FB			 jmp	 gfxninja_nodrawing
3  6697
3  6698	0000066C			 gfxninja_notsinking:
3  6699	0000066C  68 00FFFFFF			 push	 COLOURS_NINJA_TRANS
3  6700	00000671  B8 00000064			 mov	 eax, NINJA_FRAME_HEIGHT
3  6701	00000676  50				 push	 eax
3  6702	00000677  6A 50				 push	 NINJA_FRAME_WIDTH
3  6703	00000679  0F B6	0D 000002FBr		 movzx	 ecx, CurrentNinja.Facing
3  6704	00000680  F7 E1				 mul	 ecx
3  6705	00000682  50				 push	 eax						 ; eax -> Top of frame
3  6706	00000683  57				 push	 edi
3  6707	00000684  FF 35	00000014r		 push	 copierDC
3  6708	0000068A  6A 64				 push	 NINJA_FRAME_HEIGHT
3  6709	0000068C  6A 50				 push	 NINJA_FRAME_WIDTH
3  6710	0000068E  A1 000002F1r			 mov	 eax, CurrentNinja.ScreenY
3  6711	00000693  50				 push	 eax
3  6712	00000694  A1 000002EDr			 mov	 eax, CurrentNinja.ScreenX
3  6713
3  6714							 .IF CurrentNinja.ActiveInventory == 01h
4  6715	00000699  80 3D	000002FEr 01		 cmp	 CurrentNinja .	ActiveInventory,01H
4  6716	000006A0  0F 85	000000B5		 jnz	 @C0037
3  6717								 .IF byte ptr [esi] == 09h
4  6718	000006A6  80 3E	09			 cmp	 byte ptr[esi],09H
4  6719	000006A9  75 38				 jnz	 @C0039
3  6720									 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
4  6721	000006AB  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
4  6722	000006B2  75 05				 jnz	 @C0041
3  6723	000006B4  83 C0	14							 add	 eax, 20
3  6724									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
4  6725	000006B7  EB 28				 jmp	 @C0040
4  6726	000006B9			 @C0041:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 119
JANE.ASM



4  6727	000006B9  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
4  6728	000006C0  75 05				 jnz	 @C0042
3  6729	000006C2  83 C0	14							 add	 eax, 20
3  6730									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
4  6731	000006C5  EB 1A				 jmp	 @C0040
4  6732	000006C7			 @C0042:
4  6733	000006C7  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
4  6734	000006CE  75 05				 jnz	 @C0043
3  6735	000006D0  83 C0	EC							 add	 eax, -20
3  6736									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
4  6737	000006D3  EB 0C				 jmp	 @C0040
4  6738	000006D5			 @C0043:
4  6739	000006D5  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
4  6740	000006DC  75 03				 jnz	 @C0044
3  6741	000006DE  83 C0	EC							 add	 eax, -20
3  6742									 .ENDIF
4  6743	000006E1			 @C0044:
4  6744	000006E1			 @C0040:
3  6745
3  6746								 .ELSEIF byte ptr [esi]	== 17h
4  6747	000006E1  EB 78				 jmp	 @C0038
4  6748	000006E3			 @C0039:
4  6749	000006E3  80 3E	17			 cmp	 byte ptr[esi],17H
4  6750	000006E6  75 38				 jnz	 @C0045
3  6751									 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
4  6752	000006E8  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
4  6753	000006EF  75 05				 jnz	 @C0047
3  6754	000006F1  83 C0	14							 add	 eax, 20
3  6755									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
4  6756	000006F4  EB 28				 jmp	 @C0046
4  6757	000006F6			 @C0047:
4  6758	000006F6  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
4  6759	000006FD  75 05				 jnz	 @C0048
3  6760	000006FF  83 C0	14							 add	 eax, 20
3  6761									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
4  6762	00000702  EB 1A				 jmp	 @C0046
4  6763	00000704			 @C0048:
4  6764	00000704  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
4  6765	0000070B  75 05				 jnz	 @C0049
3  6766	0000070D  83 C0	EC							 add	 eax, -20
3  6767									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
4  6768	00000710  EB 0C				 jmp	 @C0046
4  6769	00000712			 @C0049:
4  6770	00000712  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
4  6771	00000719  75 03				 jnz	 @C0050
3  6772	0000071B  83 C0	EC							 add	 eax, -20
3  6773									 .ENDIF
4  6774	0000071E			 @C0050:
4  6775	0000071E			 @C0046:
3  6776
3  6777								 .ELSEIF byte ptr [esi]	== 18h
4  6778	0000071E  EB 3B				 jmp	 @C0038
4  6779	00000720			 @C0045:
4  6780	00000720  80 3E	18			 cmp	 byte ptr[esi],18H
4  6781	00000723  75 36				 jnz	 @C0051
3  6782									 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
4  6783	00000725  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 120
JANE.ASM



4  6784	0000072C  75 05				 jnz	 @C0053
3  6785	0000072E  83 C0	14							 add	 eax, 20
3  6786									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
4  6787	00000731  EB 28				 jmp	 @C0052
4  6788	00000733			 @C0053:
4  6789	00000733  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
4  6790	0000073A  75 05				 jnz	 @C0054
3  6791	0000073C  83 C0	14							 add	 eax, 20
3  6792									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
4  6793	0000073F  EB 1A				 jmp	 @C0052
4  6794	00000741			 @C0054:
4  6795	00000741  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
4  6796	00000748  75 05				 jnz	 @C0055
3  6797	0000074A  83 C0	EC							 add	 eax, -20
3  6798									 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
4  6799	0000074D  EB 0C				 jmp	 @C0052
4  6800	0000074F			 @C0055:
4  6801	0000074F  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
4  6802	00000756  75 03				 jnz	 @C0056
3  6803	00000758  83 C0	EC							 add	 eax, -20
3  6804									 .ENDIF
4  6805	0000075B			 @C0056:
4  6806	0000075B			 @C0052:
3  6807
3  6808								 .ENDIF
4  6809	0000075B			 @C0051:
4  6810	0000075B			 @C0038:
3  6811							 .ENDIF
4  6812	0000075B			 @C0037:
4  6813	0000075B			 @C0036:
3  6814
3  6815	0000075B  50				 push	 eax
3  6816	0000075C  FF 35	0000000Cr		 push	 actionDC
3  6817	00000762  E8 00000000e			 call	 TransparentBlt
3  6818
3  6819	00000767			 gfxninja_nodrawing:
2  6820
2  6821	00000767  A1 000002F1r			 mov	 eax, CurrentNinja.ScreenY
2  6822	0000076C  83 C0	58			 add	 eax, NINJA_FRAME_OFFSET_Y
2  6823	0000076F  50				 push	 eax
2  6824	00000770  50				 push	 eax
2  6825	00000771  E8 00000DDB			 call	 PaintScenery						 ; Paint all items  +
   6826					 below Ninja
2  6827
2  6828						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Draw Enemies below ninja
2  6829	00000776  E8 00001070			 call	 GfxDrawEnemyBelow
2  6830
2  6831	0000077B  50				 push	 eax							 ; Subsitute this   +
   6832					 for lowest enemy on screen
2  6833	0000077C  E8 00000DD0			 call	 PaintScenery						 ; Draw	overlayed   +
   6834					 scenery
2  6835
2  6836	00000781  0F B6	05 00000034r		 movzx	 eax, debugMode
2  6837	00000788  0B C0				 or	 eax,eax
2  6838	0000078A  74 22				 jz	 drawaction_skipninjacollisionpoint
2  6839
2  6840	0000078C  68 00FFFFFF			 push	 0FFFFFFh
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 121
JANE.ASM



2  6841	00000791  A1 000002F1r			 mov	 eax, CurrentNinja.ScreenY
2  6842	00000796  83 C0	58			 add	 eax, NINJA_FRAME_OFFSET_Y
2  6843	00000799  50				 push	 eax
2  6844	0000079A  A1 000002EDr			 mov	 eax, CurrentNinja.ScreenX
2  6845	0000079F  83 C0	28			 add	 eax, NINJA_FRAME_OFFSET_X
2  6846	000007A2  50				 push	 eax
2  6847	000007A3  FF 35	0000000Cr		 push	 actionDC
2  6848	000007A9  E8 00000000e			 call	 SetPixel
2  6849
2  6850	000007AE			 drawaction_skipninjacollisionpoint:
2  6851
2  6852						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Draw Room Transition
2  6853						 .IF rectTransition.rc_bottom != NINJA_FRAME_HEIGHT
3  6854	000007AE  83 3D	00000BA1r 64		 cmp	 rectTransition	. rc_bottom,NINJA_FRAME_HEIGHT
3  6855	000007B5  74 72				 jz	 @C0058
2  6856	000007B7  6A 00					 push	 0000000h
2  6857	000007B9  E8 00000000e				 call	 CreateSolidBrush
2  6858	000007BE  A3 00000035r				 mov	 brushTmp, eax
2  6859
2  6860	000007C3  50					 push	 eax
2  6861	000007C4  68 00000B95r				 push	 offset	rectTransition
2  6862	000007C9  FF 35	0000000Cr			 push	 actionDC
2  6863	000007CF  E8 00000000e				 call	 FillRect
2  6864
2  6865	000007D4  FF 35	00000035r			 push	 brushTmp
2  6866	000007DA  E8 00000000e				 call	 DeleteObject
2  6867
2  6868							 .IF rectTransition.rc_bottom != GAME_ACTION_HEIGHT + NINJA_FRAME_HEIGHT
3  6869	000007DF  81 3D	00000BA1r     +		 cmp	 rectTransition	. rc_bottom,GAME_ACTION_HEIGHT+NINJA_FRAME_HEIGHT
   6870		  00000184
3  6871	000007E9  74 0F				 jz	 @C0060
2  6872	000007EB  A1 00000BA1r					 mov	 eax, rectTransition.rc_bottom
2  6873	000007F0  83 C0	10					 add	 eax, 10h
2  6874	000007F3  A3 00000BA1r					 mov	 rectTransition.rc_bottom, eax
2  6875							 .ELSE
3  6876	000007F8  EB 2F				 jmp	 @C0059
3  6877	000007FA			 @C0060:
2  6878								 .IF rectTransition.rc_top != GAME_ACTION_HEIGHT + NINJA_FRAME_HEIGHT
3  6879	000007FA  81 3D	00000B99r     +		 cmp	 rectTransition	. rc_top,GAME_ACTION_HEIGHT+NINJA_FRAME_HEIGHT
   6880		  00000184
3  6881	00000804  74 0F				 jz	 @C0062
2  6882	00000806  A1 00000B99r						 mov	 eax, rectTransition.rc_top
2  6883	0000080B  83 C0	10						 add	 eax, 10h
2  6884	0000080E  A3 00000B99r						 mov	 rectTransition.rc_top,	eax
2  6885								 .ELSE
3  6886	00000813  EB 14				 jmp	 @C0061
3  6887	00000815			 @C0062:
2  6888	00000815  C7 05	00000B99r     +					 mov	 rectTransition.rc_top,	NINJA_FRAME_HEIGHT
   6889		  00000064
2  6890	0000081F  C7 05	00000BA1r     +					 mov	 rectTransition.rc_bottom, NINJA_FRAME_HEIGHT
   6891		  00000064
2  6892								 .ENDIF
3  6893	00000829			 @C0061:
2  6894							 .ENDIF
3  6895	00000829			 @C0059:
2  6896						 .ENDIF
3  6897	00000829			 @C0058:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 122
JANE.ASM



3  6898	00000829			 @C0057:
2  6899
2  6900	00000829  68 00CC0020			 push	 SRCCOPY
2  6901	0000082E  6A 64				 push	 NINJA_FRAME_HEIGHT
2  6902	00000830  6A 50				 push	 NINJA_FRAME_WIDTH
2  6903	00000832  FF 35	0000000Cr		 push	 actionDC
2  6904	00000838  68 00000120			 push	 GAME_ACTION_HEIGHT
2  6905	0000083D  68 000001E0			 push	 GAME_ACTION_WIDTH
2  6906	00000842  6A 06				 push	 GAME_ACTION_TOP
2  6907	00000844  6A 06				 push	 GAME_ACTION_LEFT
2  6908	00000846  FF 35	00000004r		 push	 bufferDC
2  6909	0000084C  E8 00000000e			 call	 BitBlt
1  6910
1  6911	00000851  68 00CC0020			 push	 SRCCOPY
1  6912	00000856  6A 00				 push	 0
1  6913	00000858  6A 00				 push	 0
1  6914	0000085A  FF 35	00000004r		 push	 bufferDC
1  6915	00000860  68 0000016E			 push	 GAME_SCREEN_HEIGHT
1  6916	00000865  68 000001EC			 push	 GAME_SCREEN_WIDTH
1  6917	0000086A  6A 00				 push	 0
1  6918	0000086C  6A 00				 push	 0
1  6919	0000086E  FF 35	00000000r		 push	 engineDC
1  6920	00000874  E8 00000000e			 call	 BitBlt
1  6921
2  6922	00000879  C3				 RET	 00000h
1  6923	0000087A			 OnPaint endp
1  6924
1  6925					 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; On Timer
1  6926	0000087A			 OnTimer proc	 STDCALL, timerID:DWORD
2  6927	0000087A  C8 0000 00			 ENTERD	 00000h,0
2  6928	0000087E  8B 45	08			 mov	 eax, timerID
1  6929						 .IF eax == TIMER_PAINTER
2  6930	00000881  83 F8	23			 cmp	 eax,TIMER_PAINTER
2  6931	00000884  75 07				 jnz	 @C0064
1  6932	00000886  E8 FFFFFB04				 call	 OnPaint
1  6933						 .ELSEIF eax ==	TIMER_ANIMATOR
2  6934	0000088B  EB 39				 jmp	 @C0063
2  6935	0000088D			 @C0064:
2  6936	0000088D  83 F8	24			 cmp	 eax,TIMER_ANIMATOR
2  6937	00000890  75 34				 jnz	 @C0065
1  6938	00000892  6A 00					 push	 0
1  6939	00000894  E8 00000694				 call	 ControlHandler
1  6940
1  6941	00000899  A1 000002F5r				 mov	 eax, CurrentNinja.ScreenID
1  6942	0000089E  B9 0000002A				 mov	 ecx, MapRoom_Len
1  6943	000008A3  F7 E1					 mul	 ecx
1  6944	000008A5  05 0000031Dr				 add	 eax, offset Jane_Map
1  6945
1  6946							 .IF [eax].enemy1_LivesLeft != 0FFh
2  6947	000008AA  80 78	0F FF			 cmp	 [eax].	enemy1_LivesLeft,0FFH
2  6948	000008AE  74 09				 jz	 @C0067
1  6949	000008B0  50						 push	 eax
1  6950
1  6951	000008B1  6A 01						 push	 1
1  6952	000008B3  E8 00001621					 call	 ControlEnemy
1  6953
1  6954	000008B8  58						 pop	 eax
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 123
JANE.ASM



1  6955							 .ENDIF
2  6956	000008B9			 @C0067:
2  6957	000008B9			 @C0066:
1  6958
1  6959							 .IF [eax].enemy2_LivesLeft != 0FFh
2  6960	000008B9  80 78	21 FF			 cmp	 [eax].	enemy2_LivesLeft,0FFH
2  6961	000008BD  74 07				 jz	 @C0069
1  6962	000008BF  6A 02						 push	 2
1  6963	000008C1  E8 00001613					 call	 ControlEnemy
1  6964							 .ENDIF
2  6965	000008C6			 @C0069:
2  6966	000008C6			 @C0068:
1  6967
1  6968						 .ENDIF
2  6969	000008C6			 @C0065:
2  6970	000008C6			 @C0063:
2  6971	000008C6  C9				 LEAVED
2  6972	000008C7  C2 0004			 RET	 00004h
1  6973	000008CA			 OnTimer endp
   6974					 INCLUDE Events-Ninja.inc
1  6975	000008CA				 .code
1  6976
1  6977	000008CA			 OnEnterRoom	 proc	 STDCALL
1  6978
1  6979						 ;;; Process Room Entry
1  6980	000008CA  6A 00				 push	 NINJA_STATE_WALKING
1  6981	000008CC  E8 000005AC			 call	 SetNinjaState
1  6982
1  6983	000008D1			 enterroom_sleepdraw:
1  6984	000008D1  E8 FFFFFAB9			 call	 OnPaint
1  6985	000008D6  6A 01				 push	 1h
1  6986	000008D8  E8 00000000e			 call	 Sleep
1  6987	000008DD  83 3D	00000BA1r 64		 cmp	 rectTransition.rc_bottom, NINJA_FRAME_HEIGHT
1  6988	000008E4  75 EB				 jne	 enterroom_sleepdraw
1  6989
2  6990	000008E6  C3				 RET	 00000h
1  6991	000008E7			 OnEnterRoom	 endp
1  6992
1  6993	000008E7			 OnExitRoom	 proc	 STDCALL
1  6994						 ;;; Process Room Exit (and which room to move to)
1  6995	000008E7  C7 05	00000BA1r     +		 mov	 rectTransition.rc_bottom, NINJA_FRAME_HEIGHT +	10h
   6996		  00000074
1  6997
1  6998	000008F1			 exitroom_sleepdraw:
1  6999	000008F1  E8 FFFFFA99			 call	 OnPaint
1  7000	000008F6  6A 01				 push	 1h
1  7001	000008F8  E8 00000000e			 call	 Sleep
1  7002	000008FD  81 3D	00000BA1r     +		 cmp	 rectTransition.rc_bottom, GAME_ACTION_HEIGHT +	NINJA_FRAME_HEIGHT
   7003		  00000184
1  7004	00000907  75 E8				 jne	 exitroom_sleepdraw
1  7005
1  7006						 .IF CurrentNinja.ScreenID == 0
2  7007	00000909  83 3D	000002F5r 00		 cmp	 CurrentNinja .	ScreenID,0
2  7008	00000910  75 5D				 jnz	 @C0071
1  7009							 ; Start Screen
1  7010							 .IF CurrentNinja.ScreenY <= GAME_ACTION_HEIGHT	/ 2
2  7011	00000912  81 3D	000002F1r     +		 cmp	 CurrentNinja .	ScreenY,GAME_ACTION_HEIGHT/2
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 124
JANE.ASM



   7012		  00000090
2  7013	0000091C  77 27				 ja	 @C0073
1  7014	0000091E  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	01h
   7015		  00000001
1  7016	00000928  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7017		  00000050
1  7018	00000932  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 30
   7019		  00000102
1  7020	0000093C  C6 05	000002FBr 00				 mov	 CurrentNinja.Facing, NINJA_FACING_NORTH
1  7021							 .ELSE
2  7022	00000943  EB 25				 jmp	 @C0072
2  7023	00000945			 @C0073:
1  7024	00000945  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	05h
   7025		  00000005
1  7026	0000094F  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7027		  00000050
1  7028	00000959  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, NINJA_FRAME_HEIGHT
   7029		  00000064
1  7030	00000963  C6 05	000002FBr 01				 mov	 CurrentNinja.Facing, NINJA_FACING_EAST
1  7031							 .ENDIF
2  7032	0000096A			 @C0072:
1  7033						 .ELSEIF CurrentNinja.ScreenID == 1
2  7034	0000096A  E9 0000039E			 jmp	 @C0070
2  7035	0000096F			 @C0071:
2  7036	0000096F  83 3D	000002F5r 01		 cmp	 CurrentNinja .	ScreenID,1
2  7037	00000976  0F 85	00000090		 jnz	 @C0074
1  7038							 .IF CurrentNinja.ScreenX >= GAME_ACTION_WIDTH / 2
2  7039	0000097C  81 3D	000002EDr     +		 cmp	 CurrentNinja .	ScreenX,GAME_ACTION_WIDTH/2
   7040		  000000F0
2  7041	00000986  72 27				 jb	 @C0076
1  7042								 ; Top Right
1  7043	00000988  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	02h
   7044		  00000002
1  7045	00000992  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7046		  00000050
1  7047	0000099C  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 50
   7048		  000000EE
1  7049	000009A6  C6 05	000002FBr 00				 mov	 CurrentNinja.Facing, NINJA_FACING_NORTH
1  7050							 .ELSEIF CurrentNinja.ScreenY >= GAME_ACTION_HEIGHT / 2
2  7051	000009AD  EB 58				 jmp	 @C0075
2  7052	000009AF			 @C0076:
2  7053	000009AF  81 3D	000002F1r     +		 cmp	 CurrentNinja .	ScreenY,GAME_ACTION_HEIGHT/2
   7054		  00000090
2  7055	000009B9  72 27				 jb	 @C0077
1  7056	000009BB  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	00h
   7057		  00000000
1  7058	000009C5  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
   7059		  000001E0
1  7060	000009CF  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, NINJA_FRAME_HEIGHT
   7061		  00000064
1  7062	000009D9  C6 05	000002FBr 02				 mov	 CurrentNinja.Facing, NINJA_FACING_SOUTH
1  7063							 .ELSE
2  7064	000009E0  EB 25				 jmp	 @C0075
2  7065	000009E2			 @C0077:
1  7066								 ; Top Left
1  7067	000009E2  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	03h
   7068		  00000003
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 125
JANE.ASM



1  7069	000009EC  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
   7070		  000001E0
1  7071	000009F6  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 20
   7072		  0000010C
1  7073	00000A00  C6 05	000002FBr 03				 mov	 CurrentNinja.Facing, NINJA_FACING_WEST
1  7074							 .ENDIF
2  7075	00000A07			 @C0075:
1  7076						 .ELSEIF CurrentNinja.ScreenID == 2
2  7077	00000A07  E9 00000301			 jmp	 @C0070
2  7078	00000A0C			 @C0074:
2  7079	00000A0C  83 3D	000002F5r 02		 cmp	 CurrentNinja .	ScreenID,2
2  7080	00000A13  75 5D				 jnz	 @C0078
1  7081							 .IF CurrentNinja.ScreenX >= GAME_ACTION_WIDTH / 2
2  7082	00000A15  81 3D	000002EDr     +		 cmp	 CurrentNinja .	ScreenX,GAME_ACTION_WIDTH/2
   7083		  000000F0
2  7084	00000A1F  72 27				 jb	 @C0080
1  7085	00000A21  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	04h
   7086		  00000004
1  7087	00000A2B  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7088		  00000050
1  7089	00000A35  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 30
   7090		  00000102
1  7091	00000A3F  C6 05	000002FBr 00				 mov	 CurrentNinja.Facing, NINJA_FACING_NORTH
1  7092							 .ELSE
2  7093	00000A46  EB 25				 jmp	 @C0079
2  7094	00000A48			 @C0080:
1  7095	00000A48  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	01h
   7096		  00000001
1  7097	00000A52  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH - 10
   7098		  000001D6
1  7099	00000A5C  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, (GAME_ACTION_HEIGHT / 2)	+ 20
   7100		  000000A4
1  7101	00000A66  C6 05	000002FBr 02				 mov	 CurrentNinja.Facing, NINJA_FACING_SOUTH
1  7102							 .ENDIF
2  7103	00000A6D			 @C0079:
1  7104						 .ELSEIF CurrentNinja.ScreenID == 3
2  7105	00000A6D  E9 0000029B			 jmp	 @C0070
2  7106	00000A72			 @C0078:
2  7107	00000A72  83 3D	000002F5r 03		 cmp	 CurrentNinja .	ScreenID,3
2  7108	00000A79  75 5D				 jnz	 @C0081
1  7109							 .IF CurrentNinja.ScreenY <= GAME_ACTION_HEIGHT	/ 2
2  7110	00000A7B  81 3D	000002F1r     +		 cmp	 CurrentNinja .	ScreenY,GAME_ACTION_HEIGHT/2
   7111		  00000090
2  7112	00000A85  77 27				 ja	 @C0083
1  7113	00000A87  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	04h
   7114		  00000004
1  7115	00000A91  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7116		  00000050
1  7117	00000A9B  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, NINJA_FRAME_HEIGHT
   7118		  00000064
1  7119	00000AA5  C6 05	000002FBr 01				 mov	 CurrentNinja.Facing, NINJA_FACING_EAST
1  7120							 .ELSE
2  7121	00000AAC  EB 25				 jmp	 @C0082
2  7122	00000AAE			 @C0083:
1  7123	00000AAE  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	01h
   7124		  00000001
1  7125	00000AB8  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 126
JANE.ASM



   7126		  00000050
1  7127	00000AC2  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, NINJA_FRAME_HEIGHT - 20
   7128		  00000050
1  7129	00000ACC  C6 05	000002FBr 01				 mov	 CurrentNinja.Facing, NINJA_FACING_EAST
1  7130							 .ENDIF
2  7131	00000AD3			 @C0082:
1  7132						 .ELSEIF CurrentNinja.ScreenID == 4
2  7133	00000AD3  E9 00000235			 jmp	 @C0070
2  7134	00000AD8			 @C0081:
2  7135	00000AD8  83 3D	000002F5r 04		 cmp	 CurrentNinja .	ScreenID,4
2  7136	00000ADF  75 5D				 jnz	 @C0084
1  7137							 .IF CurrentNinja.ScreenY <= GAME_ACTION_HEIGHT	/ 2
2  7138	00000AE1  81 3D	000002F1r     +		 cmp	 CurrentNinja .	ScreenY,GAME_ACTION_HEIGHT/2
   7139		  00000090
2  7140	00000AEB  77 27				 ja	 @C0086
1  7141	00000AED  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	03h
   7142		  00000003
1  7143	00000AF7  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
   7144		  000001E0
1  7145	00000B01  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, NINJA_FRAME_HEIGHT
   7146		  00000064
1  7147	00000B0B  C6 05	000002FBr 02				 mov	 CurrentNinja.Facing, NINJA_FACING_SOUTH
1  7148							 .ELSE
2  7149	00000B12  EB 25				 jmp	 @C0085
2  7150	00000B14			 @C0086:
1  7151	00000B14  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	02h
   7152		  00000002
1  7153	00000B1E  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
   7154		  000001E0
1  7155	00000B28  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, (GAME_ACTION_HEIGHT / 2)	- 20
   7156		  0000007C
1  7157	00000B32  C6 05	000002FBr 02				 mov	 CurrentNinja.Facing, NINJA_FACING_SOUTH
1  7158							 .ENDIF
2  7159	00000B39			 @C0085:
1  7160
1  7161						 .ELSEIF CurrentNinja.ScreenID == 5
2  7162	00000B39  E9 000001CF			 jmp	 @C0070
2  7163	00000B3E			 @C0084:
2  7164	00000B3E  83 3D	000002F5r 05		 cmp	 CurrentNinja .	ScreenID,5
2  7165	00000B45  75 5D				 jnz	 @C0087
1  7166							 .IF CurrentNinja.ScreenY <= GAME_ACTION_HEIGHT	/ 2
2  7167	00000B47  81 3D	000002F1r     +		 cmp	 CurrentNinja .	ScreenY,GAME_ACTION_HEIGHT/2
   7168		  00000090
2  7169	00000B51  77 27				 ja	 @C0089
1  7170	00000B53  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	00h
   7171		  00000000
1  7172	00000B5D  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
   7173		  000001E0
1  7174	00000B67  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 20
   7175		  0000010C
1  7176	00000B71  C6 05	000002FBr 03				 mov	 CurrentNinja.Facing, NINJA_FACING_WEST
1  7177							 .ELSE
2  7178	00000B78  EB 25				 jmp	 @C0088
2  7179	00000B7A			 @C0089:
1  7180	00000B7A  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	06h
   7181		  00000006
1  7182	00000B84  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 127
JANE.ASM



   7183		  000001E0
1  7184	00000B8E  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, (GAME_ACTION_HEIGHT / 2)	+ 20
   7185		  000000A4
1  7186	00000B98  C6 05	000002FBr 02				 mov	 CurrentNinja.Facing, NINJA_FACING_SOUTH
1  7187							 .ENDIF
2  7188	00000B9F			 @C0088:
1  7189						 .ELSEIF CurrentNinja.ScreenID == 6
2  7190	00000B9F  E9 00000169			 jmp	 @C0070
2  7191	00000BA4			 @C0087:
2  7192	00000BA4  83 3D	000002F5r 06		 cmp	 CurrentNinja .	ScreenID,6
2  7193	00000BAB  75 5D				 jnz	 @C0090
1  7194							 .IF CurrentNinja.ScreenX >= GAME_ACTION_WIDTH / 2
2  7195	00000BAD  81 3D	000002EDr     +		 cmp	 CurrentNinja .	ScreenX,GAME_ACTION_WIDTH/2
   7196		  000000F0
2  7197	00000BB7  72 27				 jb	 @C0092
1  7198	00000BB9  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	05h
   7199		  00000005
1  7200	00000BC3  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7201		  00000050
1  7202	00000BCD  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 30
   7203		  00000102
1  7204	00000BD7  C6 05	000002FBr 00				 mov	 CurrentNinja.Facing, NINJA_FACING_NORTH
1  7205							 .ELSE
2  7206	00000BDE  EB 25				 jmp	 @C0091
2  7207	00000BE0			 @C0092:
1  7208	00000BE0  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	07h
   7209		  00000007
1  7210	00000BEA  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
   7211		  000001E0
1  7212	00000BF4  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, NINJA_FRAME_HEIGHT
   7213		  00000064
1  7214	00000BFE  C6 05	000002FBr 02				 mov	 CurrentNinja.Facing, NINJA_FACING_SOUTH
1  7215							 .ENDIF
2  7216	00000C05			 @C0091:
1  7217						 .ELSEIF CurrentNinja.ScreenID == 7
2  7218	00000C05  E9 00000103			 jmp	 @C0070
2  7219	00000C0A			 @C0090:
2  7220	00000C0A  83 3D	000002F5r 07		 cmp	 CurrentNinja .	ScreenID,7
2  7221	00000C11  75 5D				 jnz	 @C0093
1  7222							 .IF CurrentNinja.ScreenY <= GAME_ACTION_HEIGHT	/ 2
2  7223	00000C13  81 3D	000002F1r     +		 cmp	 CurrentNinja .	ScreenY,GAME_ACTION_HEIGHT/2
   7224		  00000090
2  7225	00000C1D  77 27				 ja	 @C0095
1  7226	00000C1F  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	06h
   7227		  00000006
1  7228	00000C29  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7229		  00000050
1  7230	00000C33  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 30
   7231		  00000102
1  7232	00000C3D  C6 05	000002FBr 00				 mov	 CurrentNinja.Facing, NINJA_FACING_NORTH
1  7233							 .ELSE
2  7234	00000C44  EB 25				 jmp	 @C0094
2  7235	00000C46			 @C0095:
1  7236	00000C46  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	08h
   7237		  00000008
1  7238	00000C50  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7239		  00000050
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 128
JANE.ASM



1  7240	00000C5A  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, NINJA_FRAME_HEIGHT / 2
   7241		  00000032
1  7242	00000C64  C6 05	000002FBr 01				 mov	 CurrentNinja.Facing, NINJA_FACING_EAST
1  7243							 .ENDIF
2  7244	00000C6B			 @C0094:
1  7245						 .ELSEIF CurrentNinja.ScreenID == 8
2  7246	00000C6B  E9 0000009D			 jmp	 @C0070
2  7247	00000C70			 @C0093:
2  7248	00000C70  83 3D	000002F5r 08		 cmp	 CurrentNinja .	ScreenID,8
2  7249	00000C77  75 5A				 jnz	 @C0096
1  7250							 .IF CurrentNinja.ScreenX <= GAME_ACTION_WIDTH / 2
2  7251	00000C79  81 3D	000002EDr     +		 cmp	 CurrentNinja .	ScreenX,GAME_ACTION_WIDTH/2
   7252		  000000F0
2  7253	00000C83  77 27				 ja	 @C0098
1  7254	00000C85  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	07h
   7255		  00000007
1  7256	00000C8F  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
   7257		  000001E0
1  7258	00000C99  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 20
   7259		  0000010C
1  7260	00000CA3  C6 05	000002FBr 03				 mov	 CurrentNinja.Facing, NINJA_FACING_WEST
1  7261							 .ELSE
2  7262	00000CAA  EB 25				 jmp	 @C0097
2  7263	00000CAC			 @C0098:
1  7264	00000CAC  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	09h
   7265		  00000009
1  7266	00000CB6  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, NINJA_FRAME_WIDTH
   7267		  00000050
1  7268	00000CC0  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, NINJA_FRAME_HEIGHT
   7269		  00000064
1  7270	00000CCA  C6 05	000002FBr 01				 mov	 CurrentNinja.Facing, NINJA_FACING_EAST
1  7271							 .ENDIF
2  7272	00000CD1			 @C0097:
1  7273						 .ELSEIF CurrentNinja.ScreenID == 9
2  7274	00000CD1  EB 3A				 jmp	 @C0070
2  7275	00000CD3			 @C0096:
2  7276	00000CD3  83 3D	000002F5r 09		 cmp	 CurrentNinja .	ScreenID,9
2  7277	00000CDA  75 31				 jnz	 @C0099
1  7278							 .IF CurrentNinja.ScreenX <= GAME_ACTION_WIDTH / 2
2  7279	00000CDC  81 3D	000002EDr     +		 cmp	 CurrentNinja .	ScreenX,GAME_ACTION_WIDTH/2
   7280		  000000F0
2  7281	00000CE6  77 25				 ja	 @C0101
1  7282	00000CE8  C7 05	000002F5r     +				 mov	 CurrentNinja.ScreenID,	08h
   7283		  00000008
1  7284	00000CF2  C7 05	000002EDr     +				 mov	 CurrentNinja.ScreenX, GAME_ACTION_WIDTH
   7285		  000001E0
1  7286	00000CFC  C7 05	000002F1r     +				 mov	 CurrentNinja.ScreenY, GAME_ACTION_HEIGHT - 20
   7287		  0000010C
1  7288	00000D06  C6 05	000002FBr 03				 mov	 CurrentNinja.Facing, NINJA_FACING_WEST
1  7289							 .ENDIF
2  7290	00000D0D			 @C0101:
2  7291	00000D0D			 @C0100:
1  7292						 .ENDIF
2  7293	00000D0D			 @C0099:
2  7294	00000D0D			 @C0070:
1  7295	00000D0D  E8 00000202			 call	 CloneState
1  7296
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 129
JANE.ASM



1  7297	00000D12  E8 FFFFFBB3			 call	 OnEnterRoom
2  7298	00000D17  C3				 RET	 00000h
1  7299	00000D18			 OnExitRoom	 endp
1  7300
1  7301	00000D18			 OnDie		 proc	 STDCALL
1  7302						 ;;; Process Room Exit (and which room to move to)
1  7303	00000D18  C7 05	00000BA1r     +		 mov	 rectTransition.rc_bottom, NINJA_FRAME_HEIGHT +	10h
   7304		  00000074
1  7305
1  7306	00000D22			 ondie_sleepdraw:
1  7307	00000D22  E8 FFFFF668			 call	 OnPaint
1  7308	00000D27  6A 01				 push	 1h
1  7309	00000D29  E8 00000000e			 call	 Sleep
1  7310	00000D2E  81 3D	00000BA1r     +		 cmp	 rectTransition.rc_bottom, GAME_ACTION_HEIGHT +	NINJA_FRAME_HEIGHT
   7311		  00000184
1  7312	00000D38  75 E8				 jne	 ondie_sleepdraw
1  7313
1  7314	00000D3A  C6 05	00000311r 09		 mov	 ResetToNinja.State, NINJA_STATE_DEAD
1  7315
1  7316	00000D41  BE 00000305r			 mov	 esi, offset ResetToNinja
1  7317	00000D46  BF 000002EDr			 mov	 edi, offset CurrentNinja
1  7318	00000D4B  B9 00000018			 mov	 ecx, Ninja_Len
1  7319	00000D50  F3> A4			 rep	 movsb
1  7320	00000D52  C6 05	000002FAr 00		 mov	 CurrentNinja.Control, 00h
1  7321	00000D59  66| C7 05 000002FCr +		 mov	 CurrentNinja.Health, GAME_MAX_HEALTH
   7322		  00EE
1  7323
1  7324	00000D62  6A 00				 push	 NINJA_STATE_WALKING
1  7325	00000D64  E8 00000114			 call	 SetNinjaState
1  7326
1  7327						 ;;; Process Room Exit (and which room to move to)
1  7328	00000D69  C7 05	00000B99r     +		 mov	 rectTransition.rc_top,	NINJA_FRAME_HEIGHT + 10h
   7329		  00000074
1  7330
1  7331	00000D73			 ondie_sleepdraw2:
1  7332	00000D73  E8 FFFFF617			 call	 OnPaint
1  7333	00000D78  6A 01				 push	 1h
1  7334	00000D7A  E8 00000000e			 call	 Sleep
1  7335	00000D7F  81 3D	00000B99r     +		 cmp	 rectTransition.rc_top,	GAME_ACTION_HEIGHT + NINJA_FRAME_HEIGHT
   7336		  00000184
1  7337	00000D89  75 E8				 jne	 ondie_sleepdraw2
1  7338
2  7339	00000D8B  C3				 RET	 00000h
1  7340	00000D8C			 OnDie		 endp
1  7341
1  7342	00000D8C			 OnTakeDamage	 proc	 STDCALL, Amount:DWORD
2  7343	00000D8C  C8 0000 00			 ENTERD	 00000h,0
2  7344	00000D90  8B 45	08			 mov	 eax, Amount
1  7345	00000D93  0F B7	1D 000002FCr		 movzx	 ebx, CurrentNinja.Health
1  7346
1  7347						 .IF eax >= ebx
2  7348	00000D9A  3B C3				 cmp	 eax,ebx
2  7349	00000D9C  72 12				 jb	 @C0103
1  7350	00000D9E  66| C7 05 000002FCr +			 mov	 CurrentNinja.Health, 00h
   7351		  0000
1  7352	00000DA7  6A 08					 push	 NINJA_STATE_DYING
1  7353	00000DA9  E8 000000CF				 call	 SetNinjaState
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 130
JANE.ASM



1  7354						 .ELSE
2  7355	00000DAE  EB 10				 jmp	 @C0102
2  7356	00000DB0			 @C0103:
1  7357	00000DB0  2B D8					 sub	 ebx, eax
1  7358	00000DB2  66| 89 1D 000002FCr			 mov	 CurrentNinja.Health, bx
1  7359	00000DB9  6A 07					 push	 NINJA_STATE_HURT
1  7360	00000DBB  E8 000000BD				 call	 SetNinjaState
1  7361						 .ENDIF
2  7362	00000DC0			 @C0102:
2  7363	00000DC0  C9				 LEAVED
2  7364	00000DC1  C2 0004			 RET	 00004h
1  7365	00000DC4			 OnTakeDamage	 endp
   7366
   7367					 INCLUDE Resource.inc
1  7368	00000DC4				 .data
1  7369
1  7370	00000BC8  55 49	00		 res_UserInterface	 db	 'UI',0
1  7371
1  7372	00000BCB			 res_Skins:
1  7373	00000BCB  4E 49	4E 4A 41 5F 45+	 res_NinjaEmpty	 db	 'NINJA_EMPTY',0
   7374		  4D 50	54 59 00
1  7375	00000BD7  4E 49	4E 4A 41 5F 53+	 res_NinjaSword	 db	 'NINJA_SWORD',0
   7376		  57 4F	52 44 00
1  7377	00000BE3  45 4E	45 4D 59 5F 45+	 res_EnemyEmpty	 db	 'ENEMY_EMPTY',0
   7378		  4D 50	54 59 00
1  7379	00000BEF  45 4E	45 4D 59 5F 53+	 res_EnemySword	 db	 'ENEMY_SWORD',0
   7380		  57 4F	52 44 00
1  7381	00000BFB  00					 db	 00h
1  7382
1  7383	00000BFC			 res_Objects:
1  7384	00000BFC  53 43	45 4E 45 52 59+	 res_objBushL	 db	 'SCENERY_BUSH_L',0
   7385		  5F 42	55 53 48 5F 4C+
   7386		  00
1  7387	00000C0B  53 43	45 4E 45 52 59+	 res_objBushS	 db	 'SCENERY_BUSH_S',0
   7388		  5F 42	55 53 48 5F 53+
   7389		  00
1  7390	00000C1A  53 43	45 4E 45 52 59+	 res_objPost	 db	 'SCENERY_POST',0
   7391		  5F 50	4F 53 54 00
1  7392	00000C27  53 43	45 4E 45 52 59+	 res_objRockH	 db	 'SCENERY_ROCK_H',0
   7393		  5F 52	4F 43 4B 5F 48+
   7394		  00
1  7395	00000C36  53 43	45 4E 45 52 59+	 res_objRockL	 db	 'SCENERY_ROCK_L',0
   7396		  5F 52	4F 43 4B 5F 4C+
   7397		  00
1  7398	00000C45  53 43	45 4E 45 52 59+	 res_objRockM	 db	 'SCENERY_ROCK_M',0
   7399		  5F 52	4F 43 4B 5F 4D+
   7400		  00
1  7401	00000C54  53 43	45 4E 45 52 59+	 res_objRockS	 db	 'SCENERY_ROCK_S',0
   7402		  5F 52	4F 43 4B 5F 53+
   7403		  00
1  7404	00000C63  53 43	45 4E 45 52 59+	 res_objRockT	 db	 'SCENERY_ROCK_T',0
   7405		  5F 52	4F 43 4B 5F 54+
   7406		  00
1  7407	00000C72  53 43	45 4E 45 52 59+	 res_objTreeB	 db	 'SCENERY_TREE_B',0
   7408		  5F 54	52 45 45 5F 42+
   7409		  00
1  7410	00000C81  53 43	45 4E 45 52 59+	 res_objTreeH	 db	 'SCENERY_TREE_H',0
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 131
JANE.ASM



   7411		  5F 54	52 45 45 5F 48+
   7412		  00
1  7413	00000C90  53 43	45 4E 45 52 59+	 res_objTreeL	 db	 'SCENERY_TREE_L',0
   7414		  5F 54	52 45 45 5F 4C+
   7415		  00
1  7416	00000C9F  53 43	45 4E 45 52 59+	 res_objTreeM	 db	 'SCENERY_TREE_M',0
   7417		  5F 54	52 45 45 5F 4D+
   7418		  00
1  7419	00000CAE  53 43	45 4E 45 52 59+	 res_objTreeS	 db	 'SCENERY_TREE_S',0
   7420		  5F 54	52 45 45 5F 53+
   7421		  00
1  7422	00000CBD  50 49	43 4B 55 50 5F+	 res_objSword	 db	 'PICKUP_SWORD',0
   7423		  53 57	4F 52 44 00
1  7424	00000CCA  00					 db	 00h
1  7425
1  7426	00000CCB			 res_MapScreens:
1  7427	00000CCB  4D 41	50 5F 4C 31 00	 res_mapL1	 db	 'MAP_L1',0
1  7428	00000CD2  4D 41	50 5F 4C 32 00	 res_mapL2	 db	 'MAP_L2',0
1  7429	00000CD9  4D 41	50 5F 53 54 52+	 res_mapST	 db	 'MAP_STR',0
   7430		  00
1  7431	00000CE1  4D 41	50 5F 54 31 00	 res_mapT1	 db	 'MAP_T1',0
1  7432	00000CE8  4D 41	50 5F 57 41 54+	 res_mapW1	 db	 'MAP_WATER1',0
   7433		  45 52	31 00
1  7434	00000CF3  4D 41	50 5F 57 41 54+	 res_mapW2	 db	 'MAP_WATER2',0
   7435		  45 52	32 00
1  7436	00000CFE  4D 41	50 5F 44 55 45+	 res_mapD1	 db	 'MAP_DUEL',0
   7437		  4C 00
1  7438	00000D07  4D 41	50 5F 43 4F 4D+	 res_mapC	 db	 'MAP_COMPLETE',0
   7439		  50 4C	45 54 45 00
1  7440	00000D14  00					 db	 00h
1  7441
1  7442	00000D15			 res_Inventory:
1  7443	00000D15  49 4E	56 5F 4E 4F 4E+	 res_invNone	 db	 'INV_NONE',0
   7444		  45 00
1  7445	00000D1E  49 4E	56 5F 53 57 4F+	 res_invSword	 db	 'INV_SWORD',0
   7446		  52 44	00
1  7447	00000D28  49 4E	56 5F 4B 45 59+	 res_invKeySlv	 db	 'INV_KEYSLV',0
   7448		  53 4C	56 00
1  7449	00000D33  00					 db	 00h
1  7450
1  7451	00000D34				 .data?
1  7452	000000D4  ????????		 bmp_UserInterface	 dd	 ?
1  7453
1  7454	000000D8			 bmp_Skins:
1  7455	000000D8  ????????		 bmp_NinjaEmpty	 dd	 ?
1  7456	000000DC  ????????		 bmp_NinjaSword	 dd	 ?
1  7457	000000E0  ????????		 bmp_EnemyEmpty	 dd	 ?
1  7458	000000E4  ????????		 bmp_EnemySword	 dd	 ?
1  7459
1  7460	000000E8			 bmp_Objects:
1  7461	000000E8  ????????		 bmp_objBushL		 dd	 ?
1  7462	000000EC  ????????		 bmp_objBushS		 dd	 ?
1  7463	000000F0  ????????		 bmp_objPost		 dd	 ?
1  7464	000000F4  ????????		 bmp_objRockH		 dd	 ?
1  7465	000000F8  ????????		 bmp_objRockL		 dd	 ?
1  7466	000000FC  ????????		 bmp_objRockM		 dd	 ?
1  7467	00000100  ????????		 bmp_objRockS		 dd	 ?
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 132
JANE.ASM



1  7468	00000104  ????????		 bmp_objRockT		 dd	 ?
1  7469					 ;bmp_objRockW		 dd	 ?
1  7470	00000108  ????????		 bmp_objTreeB		 dd	 ?
1  7471	0000010C  ????????		 bmp_objTreeH		 dd	 ?
1  7472	00000110  ????????		 bmp_objTreeL		 dd	 ?
1  7473	00000114  ????????		 bmp_objTreeM		 dd	 ?
1  7474	00000118  ????????		 bmp_objTreeS		 dd	 ?
1  7475	0000011C  ????????		 bmp_objSword		 dd	 ?
1  7476
1  7477	00000120			 bmp_MapScreens:
1  7478	00000120  ????????		 bmp_mapL1		 dd	 ?
1  7479	00000124  ????????		 bmp_mapL2		 dd	 ?
1  7480	00000128  ????????		 bmp_mapST		 dd	 ?
1  7481	0000012C  ????????		 bmp_mapT1		 dd	 ?
1  7482	00000130  ????????		 bmp_mapW1		 dd	 ?
1  7483	00000134  ????????		 bmp_mapW2		 dd	 ?
1  7484	00000138  ????????		 bmp_mapD1		 dd	 ?
1  7485	0000013C  ????????		 bmp_mapC		 dd	 ?
1  7486
1  7487	00000140			 bmp_Inventory:
1  7488	00000140  ????????		 bmp_invNone		 dd	 ?
1  7489	00000144  ????????		 bmp_invSword		 dd	 ?
1  7490	00000148  ????????		 bmp_invKeySlv		 dd	 ?
1  7491
1  7492	0000014C			 height_Objects:
1  7493	0000014C  ????????		 height_objBushL dd	 ?
1  7494	00000150  ????????		 height_objBushS dd	 ?
1  7495	00000154  ????????		 height_objPost	 dd	 ?
1  7496	00000158  ????????		 height_objRockH dd	 ?
1  7497	0000015C  ????????		 height_objRockL dd	 ?
1  7498	00000160  ????????		 height_objRockM dd	 ?
1  7499	00000164  ????????		 height_objRockS dd	 ?
1  7500	00000168  ????????		 height_objRockT dd	 ?
1  7501					 ;height_objRockW	 dd	 ?
1  7502	0000016C  ????????		 height_objTreeB dd	 ?
1  7503	00000170  ????????		 height_objTreeH dd	 ?
1  7504	00000174  ????????		 height_objTreeL dd	 ?
1  7505	00000178  ????????		 height_objTreeM dd	 ?
1  7506	0000017C  ????????		 height_objTreeS dd	 ?
1  7507	00000180  ????????		 height_objSword dd	 ?
1  7508
1  7509
1  7510	00000184				 .code
1  7511
1  7512	00000DC4			 LoadResources		 proc	 STDCALL
1  7513	00000DC4  6A 00				 push	 0
1  7514	00000DC6  6A 00				 push	 0
1  7515	00000DC8  6A 00				 push	 0
1  7516	00000DCA  6A 00				 push	 IMAGE_BITMAP
1  7517	00000DCC  68 00000BC8r			 push	 offset	res_UserInterface
1  7518	00000DD1  FF 35	00000070r		 push	 engineInstance
1  7519	00000DD7  E8 00000000e			 call	 LoadImage
1  7520	00000DDC  A3 000000D4r			 mov	 bmp_UserInterface, eax
1  7521
1  7522	00000DE1  6A 00				 push	 0
1  7523	00000DE3  68 000000D8r			 push	 offset	bmp_Skins
1  7524	00000DE8  68 00000BCBr			 push	 offset	res_Skins
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 133
JANE.ASM



1  7525	00000DED  E8 00000037			 call	 ResourceLockAndLoad
1  7526
1  7527	00000DF2  68 0000014Cr			 push	 offset	height_Objects
1  7528	00000DF7  68 000000E8r			 push	 offset	bmp_Objects
1  7529	00000DFC  68 00000BFCr			 push	 offset	res_Objects
1  7530	00000E01  E8 00000023			 call	 ResourceLockAndLoad
1  7531
1  7532	00000E06  6A 00				 push	 0
1  7533	00000E08  68 00000120r			 push	 offset	bmp_MapScreens
1  7534	00000E0D  68 00000CCBr			 push	 offset	res_MapScreens
1  7535	00000E12  E8 00000012			 call	 ResourceLockAndLoad
1  7536
1  7537	00000E17  6A 00				 push	 0
1  7538	00000E19  68 00000140r			 push	 offset	bmp_Inventory
1  7539	00000E1E  68 00000D15r			 push	 offset	res_Inventory
1  7540	00000E23  E8 00000001			 call	 ResourceLockAndLoad
1  7541
2  7542	00000E28  C3				 RET	 00000h
1  7543	00000E29			 LoadResources		 endp
1  7544
1  7545	00000E29			 ResourceLockAndLoad	 proc	 STDCALL, res_Start:DWORD, bmp_Start:DWORD,		    +
   7546					 height_Start:DWORD
2  7547	00000E29  C8 0000 00			 ENTERD	 00000h,0
2  7548	00000E2D  8B 75	08			 mov	 esi, res_Start
1  7549	00000E30  8B 7D	0C			 mov	 edi, bmp_Start
1  7550	00000E33  8B 55	10			 mov	 edx, height_Start
1  7551
1  7552	00000E36			 lockandload_loop:
1  7553	00000E36  80 3E	00			 cmp	 byte ptr [esi], 00h
1  7554	00000E39  74 3E				 je	 lockandload_finish
1  7555
1  7556	00000E3B  52				 push	 edx
1  7557
1  7558	00000E3C  6A 00				 push	 0
1  7559	00000E3E  6A 00				 push	 0
1  7560	00000E40  6A 00				 push	 0
1  7561	00000E42  6A 00				 push	 IMAGE_BITMAP
1  7562	00000E44  56				 push	 esi
1  7563	00000E45  FF 35	00000070r		 push	 engineInstance
1  7564	00000E4B  E8 00000000e			 call	 LoadImage
1  7565	00000E50  AB				 stosd
1  7566
1  7567	00000E51  5A				 pop	 edx
1  7568
1  7569						 .IF edx != 0
2  7570	00000E52  83 FA	00			 cmp	 edx,0
2  7571	00000E55  74 19				 jz	 @C0105
1  7572	00000E57  52					 push	 edx
1  7573
1  7574	00000E58  68 0000001Cr				 push	 offset	bitmapDimensions
1  7575	00000E5D  6A 18					 push	 BITMAP_
1  7576	00000E5F  50					 push	 eax
1  7577	00000E60  E8 00000000e				 call	 GetObject
1  7578
1  7579	00000E65  5A					 pop	 edx
1  7580	00000E66  A1 00000024r				 mov	 eax, bitmapDimensions.bm_bmHeight
1  7581	00000E6B  89 02					 mov	 [edx],	eax
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 134
JANE.ASM



1  7582	00000E6D  83 C2	04				 add	 edx, 4h
1  7583						 .ENDIF
2  7584	00000E70			 @C0105:
2  7585	00000E70			 @C0104:
1  7586
1  7587	00000E70			 lockandload_nextchk:
1  7588	00000E70  46				 inc	 esi
1  7589	00000E71  80 3E	00			 cmp	 byte ptr [esi], 00h
1  7590	00000E74  75 FA				 jne	 lockandload_nextchk
1  7591	00000E76  46				 inc	 esi
1  7592
1  7593	00000E77  EB BD				 jmp	 lockandload_loop
1  7594
1  7595	00000E79			 lockandload_finish:
2  7596	00000E79  C9				 LEAVED
2  7597	00000E7A  C2 000C			 RET	 0000Ch
1  7598	00000E7D			 ResourceLockAndLoad	 endp
   7599
   7600					 INCLUDE StateControl.inc
1  7601
1  7602	00000E7D			 SetNinjaState		 proc	 STDCALL, NewState:DWORD
2  7603	00000E7D  C8 0000 00			 ENTERD	 00000h,0
2  7604	00000E81  8B 45	08			 mov	 eax, NewState
1  7605
1  7606						 .IF al	!= CurrentNinja.State
2  7607	00000E84  3A 05	000002F9r		 cmp	 al,CurrentNinja . State
2  7608	00000E8A  0F 84	00000080		 jz	 @C0107
1  7609
1  7610							 .IF eax == NINJA_STATE_DROWNING
2  7611	00000E90  83 F8	0A			 cmp	 eax,NINJA_STATE_DROWNING
2  7612	00000E93  75 29				 jnz	 @C0109
1  7613	00000E95  50						 push	 eax
1  7614	00000E96  E8 0000048E					 call	 CalcNinjaAnimOffset
1  7615	00000E9B  E8 000004BD					 call	 CalcNinjaFrame
1  7616	00000EA0  0F B7	05 000002FFr				 movzx	 eax, CurrentNinja.Frame
1  7617	00000EA7  03 F0						 add	 esi, eax
1  7618	00000EA9  0F B6	06					 movzx	 eax, byte ptr [esi]				 ; eax ==   +
   7619					 frame number
1  7620	00000EAC  A3 0000003Er					 mov	 sinkingFrame, eax
1  7621	00000EB1  C7 05	0000003Ar     +				 mov	 sinkingFlags, 00h
   7622		  00000000
1  7623	00000EBB  58						 pop	 eax
1  7624							 .ELSEIF eax ==	NINJA_STATE_SINKING
2  7625	00000EBC  EB 2C				 jmp	 @C0108
2  7626	00000EBE			 @C0109:
2  7627	00000EBE  83 F8	0B			 cmp	 eax,NINJA_STATE_SINKING
2  7628	00000EC1  75 27				 jnz	 @C0110
1  7629	00000EC3  50						 push	 eax
1  7630	00000EC4  E8 00000460					 call	 CalcNinjaAnimOffset
1  7631	00000EC9  E8 0000048F					 call	 CalcNinjaFrame
1  7632	00000ECE  0F B7	05 000002FFr				 movzx	 eax, CurrentNinja.Frame
1  7633	00000ED5  03 F0						 add	 esi, eax
1  7634	00000ED7  0F B6	06					 movzx	 eax, byte ptr [esi]				 ; eax ==   +
   7635					 frame number
1  7636	00000EDA  A3 0000003Er					 mov	 sinkingFrame, eax
1  7637	00000EDF  C7 05	0000003Ar     +				 mov	 sinkingFlags, 00h
   7638		  00000000
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 135
JANE.ASM



1  7639	00000EE9  58						 pop	 eax
1  7640							 .ENDIF
2  7641	00000EEA			 @C0110:
2  7642	00000EEA			 @C0108:
1  7643
1  7644	00000EEA  66| C7 05 000002FFr +			 mov	 CurrentNinja.Frame, 00h
   7645		  0000
1  7646	00000EF3  A2 000002F9r				 mov	 CurrentNinja.State, al
1  7647
1  7648							 .IF eax == NINJA_STATE_DEAD
2  7649	00000EF8  83 F8	09			 cmp	 eax,NINJA_STATE_DEAD
2  7650	00000EFB  75 07				 jnz	 @C0112
1  7651	00000EFD  E8 FFFFFE16					 call	 OnDie
1  7652							 .ELSEIF eax ==	NINJA_STATE_TRANSITION
2  7653	00000F02  EB 0C				 jmp	 @C0111
2  7654	00000F04			 @C0112:
2  7655	00000F04  3D 000000FF			 cmp	 eax,NINJA_STATE_TRANSITION
2  7656	00000F09  75 05				 jnz	 @C0113
1  7657	00000F0B  E8 FFFFF9D7					 call	 OnExitRoom
1  7658							 .ENDIF
2  7659	00000F10			 @C0113:
2  7660	00000F10			 @C0111:
1  7661						 .ENDIF
2  7662	00000F10			 @C0107:
2  7663	00000F10			 @C0106:
1  7664
2  7665	00000F10  C9				 LEAVED
2  7666	00000F11  C2 0004			 RET	 00004h
1  7667	00000F14			 SetNinjaState		 endp
1  7668
1  7669	00000F14			 CloneState		 proc	 STDCALL
1  7670	00000F14  BE 000002EDr			 mov	 esi, offset CurrentNinja
1  7671	00000F19  BF 00000305r			 mov	 edi, offset ResetToNinja
1  7672	00000F1E  B9 00000018			 mov	 ecx, Ninja_Len
1  7673	00000F23  F3> A4			 rep	 movsb
1  7674	00000F25  C6 05	000002FAr 00		 mov	 CurrentNinja.Control, 00h
2  7675	00000F2C  C3				 RET	 00000h
1  7676	00000F2D			 CloneState		 endp
   7677
   7678					 INCLUDE Controller.inc
1  7679	00000F2D			 ControlHandler	 proc	 STDCALL, paramA:DWORD
1  7680
2  7681	00000F2D  C8 0000 00			 ENTERD	 00000h,0
2  7682	00000F31  8A 25	000002F9r		 mov	 ah, CurrentNinja.State
1  7683
1  7684						 .IF ah	== NINJA_STATE_DYING
2  7685	00000F37  80 FC	08			 cmp	 ah,NINJA_STATE_DYING
2  7686	00000F3A  75 1B				 jnz	 @C0115
1  7687	00000F3C  E8 000002A8				 call	 AnimationIncreaseFrame
1  7688							 .IF CurrentNinja.Frame	== 0
2  7689	00000F41  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7690		  00
2  7691	00000F49  75 07				 jnz	 @C0117
1  7692	00000F4B  6A 09						 push	 NINJA_STATE_DEAD
1  7693	00000F4D  E8 FFFFFF2B					 call	 SetNinjaState
1  7694							 .ENDIF
2  7695	00000F52			 @C0117:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 136
JANE.ASM



2  7696	00000F52			 @C0116:
1  7697
1  7698						 .ELSEIF ah == NINJA_STATE_DEAD
2  7699	00000F52  E9 0000028E			 jmp	 @C0114
2  7700	00000F57			 @C0115:
2  7701	00000F57  80 FC	09			 cmp	 ah,NINJA_STATE_DEAD
2  7702	00000F5A  75 05				 jnz	 @C0118
1  7703
1  7704						 .ELSEIF ah == NINJA_STATE_HURT
2  7705	00000F5C  E9 00000284			 jmp	 @C0114
2  7706	00000F61			 @C0118:
2  7707	00000F61  80 FC	07			 cmp	 ah,NINJA_STATE_HURT
2  7708	00000F64  75 1B				 jnz	 @C0119
1  7709	00000F66  E8 0000027E				 call	 AnimationIncreaseFrame
1  7710							 .IF CurrentNinja.Frame	== 0
2  7711	00000F6B  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7712		  00
2  7713	00000F73  75 07				 jnz	 @C0121
1  7714	00000F75  6A 01						 push	 NINJA_STATE_STANDING
1  7715	00000F77  E8 FFFFFF01					 call	 SetNinjaState
1  7716							 .ENDIF
2  7717	00000F7C			 @C0121:
2  7718	00000F7C			 @C0120:
1  7719
1  7720						 .ELSEIF ah == NINJA_STATE_JUMPING
2  7721	00000F7C  E9 00000264			 jmp	 @C0114
2  7722	00000F81			 @C0119:
2  7723	00000F81  80 FC	02			 cmp	 ah,NINJA_STATE_JUMPING
2  7724	00000F84  75 2F				 jnz	 @C0122
1  7725	00000F86  E8 0000025E				 call	 AnimationIncreaseFrame
1  7726
1  7727	00000F8B  0F B6	05 00000039r			 movzx	 eax, jumpingFlags
1  7728	00000F92  50					 push	 eax
1  7729	00000F93  E8 00000907				 call	 MoveNinja
1  7730
1  7731							 .IF CurrentNinja.Frame	== 0
2  7732	00000F98  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7733		  00
2  7734	00000FA0  75 0E				 jnz	 @C0124
1  7735	00000FA2  6A 00						 push	 NINJA_STATE_WALKING
1  7736	00000FA4  E8 FFFFFED4					 call	 SetNinjaState
1  7737	00000FA9  6A 00						 push	 0
1  7738	00000FAB  E8 000008EF					 call	 MoveNinja
1  7739							 .ENDIF
2  7740	00000FB0			 @C0124:
2  7741	00000FB0			 @C0123:
1  7742
1  7743						 .ELSEIF ah == NINJA_STATE_SWITCHING
2  7744	00000FB0  E9 00000230			 jmp	 @C0114
2  7745	00000FB5			 @C0122:
2  7746	00000FB5  80 FC	0D			 cmp	 ah,NINJA_STATE_SWITCHING
2  7747	00000FB8  75 1B				 jnz	 @C0125
1  7748	00000FBA  E8 0000022A				 call	 AnimationIncreaseFrame
1  7749							 .IF CurrentNinja.Frame	== 0
2  7750	00000FBF  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7751		  00
2  7752	00000FC7  75 07				 jnz	 @C0127
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 137
JANE.ASM



1  7753	00000FC9  6A 01						 push	 NINJA_STATE_STANDING
1  7754	00000FCB  E8 FFFFFEAD					 call	 SetNinjaState
1  7755							 .ENDIF
2  7756	00000FD0			 @C0127:
2  7757	00000FD0			 @C0126:
1  7758
1  7759						 .ELSEIF ah == NINJA_STATE_KICKING
2  7760	00000FD0  E9 00000210			 jmp	 @C0114
2  7761	00000FD5			 @C0125:
2  7762	00000FD5  80 FC	03			 cmp	 ah,NINJA_STATE_KICKING
2  7763	00000FD8  75 1B				 jnz	 @C0128
1  7764	00000FDA  E8 0000020A				 call	 AnimationIncreaseFrame
1  7765							 .IF CurrentNinja.Frame	== 0
2  7766	00000FDF  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7767		  00
2  7768	00000FE7  75 07				 jnz	 @C0130
1  7769	00000FE9  6A 01						 push	 NINJA_STATE_STANDING
1  7770	00000FEB  E8 FFFFFE8D					 call	 SetNinjaState
1  7771							 .ENDIF
2  7772	00000FF0			 @C0130:
2  7773	00000FF0			 @C0129:
1  7774
1  7775						 .ELSEIF ah == NINJA_STATE_PUNCHING
2  7776	00000FF0  E9 000001F0			 jmp	 @C0114
2  7777	00000FF5			 @C0128:
2  7778	00000FF5  80 FC	04			 cmp	 ah,NINJA_STATE_PUNCHING
2  7779	00000FF8  75 1B				 jnz	 @C0131
1  7780	00000FFA  E8 000001EA				 call	 AnimationIncreaseFrame
1  7781							 .IF CurrentNinja.Frame	== 0
2  7782	00000FFF  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7783		  00
2  7784	00001007  75 07				 jnz	 @C0133
1  7785	00001009  6A 01						 push	 NINJA_STATE_STANDING
1  7786	0000100B  E8 FFFFFE6D					 call	 SetNinjaState
1  7787							 .ENDIF
2  7788	00001010			 @C0133:
2  7789	00001010			 @C0132:
1  7790
1  7791						 .ELSEIF ah == NINJA_STATE_SLASHING
2  7792	00001010  E9 000001D0			 jmp	 @C0114
2  7793	00001015			 @C0131:
2  7794	00001015  80 FC	05			 cmp	 ah,NINJA_STATE_SLASHING
2  7795	00001018  75 1B				 jnz	 @C0134
1  7796	0000101A  E8 000001CA				 call	 AnimationIncreaseFrame
1  7797							 .IF CurrentNinja.Frame	== 0
2  7798	0000101F  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7799		  00
2  7800	00001027  75 07				 jnz	 @C0136
1  7801	00001029  6A 01						 push	 NINJA_STATE_STANDING
1  7802	0000102B  E8 FFFFFE4D					 call	 SetNinjaState
1  7803							 .ENDIF
2  7804	00001030			 @C0136:
2  7805	00001030			 @C0135:
1  7806
1  7807						 .ELSEIF ah == NINJA_STATE_JABING
2  7808	00001030  E9 000001B0			 jmp	 @C0114
2  7809	00001035			 @C0134:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 138
JANE.ASM



2  7810	00001035  80 FC	0C			 cmp	 ah,NINJA_STATE_JABING
2  7811	00001038  75 1B				 jnz	 @C0137
1  7812	0000103A  E8 000001AA				 call	 AnimationIncreaseFrame
1  7813							 .IF CurrentNinja.Frame	== 0
2  7814	0000103F  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7815		  00
2  7816	00001047  75 07				 jnz	 @C0139
1  7817	00001049  6A 01						 push	 NINJA_STATE_STANDING
1  7818	0000104B  E8 FFFFFE2D					 call	 SetNinjaState
1  7819							 .ENDIF
2  7820	00001050			 @C0139:
2  7821	00001050			 @C0138:
1  7822
1  7823						 .ELSEIF ah == NINJA_STATE_PARRY
2  7824	00001050  E9 00000190			 jmp	 @C0114
2  7825	00001055			 @C0137:
2  7826	00001055  80 FC	06			 cmp	 ah,NINJA_STATE_PARRY
2  7827	00001058  75 1B				 jnz	 @C0140
1  7828	0000105A  E8 0000018A				 call	 AnimationIncreaseFrame
1  7829							 .IF CurrentNinja.Frame	== 0
2  7830	0000105F  66| 83 3D 000002FFr +		 cmp	 CurrentNinja .	Frame,0
   7831		  00
2  7832	00001067  75 07				 jnz	 @C0142
1  7833	00001069  6A 01						 push	 NINJA_STATE_STANDING
1  7834	0000106B  E8 FFFFFE0D					 call	 SetNinjaState
1  7835							 .ENDIF
2  7836	00001070			 @C0142:
2  7837	00001070			 @C0141:
1  7838
1  7839						 .ELSEIF ah == NINJA_STATE_SINKING
2  7840	00001070  E9 00000170			 jmp	 @C0114
2  7841	00001075			 @C0140:
2  7842	00001075  80 FC	0B			 cmp	 ah,NINJA_STATE_SINKING
2  7843	00001078  75 05				 jnz	 @C0143
1  7844
1  7845						 .ELSEIF ah == NINJA_STATE_DROWNING
2  7846	0000107A  E9 00000166			 jmp	 @C0114
2  7847	0000107F			 @C0143:
2  7848	0000107F  80 FC	0A			 cmp	 ah,NINJA_STATE_DROWNING
2  7849	00001082  75 05				 jnz	 @C0144
1  7850
1  7851						 .ELSE
2  7852	00001084  E9 0000015C			 jmp	 @C0114
2  7853	00001089			 @C0144:
1  7854
1  7855	00001089  A0 000002FAr				 mov	 al, CurrentNinja.Control
1  7856
1  7857							 .IF al	== NINJA_CONTROL_FIRE
2  7858	0000108E  3C 10				 cmp	 al,NINJA_CONTROL_FIRE
2  7859	00001090  75 0C				 jnz	 @C0146
1  7860	00001092  6A 01						 push	 NINJA_STATE_STANDING
1  7861	00001094  E8 FFFFFDE4					 call	 SetNinjaState
1  7862							 .ELSE
2  7863	00001099  E9 00000147			 jmp	 @C0145
2  7864	0000109E			 @C0146:
1  7865	0000109E  8A D8						 mov	 bl, al
1  7866	000010A0  80 E3	10					 and	 bl, NINJA_CONTROL_FIRE
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 139
JANE.ASM



1  7867								 .IF bl	== NINJA_CONTROL_FIRE
2  7868	000010A3  80 FB	10			 cmp	 bl,NINJA_CONTROL_FIRE
2  7869	000010A6  0F 85	000000B7		 jnz	 @C0148
1  7870
1  7871									 ; User	is pushing direction with fire button
1  7872	000010AC  F6 D3							 not	 bl
1  7873	000010AE  22 C3							 and	 al, bl			 ; al == Direction without  +
   7874					 fire button flag
1  7875
1  7876									 .IF ah	== NINJA_STATE_STANDING
2  7877	000010B0  80 FC	01			 cmp	 ah,NINJA_STATE_STANDING
2  7878	000010B3  0F 85	00000099		 jnz	 @C0150
1  7879
1  7880										 .IF al	== NINJA_CONTROL_DOWN
2  7881	000010B9  3C 04				 cmp	 al,NINJA_CONTROL_DOWN
2  7882	000010BB  75 0C				 jnz	 @C0152
1  7883	000010BD  6A 03									 push	 NINJA_STATE_KICKING
1  7884	000010BF  E8 FFFFFDB9								 call	 SetNinjaState
1  7885
1  7886										 .ELSEIF al == NINJA_CONTROL_UP
2  7887	000010C4  E9 00000087			 jmp	 @C0151
2  7888	000010C9			 @C0152:
2  7889	000010C9  3C 01				 cmp	 al,NINJA_CONTROL_UP
2  7890	000010CB  75 09				 jnz	 @C0153
1  7891	000010CD  6A 0C									 push	 NINJA_STATE_JABING
1  7892	000010CF  E8 FFFFFDA9								 call	 SetNinjaState
1  7893
1  7894										 .ELSEIF al == NINJA_CONTROL_LEFT
2  7895	000010D4  EB 7A				 jmp	 @C0151
2  7896	000010D6			 @C0153:
2  7897	000010D6  3C 08				 cmp	 al,NINJA_CONTROL_LEFT
2  7898	000010D8  75 2D				 jnz	 @C0154
1  7899											 .IF CurrentNinja.Facing ==		    +
   7900					 NINJA_FACING_NORTH
2  7901	000010DA  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  7902	000010E1  75 09				 jnz	 @C0156
1  7903	000010E3  6A 04										 push	 NINJA_STATE_PUNCHING
1  7904	000010E5  E8 FFFFFD93									 call	 SetNinjaState
1  7905											 .ELSEIF CurrentNinja.Facing ==		    +
   7906					 NINJA_FACING_EAST
2  7907	000010EA  EB 19				 jmp	 @C0155
2  7908	000010EC			 @C0156:
2  7909	000010EC  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  7910	000010F3  75 09				 jnz	 @C0157
1  7911	000010F5  6A 04										 push	 NINJA_STATE_PUNCHING
1  7912	000010F7  E8 FFFFFD81									 call	 SetNinjaState
1  7913											 .ELSE
2  7914	000010FC  EB 07				 jmp	 @C0155
2  7915	000010FE			 @C0157:
1  7916	000010FE  6A 05										 push	 NINJA_STATE_SLASHING
1  7917	00001100  E8 FFFFFD78									 call	 SetNinjaState
1  7918											 .ENDIF
2  7919	00001105			 @C0155:
1  7920										 .ELSEIF al == NINJA_CONTROL_RIGHT
2  7921	00001105  EB 49				 jmp	 @C0151
2  7922	00001107			 @C0154:
2  7923	00001107  3C 02				 cmp	 al,NINJA_CONTROL_RIGHT
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 140
JANE.ASM



2  7924	00001109  75 2D				 jnz	 @C0158
1  7925											 .IF CurrentNinja.Facing ==		    +
   7926					 NINJA_FACING_SOUTH
2  7927	0000110B  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  7928	00001112  75 09				 jnz	 @C0160
1  7929	00001114  6A 04										 push	 NINJA_STATE_PUNCHING
1  7930	00001116  E8 FFFFFD62									 call	 SetNinjaState
1  7931											 .ELSEIF CurrentNinja.Facing ==		    +
   7932					 NINJA_FACING_WEST
2  7933	0000111B  EB 19				 jmp	 @C0159
2  7934	0000111D			 @C0160:
2  7935	0000111D  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  7936	00001124  75 09				 jnz	 @C0161
1  7937	00001126  6A 04										 push	 NINJA_STATE_PUNCHING
1  7938	00001128  E8 FFFFFD50									 call	 SetNinjaState
1  7939											 .ELSE
2  7940	0000112D  EB 07				 jmp	 @C0159
2  7941	0000112F			 @C0161:
1  7942	0000112F  6A 05										 push	 NINJA_STATE_SLASHING
1  7943	00001131  E8 FFFFFD47									 call	 SetNinjaState
1  7944											 .ENDIF
2  7945	00001136			 @C0159:
1  7946
1  7947										 .ELSEIF al == NINJA_CONTROL_RIGHT +		    +
   7948					 NINJA_CONTROL_DOWN
2  7949	00001136  EB 18				 jmp	 @C0151
2  7950	00001138			 @C0158:
2  7951	00001138  3C 06				 cmp	 al,NINJA_CONTROL_RIGHT+NINJA_CONTROL_DOWN
2  7952	0000113A  75 09				 jnz	 @C0162
1  7953	0000113C  6A 06										 push	 NINJA_STATE_PARRY
1  7954	0000113E  E8 FFFFFD3A									 call	 SetNinjaState
1  7955										 .ELSEIF al == NINJA_CONTROL_LEFT +		    +
   7956					 NINJA_CONTROL_DOWN
2  7957	00001143  EB 0B				 jmp	 @C0151
2  7958	00001145			 @C0162:
2  7959	00001145  3C 0C				 cmp	 al,NINJA_CONTROL_LEFT+NINJA_CONTROL_DOWN
2  7960	00001147  75 07				 jnz	 @C0163
1  7961	00001149  6A 06										 push	 NINJA_STATE_PARRY
1  7962	0000114B  E8 FFFFFD2D									 call	 SetNinjaState
1  7963										 .ENDIF
2  7964	00001150			 @C0163:
2  7965	00001150			 @C0151:
1  7966									 .ELSE
2  7967	00001150  EB 0C				 jmp	 @C0149
2  7968	00001152			 @C0150:
1  7969
1  7970	00001152  A2 00000039r							 mov	 jumpingFlags, al
1  7971	00001157  6A 02								 push	 NINJA_STATE_JUMPING
1  7972	00001159  E8 FFFFFD1F							 call	 SetNinjaState
1  7973
1  7974									 .ENDIF
2  7975	0000115E			 @C0149:
1  7976
1  7977								 .ELSE
2  7978	0000115E  E9 00000082			 jmp	 @C0147
2  7979	00001163			 @C0148:
1  7980
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 141
JANE.ASM



1  7981									 ; User	is pushing direction without fire button
1  7982	00001163  80 FC	00						 cmp	 ah, NINJA_STATE_WALKING
1  7983	00001166  74 05							 je	 control_nobutton_control
1  7984	00001168  80 FC	01						 cmp	 ah, NINJA_STATE_STANDING
1  7985	0000116B  75 78							 jne	 control_nobutton_finished
1  7986	0000116D			 control_nobutton_control:
1  7987
1  7988									 ;;; Ignore duel directions for	now
1  7989									 .IF al	== NINJA_CONTROL_UP
2  7990	0000116D  3C 01				 cmp	 al,NINJA_CONTROL_UP
2  7991	0000116F  75 12				 jnz	 @C0165
1  7992										 .IF CurrentNinja.Facing != NINJA_FACING_SOUTH
2  7993	00001171  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  7994	00001178  74 07				 jz	 @C0167
1  7995	0000117A  C6 05	000002FBr 00							 mov	 CurrentNinja.Facing,		    +
   7996					 NINJA_FACING_NORTH
1  7997										 .ENDIF
2  7998	00001181			 @C0167:
2  7999	00001181			 @C0166:
1  8000									 .ELSEIF al == NINJA_CONTROL_LEFT
2  8001	00001181  EB 40				 jmp	 @C0164
2  8002	00001183			 @C0165:
2  8003	00001183  3C 08				 cmp	 al,NINJA_CONTROL_LEFT
2  8004	00001185  75 12				 jnz	 @C0168
1  8005										 .IF CurrentNinja.Facing != NINJA_FACING_EAST
2  8006	00001187  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  8007	0000118E  74 07				 jz	 @C0170
1  8008	00001190  C6 05	000002FBr 03							 mov	 CurrentNinja.Facing,		    +
   8009					 NINJA_FACING_WEST
1  8010										 .ENDIF
2  8011	00001197			 @C0170:
2  8012	00001197			 @C0169:
1  8013									 .ELSEIF al == NINJA_CONTROL_RIGHT
2  8014	00001197  EB 2A				 jmp	 @C0164
2  8015	00001199			 @C0168:
2  8016	00001199  3C 02				 cmp	 al,NINJA_CONTROL_RIGHT
2  8017	0000119B  75 12				 jnz	 @C0171
1  8018										 .IF CurrentNinja.Facing != NINJA_FACING_WEST
2  8019	0000119D  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  8020	000011A4  74 07				 jz	 @C0173
1  8021	000011A6  C6 05	000002FBr 01							 mov	 CurrentNinja.Facing,		    +
   8022					 NINJA_FACING_EAST
1  8023										 .ENDIF
2  8024	000011AD			 @C0173:
2  8025	000011AD			 @C0172:
1  8026									 .ELSEIF al == NINJA_CONTROL_DOWN
2  8027	000011AD  EB 14				 jmp	 @C0164
2  8028	000011AF			 @C0171:
2  8029	000011AF  3C 04				 cmp	 al,NINJA_CONTROL_DOWN
2  8030	000011B1  75 10				 jnz	 @C0174
1  8031										 .IF CurrentNinja.Facing != NINJA_FACING_NORTH
2  8032	000011B3  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  8033	000011BA  74 07				 jz	 @C0176
1  8034	000011BC  C6 05	000002FBr 02							 mov	 CurrentNinja.Facing,		    +
   8035					 NINJA_FACING_SOUTH
1  8036										 .ENDIF
2  8037	000011C3			 @C0176:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 142
JANE.ASM



2  8038	000011C3			 @C0175:
1  8039									 .ENDIF
2  8040	000011C3			 @C0174:
2  8041	000011C3			 @C0164:
1  8042
1  8043									 .IF al	!= 00h
2  8044	000011C3  3C 00				 cmp	 al,00H
2  8045	000011C5  74 1E				 jz	 @C0178
1  8046
1  8047	000011C7  50								 push	 eax
1  8048
1  8049	000011C8  0F B6	C8							 movzx	 ecx, al
1  8050	000011CB  51								 push	 ecx
1  8051	000011CC  E8 000006CE							 call	 MoveNinja
1  8052
1  8053	000011D1  58								 pop	 eax
1  8054
1  8055										 .IF ah	== NINJA_STATE_STANDING
2  8056	000011D2  80 FC	01			 cmp	 ah,NINJA_STATE_STANDING
2  8057	000011D5  75 09				 jnz	 @C0180
1  8058	000011D7  6A 00									 push	 NINJA_STATE_WALKING
1  8059	000011D9  E8 FFFFFC9F								 call	 SetNinjaState
1  8060										 .ELSE
2  8061	000011DE  EB 05				 jmp	 @C0179
2  8062	000011E0			 @C0180:
1  8063	000011E0  E8 00000004								 call	 AnimationIncreaseFrame
1  8064										 .ENDIF
2  8065	000011E5			 @C0179:
1  8066									 .ENDIF
2  8067	000011E5			 @C0178:
2  8068	000011E5			 @C0177:
1  8069
1  8070	000011E5			 control_nobutton_finished:
1  8071
1  8072								 .ENDIF
2  8073	000011E5			 @C0147:
1  8074							 .ENDIF
2  8075	000011E5			 @C0145:
1  8076						 .ENDIF
2  8077	000011E5			 @C0114:
1  8078
2  8079	000011E5  C9				 LEAVED
2  8080	000011E6  C2 0004			 RET	 00004h
1  8081	000011E9			 ControlHandler	 endp
   8082					 INCLUDE Animator.inc
1  8083	000011E9			 AnimationIncreaseFrame	 proc	 STDCALL
1  8084	000011E9  60				 pusha
1  8085
1  8086	000011EA  E8 0000013A			 call	 CalcNinjaAnimOffset
1  8087	000011EF  E8 00000169			 call	 CalcNinjaFrame			 ; esi -> Animation set
1  8088
1  8089	000011F4  0F B7	05 000002FFr		 movzx	 eax, CurrentNinja.Frame
1  8090	000011FB  40				 inc	 eax
1  8091	000011FC  03 F0				 add	 esi, eax				 ; eax -> new frame
1  8092
1  8093						 .IF byte ptr [esi] == 0FFh
2  8094	000011FE  80 3E	FF			 cmp	 byte ptr[esi],0FFH
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 143
JANE.ASM



2  8095	00001201  75 0B				 jnz	 @C0182
1  8096							 ; End of Animation, for now just reset	all anims
1  8097	00001203  66| C7 05 000002FFr +			 mov	 CurrentNinja.Frame, 0h
   8098		  0000
1  8099						 .ELSE
2  8100	0000120C  EB 6C				 jmp	 @C0181
2  8101	0000120E			 @C0182:
1  8102	0000120E  80 3E	09				 cmp	 byte ptr [esi], 09h
1  8103	00001211  74 14					 je	 animation_attackcheck
1  8104	00001213  80 3E	18				 cmp	 byte ptr [esi], 18h
1  8105	00001216  74 0F					 je	 animation_attackcheck
1  8106	00001218  80 3E	15				 cmp	 byte ptr [esi], 15h
1  8107	0000121B  74 0A					 je	 animation_attackcheck
1  8108	0000121D  80 3E	16				 cmp	 byte ptr [esi], 16h
1  8109	00001220  74 05					 je	 animation_attackcheck
1  8110	00001222  80 3E	0B				 cmp	 byte ptr [esi], 0Bh
1  8111	00001225  75 07					 jne	 animation_skipattackcheck
1  8112	00001227			 animation_attackcheck:
1  8113	00001227  60					 pusha
1  8114	00001228  E8 000008F1				 call	 AttackCollisionNinja
1  8115	0000122D  61					 popa
1  8116	0000122E			 animation_skipattackcheck:
1  8117
1  8118							 .IF byte ptr [esi] == 10h
2  8119	0000122E  80 3E	10			 cmp	 byte ptr[esi],10H
2  8120	00001231  75 09				 jnz	 @C0184
1  8121	00001233  60						 pusha
1  8122	00001234  E8 000009A6					 call	 PickupCollisionNinja
1  8123	00001239  61						 popa
1  8124							 .ELSEIF byte ptr [esi]	== 14h
2  8125	0000123A  EB 38				 jmp	 @C0183
2  8126	0000123C			 @C0184:
2  8127	0000123C  80 3E	14			 cmp	 byte ptr[esi],14H
2  8128	0000123F  75 33				 jnz	 @C0185
1  8129	00001241  50						 push	 eax
1  8130
1  8131	00001242  0F B6	1D 000002FEr				 movzx	 ebx, CurrentNinja.ActiveInventory
1  8132	00001249			 animation_switchingweapon_rescan:
1  8133	00001249  43						 inc	 ebx
1  8134
1  8135								 .IF ebx == Inventory_Count
2  8136	0000124A  83 FB	03			 cmp	 ebx,Inventory_Count
2  8137	0000124D  75 04				 jnz	 @C0187
1  8138	0000124F  33 DB							 xor	 ebx, ebx
1  8139								 .ELSE
2  8140	00001251  EB 14				 jmp	 @C0186
2  8141	00001253			 @C0187:
1  8142	00001253  8B C3							 mov	 eax, ebx
1  8143	00001255  B9 00000006						 mov	 ecx, Inventory_Len
1  8144	0000125A  F7 E1							 mul	 ecx
1  8145	0000125C  05 00000BA5r						 add	 eax, offset InventoryList
1  8146	00001261  80 78	04 00						 cmp	 [eax].QtyHeld,	00h
1  8147	00001265  74 E2							 je	 animation_switchingweapon_rescan
1  8148								 .ENDIF
2  8149	00001267			 @C0186:
1  8150	00001267  88 1D	000002FEr				 mov	 CurrentNinja.ActiveInventory, bl
1  8151	0000126D  88 1D	00000316r				 mov	 ResetToNinja.ActiveInventory, bl
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 144
JANE.ASM



1  8152
1  8153	00001273  58						 pop	 eax
1  8154							 .ENDIF
2  8155	00001274			 @C0185:
2  8156	00001274			 @C0183:
1  8157
1  8158	00001274  66| A3 000002FFr			 mov	 CurrentNinja.Frame, ax
1  8159						 .ENDIF
2  8160	0000127A			 @C0181:
1  8161
1  8162	0000127A  61				 popa
2  8163	0000127B  C3				 RET	 00000h
1  8164	0000127C			 AnimationIncreaseFrame	 endp
1  8165
1  8166
1  8167	0000127C			 AnimationIncreaseFrameEnemy		 proc	 STDCALL, iEnemy:DWORD
2  8168	0000127C  C8 0000 00			 ENTERD	 00000h,0
2  8169	00001280  8B 5D	08			 mov	 ebx, iEnemy
1  8170	00001283  60				 pusha
1  8171
1  8172	00001284  53				 push	 ebx
1  8173
1  8174	00001285  53				 push	 ebx
1  8175	00001286  E8 000001FB			 call	 CalcEnemyAnimOffset			 ; esi -> Animation group
1  8176
1  8177	0000128B  5B				 pop	 ebx					 ; ebx == Enemy
1  8178
1  8179	0000128C  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  8180	00001291  B9 0000002A			 mov	 ecx, MapRoom_Len
1  8181	00001296  F7 E1				 mul	 ecx
1  8182	00001298  05 0000031Dr			 add	 eax, offset Jane_Map
1  8183
1  8184	0000129D  53				 push	 ebx
1  8185	0000129E  50				 push	 eax
1  8186
1  8187						 .IF ebx == 1
2  8188	0000129F  83 FB	01			 cmp	 ebx,1
2  8189	000012A2  75 11				 jnz	 @C0189
1  8190	000012A4  0F B7	48 0C				 movzx	 ecx, [eax].enemy1_FrameIdx
1  8191	000012A8  51					 push	 ecx
1  8192
1  8193	000012A9  0F B6	78 10				 movzx	 edi, [eax].enemy1_Facing
1  8194	000012AD  57					 push	 edi
1  8195	000012AE  0F B6	78 0E				 movzx	 edi, [eax].enemy1_State
1  8196	000012B2  57					 push	 edi
1  8197						 .ELSE
2  8198	000012B3  EB 0F				 jmp	 @C0188
2  8199	000012B5			 @C0189:
1  8200	000012B5  0F B7	48 1E				 movzx	 ecx, [eax].enemy2_FrameIdx
1  8201	000012B9  51					 push	 ecx
1  8202
1  8203	000012BA  0F B6	78 22				 movzx	 edi, [eax].enemy2_Facing
1  8204	000012BE  57					 push	 edi
1  8205	000012BF  0F B6	78 20				 movzx	 edi, [eax].enemy2_State
1  8206	000012C3  57					 push	 edi
1  8207						 .ENDIF
2  8208	000012C4			 @C0188:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 145
JANE.ASM



1  8209	000012C4  E8 000001F6			 call	 CalcEnemyFrame			 ; esi -> Animation set
1  8210
1  8211	000012C9  59				 pop	 ecx
1  8212	000012CA  41				 inc	 ecx
1  8213	000012CB  03 F1				 add	 esi, ecx
1  8214
1  8215	000012CD  58				 pop	 eax
1  8216	000012CE  5B				 pop	 ebx
1  8217
1  8218						 .IF byte ptr [esi] == 0FFh
2  8219	000012CF  80 3E	FF			 cmp	 byte ptr[esi],0FFH
2  8220	000012D2  75 41				 jnz	 @C0191
1  8221							 ; End of Animation, for now just reset	all anims
1  8222							 .IF ebx == 1
2  8223	000012D4  83 FB	01			 cmp	 ebx,1
2  8224	000012D7  75 1E				 jnz	 @C0193
1  8225	000012D9  66| C7 40 0C 0000				 mov	 [eax].enemy1_FrameIdx,	0
1  8226								 .IF [eax].enemy1_State	== NINJA_STATE_DYING
2  8227	000012DF  80 78	0E 08			 cmp	 [eax].	enemy1_State,NINJA_STATE_DYING
2  8228	000012E3  75 06				 jnz	 @C0195
1  8229	000012E5  C6 40	0E 09						 mov	 [eax].enemy1_State, NINJA_STATE_DEAD
1  8230								 .ELSEIF [eax].enemy1_State != NINJA_STATE_DEAD
2  8231	000012E9  EB 0A				 jmp	 @C0194
2  8232	000012EB			 @C0195:
2  8233	000012EB  80 78	0E 09			 cmp	 [eax].	enemy1_State,NINJA_STATE_DEAD
2  8234	000012EF  74 04				 jz	 @C0196
1  8235	000012F1  C6 40	0E 00						 mov	 [eax].enemy1_State, NINJA_STATE_WALKING
1  8236								 .ENDIF
2  8237	000012F5			 @C0196:
2  8238	000012F5			 @C0194:
1  8239							 .ELSE
2  8240	000012F5  EB 1C				 jmp	 @C0192
2  8241	000012F7			 @C0193:
1  8242	000012F7  66| C7 40 1E 0000				 mov	 [eax].enemy2_FrameIdx,	0
1  8243								 .IF [eax].enemy2_State	== NINJA_STATE_DYING
2  8244	000012FD  80 78	20 08			 cmp	 [eax].	enemy2_State,NINJA_STATE_DYING
2  8245	00001301  75 06				 jnz	 @C0198
1  8246	00001303  C6 40	20 09						 mov	 [eax].enemy2_State, NINJA_STATE_DEAD
1  8247								 .ELSEIF [eax].enemy2_State != NINJA_STATE_DEAD
2  8248	00001307  EB 0A				 jmp	 @C0197
2  8249	00001309			 @C0198:
2  8250	00001309  80 78	20 09			 cmp	 [eax].	enemy2_State,NINJA_STATE_DEAD
2  8251	0000130D  74 04				 jz	 @C0199
1  8252	0000130F  C6 40	20 00						 mov	 [eax].enemy2_State, NINJA_STATE_WALKING
1  8253								 .ENDIF
2  8254	00001313			 @C0199:
2  8255	00001313			 @C0197:
1  8256							 .ENDIF
2  8257	00001313			 @C0192:
1  8258						 .ELSE
2  8259	00001313  EB 0F				 jmp	 @C0190
2  8260	00001315			 @C0191:
1  8261							 .IF ebx == 1
2  8262	00001315  83 FB	01			 cmp	 ebx,1
2  8263	00001318  75 06				 jnz	 @C0201
1  8264	0000131A  66| 89 48 0C					 mov	 [eax].enemy1_FrameIdx,	cx
1  8265							 .ELSE
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 146
JANE.ASM



2  8266	0000131E  EB 04				 jmp	 @C0200
2  8267	00001320			 @C0201:
1  8268	00001320  66| 89 48 1E					 mov	 [eax].enemy2_FrameIdx,	cx
1  8269							 .ENDIF
2  8270	00001324			 @C0200:
1  8271						 .ENDIF
2  8272	00001324			 @C0190:
1  8273
1  8274	00001324  61				 popa
2  8275	00001325  C9				 LEAVED
2  8276	00001326  C2 0004			 RET	 00004h
1  8277	00001329			 AnimationIncreaseFrameEnemy		 endp
   8278
   8279					 INCLUDE General-FrameCalc.inc
1  8280	00001329			 CalcNinjaAnimOffset	 proc	 STDCALL
1  8281	00001329  B9 00000006			 mov	 ecx, Inventory_Len
1  8282	0000132E  0F B6	05 000002FEr		 movzx	 eax, CurrentNinja.ActiveInventory
1  8283	00001335  F7 E1				 mul	 ecx
1  8284	00001337  05 00000BA5r			 add	 eax, offset InventoryList			 ; eax -> Current Inventory +
   8285					 item
1  8286	0000133C  0F B7	00			 movzx	 eax, [eax].NinjaFrameset
1  8287
1  8288						 .IF eax == 0
2  8289	0000133F  83 F8	00			 cmp	 eax,0
2  8290	00001342  75 07				 jnz	 @C0203
1  8291	00001344  BE 00000050r				 mov	 esi, offset Animation_EmptyHand_Player
1  8292						 .ELSEIF eax ==	1
2  8293	00001349  EB 11				 jmp	 @C0202
2  8294	0000134B			 @C0203:
2  8295	0000134B  83 F8	01			 cmp	 eax,1
2  8296	0000134E  75 07				 jnz	 @C0204
1  8297	00001350  BE 000000A0r				 mov	 esi, offset Animation_SwordHand_Player
1  8298						 .ELSE							 ; Catch Errors
2  8299	00001355  EB 05				 jmp	 @C0202
2  8300	00001357			 @C0204:
1  8301	00001357  BE 00000050r				 mov	 esi, offset Animation_EmptyHand_Player
1  8302						 .ENDIF
2  8303	0000135C			 @C0202:
1  8304
2  8305	0000135C  C3				 RET	 00000h
1  8306	0000135D			 CalcNinjaAnimOffset	 endp
1  8307
1  8308	0000135D			 CalcNinjaFrame	 proc	 STDCALL
1  8309						 .IF CurrentNinja.State	== NINJA_STATE_STANDING
2  8310	0000135D  80 3D	000002F9r 01		 cmp	 CurrentNinja .	State,NINJA_STATE_STANDING
2  8311	00001364  75 07				 jnz	 @C0206
1  8312	00001366  8B 36					 mov	 esi, [esi].offsStand
1  8313					 ;	 .ELSEIF CurrentNinja.State == NINJA_STATE_TRANSITION
1  8314					 ;		 mov	 esi, [esi].offsStand
1  8315						 .ELSEIF CurrentNinja.State == NINJA_STATE_JUMPING
2  8316	00001368  E9 00000118			 jmp	 @C0205
2  8317	0000136D			 @C0206:
2  8318	0000136D  80 3D	000002F9r 02		 cmp	 CurrentNinja .	State,NINJA_STATE_JUMPING
2  8319	00001374  75 08				 jnz	 @C0207
1  8320	00001376  8B 76	08				 mov	 esi, [esi].offsJump
1  8321						 .ELSEIF CurrentNinja.State == NINJA_STATE_PUNCHING
2  8322	00001379  E9 00000107			 jmp	 @C0205
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 147
JANE.ASM



2  8323	0000137E			 @C0207:
2  8324	0000137E  80 3D	000002F9r 04		 cmp	 CurrentNinja .	State,NINJA_STATE_PUNCHING
2  8325	00001385  75 08				 jnz	 @C0208
1  8326	00001387  8B 76	18				 mov	 esi, [esi].offsPunch
1  8327						 .ELSEIF CurrentNinja.State == NINJA_STATE_SLASHING
2  8328	0000138A  E9 000000F6			 jmp	 @C0205
2  8329	0000138F			 @C0208:
2  8330	0000138F  80 3D	000002F9r 05		 cmp	 CurrentNinja .	State,NINJA_STATE_SLASHING
2  8331	00001396  75 08				 jnz	 @C0209
1  8332	00001398  8B 76	10				 mov	 esi, [esi].offsSlash
1  8333						 .ELSEIF CurrentNinja.State == NINJA_STATE_JABING
2  8334	0000139B  E9 000000E5			 jmp	 @C0205
2  8335	000013A0			 @C0209:
2  8336	000013A0  80 3D	000002F9r 0C		 cmp	 CurrentNinja .	State,NINJA_STATE_JABING
2  8337	000013A7  75 08				 jnz	 @C0210
1  8338	000013A9  8B 76	0C				 mov	 esi, [esi].offsJab
1  8339						 .ELSEIF CurrentNinja.State == NINJA_STATE_KICKING
2  8340	000013AC  E9 000000D4			 jmp	 @C0205
2  8341	000013B1			 @C0210:
2  8342	000013B1  80 3D	000002F9r 03		 cmp	 CurrentNinja .	State,NINJA_STATE_KICKING
2  8343	000013B8  75 08				 jnz	 @C0211
1  8344	000013BA  8B 76	04				 mov	 esi, [esi].offsKick
1  8345						 .ELSEIF CurrentNinja.State == NINJA_STATE_PARRY
2  8346	000013BD  E9 000000C3			 jmp	 @C0205
2  8347	000013C2			 @C0211:
2  8348	000013C2  80 3D	000002F9r 06		 cmp	 CurrentNinja .	State,NINJA_STATE_PARRY
2  8349	000013C9  75 08				 jnz	 @C0212
1  8350	000013CB  8B 76	14				 mov	 esi, [esi].offsParry
1  8351						 .ELSEIF CurrentNinja.State == NINJA_STATE_HURT
2  8352	000013CE  E9 000000B2			 jmp	 @C0205
2  8353	000013D3			 @C0212:
2  8354	000013D3  80 3D	000002F9r 07		 cmp	 CurrentNinja .	State,NINJA_STATE_HURT
2  8355	000013DA  75 08				 jnz	 @C0213
1  8356	000013DC  8B 76	20				 mov	 esi, [esi].offsHurt
1  8357						 .ELSEIF CurrentNinja.State == NINJA_STATE_DYING
2  8358	000013DF  E9 000000A1			 jmp	 @C0205
2  8359	000013E4			 @C0213:
2  8360	000013E4  80 3D	000002F9r 08		 cmp	 CurrentNinja .	State,NINJA_STATE_DYING
2  8361	000013EB  75 08				 jnz	 @C0214
1  8362	000013ED  8B 76	24				 mov	 esi, [esi].offsDying
1  8363						 .ELSEIF CurrentNinja.State == NINJA_STATE_SWITCHING
2  8364	000013F0  E9 00000090			 jmp	 @C0205
2  8365	000013F5			 @C0214:
2  8366	000013F5  80 3D	000002F9r 0D		 cmp	 CurrentNinja .	State,NINJA_STATE_SWITCHING
2  8367	000013FC  75 08				 jnz	 @C0215
1  8368	000013FE  8B 76	1C				 mov	 esi, [esi].offsSwitch
1  8369						 .ELSEIF CurrentNinja.State == NINJA_STATE_WALKING
2  8370	00001401  E9 0000007F			 jmp	 @C0205
2  8371	00001406			 @C0215:
2  8372	00001406  80 3D	000002F9r 00		 cmp	 CurrentNinja .	State,NINJA_STATE_WALKING
2  8373	0000140D  75 76				 jnz	 @C0216
1  8374
1  8375							 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
2  8376	0000140F  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  8377	00001416  75 15				 jnz	 @C0218
1  8378	00001418  A0 000002FAr					 mov	 al, CurrentNinja.Control
1  8379	0000141D  24 04						 and	 al, NINJA_CONTROL_DOWN
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 148
JANE.ASM



1  8380								 .IF al	== 0
2  8381	0000141F  3C 00				 cmp	 al,0
2  8382	00001421  75 05				 jnz	 @C0220
1  8383	00001423  8B 76	30						 mov	 esi, [esi].offsNorthWalkF
1  8384								 .ELSE
2  8385	00001426  EB 03				 jmp	 @C0219
2  8386	00001428			 @C0220:
1  8387	00001428  8B 76	34						 mov	 esi, [esi].offsNorthWalkB
1  8388								 .ENDIF
2  8389	0000142B			 @C0219:
1  8390							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
2  8391	0000142B  EB 58				 jmp	 @C0217
2  8392	0000142D			 @C0218:
2  8393	0000142D  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  8394	00001434  75 15				 jnz	 @C0221
1  8395	00001436  A0 000002FAr					 mov	 al, CurrentNinja.Control
1  8396	0000143B  24 08						 and	 al, NINJA_CONTROL_LEFT
1  8397								 .IF al	== 0
2  8398	0000143D  3C 00				 cmp	 al,0
2  8399	0000143F  75 05				 jnz	 @C0223
1  8400	00001441  8B 76	38						 mov	 esi, [esi].offsEastWalkF
1  8401								 .ELSE
2  8402	00001444  EB 03				 jmp	 @C0222
2  8403	00001446			 @C0223:
1  8404	00001446  8B 76	3C						 mov	 esi, [esi].offsEastWalkB
1  8405								 .ENDIF
2  8406	00001449			 @C0222:
1  8407							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
2  8408	00001449  EB 3A				 jmp	 @C0217
2  8409	0000144B			 @C0221:
2  8410	0000144B  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  8411	00001452  75 15				 jnz	 @C0224
1  8412	00001454  A0 000002FAr					 mov	 al, CurrentNinja.Control
1  8413	00001459  24 01						 and	 al, NINJA_CONTROL_UP
1  8414								 .IF al	== 0
2  8415	0000145B  3C 00				 cmp	 al,0
2  8416	0000145D  75 05				 jnz	 @C0226
1  8417	0000145F  8B 76	40						 mov	 esi, [esi].offsSouthWalkF
1  8418								 .ELSE
2  8419	00001462  EB 03				 jmp	 @C0225
2  8420	00001464			 @C0226:
1  8421	00001464  8B 76	44						 mov	 esi, [esi].offsSouthWalkB
1  8422								 .ENDIF
2  8423	00001467			 @C0225:
1  8424							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
2  8425	00001467  EB 1C				 jmp	 @C0217
2  8426	00001469			 @C0224:
2  8427	00001469  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  8428	00001470  75 13				 jnz	 @C0227
1  8429	00001472  A0 000002FAr					 mov	 al, CurrentNinja.Control
1  8430	00001477  24 02						 and	 al, NINJA_CONTROL_RIGHT
1  8431								 .IF al	== 0
2  8432	00001479  3C 00				 cmp	 al,0
2  8433	0000147B  75 05				 jnz	 @C0229
1  8434	0000147D  8B 76	48						 mov	 esi, [esi].offsWestWalkF
1  8435								 .ELSE
2  8436	00001480  EB 03				 jmp	 @C0228
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 149
JANE.ASM



2  8437	00001482			 @C0229:
1  8438	00001482  8B 76	4C						 mov	 esi, [esi].offsWestWalkB
1  8439								 .ENDIF
2  8440	00001485			 @C0228:
1  8441							 .ENDIF
2  8442	00001485			 @C0227:
2  8443	00001485			 @C0217:
1  8444
1  8445						 .ENDIF
2  8446	00001485			 @C0216:
2  8447	00001485			 @C0205:
2  8448	00001485  C3				 RET	 00000h
1  8449	00001486			 CalcNinjaFrame	 endp
1  8450
1  8451	00001486			 CalcEnemyAnimOffset	 proc	 STDCALL, iEnemy:DWORD
2  8452	00001486  C8 0000 00			 ENTERD	 00000h,0
2  8453	0000148A  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  8454	0000148F  B9 0000002A			 mov	 ecx, MapRoom_Len
1  8455	00001494  F7 E0				 mul	 eax
1  8456	00001496  05 0000031Dr			 add	 eax, offset Jane_Map				 ; eax -> Map Data
1  8457	0000149B  8B 5D	08			 mov	 ebx, iEnemy
1  8458						 .IF ebx == 2
2  8459	0000149E  83 FB	02			 cmp	 ebx,2
2  8460	000014A1  75 07				 jnz	 @C0231
1  8461	000014A3  BE 000000F0r				 mov	 esi, offset Animation_EmptyHand_Enemy
1  8462						 .ELSEIF ebx ==	2
2  8463	000014A8  EB 11				 jmp	 @C0230
2  8464	000014AA			 @C0231:
2  8465	000014AA  83 FB	02			 cmp	 ebx,2
2  8466	000014AD  75 07				 jnz	 @C0232
1  8467	000014AF  BE 00000140r				 mov	 esi, offset Animation_SwordHand_Enemy
1  8468						 .ELSE							 ; Catch Errors
2  8469	000014B4  EB 05				 jmp	 @C0230
2  8470	000014B6			 @C0232:
1  8471	000014B6  BE 000000F0r				 mov	 esi, offset Animation_EmptyHand_Enemy
1  8472						 .ENDIF
2  8473	000014BB			 @C0230:
1  8474
2  8475	000014BB  C9				 LEAVED
2  8476	000014BC  C2 0004			 RET	 00004h
1  8477	000014BF			 CalcEnemyAnimOffset	 endp
1  8478
1  8479	000014BF			 CalcEnemyFrame	 proc	 STDCALL, EnemyState:DWORD, EnemyFacing:DWORD
2  8480	000014BF  C8 0000 00			 ENTERD	 00000h,0
2  8481	000014C3  8B 5D	0C			 mov	 ebx, EnemyFacing
1  8482	000014C6  8B 45	08			 mov	 eax, EnemyState
1  8483						 .IF eax == NINJA_STATE_STANDING
2  8484	000014C9  83 F8	01			 cmp	 eax,NINJA_STATE_STANDING
2  8485	000014CC  75 04				 jnz	 @C0234
1  8486	000014CE  8B 36					 mov	 esi, [esi].offsStand
1  8487						 .ELSEIF eax ==	NINJA_STATE_PUNCHING
2  8488	000014D0  EB 7B				 jmp	 @C0233
2  8489	000014D2			 @C0234:
2  8490	000014D2  83 F8	04			 cmp	 eax,NINJA_STATE_PUNCHING
2  8491	000014D5  75 05				 jnz	 @C0235
1  8492	000014D7  8B 76	18				 mov	 esi, [esi].offsPunch
1  8493						 .ELSEIF eax ==	NINJA_STATE_SLASHING
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 150
JANE.ASM



2  8494	000014DA  EB 71				 jmp	 @C0233
2  8495	000014DC			 @C0235:
2  8496	000014DC  83 F8	05			 cmp	 eax,NINJA_STATE_SLASHING
2  8497	000014DF  75 05				 jnz	 @C0236
1  8498	000014E1  8B 76	10				 mov	 esi, [esi].offsSlash
1  8499						 .ELSEIF eax ==	NINJA_STATE_JABING
2  8500	000014E4  EB 67				 jmp	 @C0233
2  8501	000014E6			 @C0236:
2  8502	000014E6  83 F8	0C			 cmp	 eax,NINJA_STATE_JABING
2  8503	000014E9  75 05				 jnz	 @C0237
1  8504	000014EB  8B 76	0C				 mov	 esi, [esi].offsJab
1  8505						 .ELSEIF eax ==	NINJA_STATE_KICKING
2  8506	000014EE  EB 5D				 jmp	 @C0233
2  8507	000014F0			 @C0237:
2  8508	000014F0  83 F8	03			 cmp	 eax,NINJA_STATE_KICKING
2  8509	000014F3  75 05				 jnz	 @C0238
1  8510	000014F5  8B 76	04				 mov	 esi, [esi].offsKick
1  8511						 .ELSEIF eax ==	NINJA_STATE_PARRY
2  8512	000014F8  EB 53				 jmp	 @C0233
2  8513	000014FA			 @C0238:
2  8514	000014FA  83 F8	06			 cmp	 eax,NINJA_STATE_PARRY
2  8515	000014FD  75 05				 jnz	 @C0239
1  8516	000014FF  8B 76	14				 mov	 esi, [esi].offsParry
1  8517						 .ELSEIF eax ==	NINJA_STATE_HURT
2  8518	00001502  EB 49				 jmp	 @C0233
2  8519	00001504			 @C0239:
2  8520	00001504  83 F8	07			 cmp	 eax,NINJA_STATE_HURT
2  8521	00001507  75 05				 jnz	 @C0240
1  8522	00001509  8B 76	20				 mov	 esi, [esi].offsHurt
1  8523						 .ELSEIF eax ==	NINJA_STATE_DYING
2  8524	0000150C  EB 3F				 jmp	 @C0233
2  8525	0000150E			 @C0240:
2  8526	0000150E  83 F8	08			 cmp	 eax,NINJA_STATE_DYING
2  8527	00001511  75 05				 jnz	 @C0241
1  8528	00001513  8B 76	24				 mov	 esi, [esi].offsDying
1  8529						 .ELSEIF eax ==	NINJA_STATE_DEAD
2  8530	00001516  EB 35				 jmp	 @C0233
2  8531	00001518			 @C0241:
2  8532	00001518  83 F8	09			 cmp	 eax,NINJA_STATE_DEAD
2  8533	0000151B  75 05				 jnz	 @C0242
1  8534	0000151D  8B 76	28				 mov	 esi, [esi].offsDead
1  8535						 .ELSEIF eax ==	NINJA_STATE_WALKING
2  8536	00001520  EB 2B				 jmp	 @C0233
2  8537	00001522			 @C0242:
2  8538	00001522  83 F8	00			 cmp	 eax,NINJA_STATE_WALKING
2  8539	00001525  75 26				 jnz	 @C0243
1  8540							 .IF ebx == NINJA_FACING_NORTH
2  8541	00001527  83 FB	00			 cmp	 ebx,NINJA_FACING_NORTH
2  8542	0000152A  75 05				 jnz	 @C0245
1  8543	0000152C  8B 76	30					 mov	 esi, [esi].offsNorthWalkF
1  8544							 .ELSEIF ebx ==	NINJA_FACING_EAST
2  8545	0000152F  EB 1C				 jmp	 @C0244
2  8546	00001531			 @C0245:
2  8547	00001531  83 FB	01			 cmp	 ebx,NINJA_FACING_EAST
2  8548	00001534  75 05				 jnz	 @C0246
1  8549	00001536  8B 76	38					 mov	 esi, [esi].offsEastWalkF
1  8550							 .ELSEIF ebx ==	NINJA_FACING_SOUTH
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 151
JANE.ASM



2  8551	00001539  EB 12				 jmp	 @C0244
2  8552	0000153B			 @C0246:
2  8553	0000153B  83 FB	02			 cmp	 ebx,NINJA_FACING_SOUTH
2  8554	0000153E  75 05				 jnz	 @C0247
1  8555	00001540  8B 76	40					 mov	 esi, [esi].offsSouthWalkF
1  8556							 .ELSEIF ebx ==	NINJA_FACING_WEST
2  8557	00001543  EB 08				 jmp	 @C0244
2  8558	00001545			 @C0247:
2  8559	00001545  83 FB	03			 cmp	 ebx,NINJA_FACING_WEST
2  8560	00001548  75 03				 jnz	 @C0248
1  8561	0000154A  8B 76	48					 mov	 esi, [esi].offsWestWalkF
1  8562							 .ENDIF
2  8563	0000154D			 @C0248:
2  8564	0000154D			 @C0244:
1  8565						 .ENDIF
2  8566	0000154D			 @C0243:
2  8567	0000154D			 @C0233:
2  8568	0000154D  C9				 LEAVED
2  8569	0000154E  C2 0008			 RET	 00008h
1  8570	00001551			 CalcEnemyFrame	 endp
   8571					 INCLUDE Gfx-Scenery.inc
1  8572	00001551			 PaintScenery		 proc	 STDCALL, greaterThanY:DWORD
2  8573	00001551  C8 0000 00			 ENTERD	 00000h,0
2  8574	00001555  8B 45	08			 mov	 eax, greaterThanY
1  8575	00001558  60				 pusha
1  8576
1  8577					 ;;;;;;;;;;;;;;;;;;;;;;;;;;; Paint items where ScreenY + Height	> greaterThanY
1  8578	00001559  8B 1D	000002F5r		 mov	 ebx, CurrentNinja.ScreenID
1  8579	0000155F  93				 xchg	 ebx, eax				 ; ebx == Y start
1  8580	00001560  B9 0000002A			 mov	 ecx, MapRoom_Len
1  8581	00001565  F7 E1				 mul	 ecx
1  8582	00001567  05 0000031Dr			 add	 eax, offset Jane_Map			 ; eax -> screen data
1  8583	0000156C  8B 70	26			 mov	 esi, [eax].screen_ObjectList	 ; esi -> list of scenery
1  8584
1  8585	0000156F			 scenery_scanloop:
1  8586	0000156F  80 3E	00			 cmp	 byte ptr [esi], 00h
1  8587	00001572  0F 84	000000C7		 je	 scenery_scanover			 ; Finish scenery
1  8588
1  8589	00001578  0F B7	56 10			 movzx	 edx, [esi].ObjectGfx
1  8590	0000157C  C1 E2	02			 shl	 edx, 2h
1  8591	0000157F  81 C2	0000014Cr		 add	 edx, offset height_Objects		 ; edx == Height of Object
1  8592	00001585  8B 46	04			 mov	 eax, [esi].ScreenY
1  8593	00001588  03 02				 add	 eax, dword ptr	[edx]
1  8594	0000158A  83 C0	64			 add	 eax, NINJA_FRAME_HEIGHT
1  8595	0000158D  3B C3				 cmp	 eax, ebx
1  8596	0000158F  0F 8C	000000A2		 jl	 scenery_dontdrawme
1  8597
1  8598	00001595  8B 7E	04			 mov	 edi, [esi].ScreenY			 ; edi == Screen Y
1  8599	00001598  83 C7	64			 add	 edi, NINJA_FRAME_HEIGHT
1  8600	0000159B  8B 0E				 mov	 ecx, [esi].ScreenX			 ; ecx == Screen X
1  8601	0000159D  83 C1	50			 add	 ecx, NINJA_FRAME_WIDTH
1  8602
1  8603	000015A0  0F B7	46 10			 movzx	 eax, [esi].ObjectGfx
1  8604	000015A4  C1 E0	02			 shl	 eax, 2h
1  8605	000015A7  05 000000E8r			 add	 eax, offset bmp_Objects	 ; eax -> bitmap handle
1  8606
1  8607	000015AC  60				 pusha
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 152
JANE.ASM



1  8608
1  8609	000015AD  68 0000001Cr			 push	 offset	bitmapDimensions
1  8610	000015B2  6A 18				 push	 BITMAP_
1  8611	000015B4  FF 30				 push	 dword ptr [eax]
1  8612	000015B6  E8 00000000e			 call	 GetObject				 ; bitmapDimensions holds dimensions
1  8613
1  8614	000015BB  61				 popa
1  8615	000015BC  60				 pusha
1  8616
1  8617	000015BD  FF 30				 push	 dword ptr [eax]
1  8618	000015BF  FF 35	00000014r		 push	 copierDC
1  8619	000015C5  E8 00000000e			 call	 SelectObject
1  8620
1  8621	000015CA  61				 popa
1  8622
1  8623	000015CB			 scenery_debug_stuff:
1  8624	000015CB  60				 pusha
1  8625	000015CC  0F B6	05 00000034r		 movzx	 eax, debugMode
1  8626	000015D3  0B C0				 or	 eax,eax
1  8627	000015D5  74 2C				 jz	 scenery_debug_stuff_end
1  8628
1  8629	000015D7  68 00FFFFFF			 push	 0FFFFFFh
1  8630	000015DC  8B 46	04			 mov	 eax, [esi].ScreenY
1  8631	000015DF  83 C0	64			 add	 eax, NINJA_FRAME_HEIGHT
1  8632	000015E2  03 05	00000024r		 add	 eax, bitmapDimensions.bm_bmHeight
1  8633	000015E8  40				 inc	 eax
1  8634	000015E9  50				 push	 eax
1  8635	000015EA  A1 00000020r			 mov	 eax, bitmapDimensions.bm_bmWidth
1  8636	000015EF  D1 E8				 shr	 eax, 1h
1  8637	000015F1  03 06				 add	 eax, [esi].ScreenX
1  8638	000015F3  83 C0	50			 add	 eax, NINJA_FRAME_WIDTH
1  8639	000015F6  50				 push	 eax
1  8640	000015F7  FF 35	0000000Cr		 push	 actionDC
1  8641	000015FD  E8 00000000e			 call	 SetPixel
1  8642	00001602  61				 popa
1  8643	00001603			 scenery_debug_stuff_end:
1  8644
1  8645	00001603  68 008BFBFB			 push	 COLOURS_SCENERY_TRANS
1  8646	00001608  FF 35	00000024r		 push	 bitmapDimensions.bm_bmHeight
1  8647	0000160E  FF 35	00000020r		 push	 bitmapDimensions.bm_bmWidth
1  8648	00001614  6A 00				 push	 0
1  8649	00001616  6A 00				 push	 0
1  8650	00001618  FF 35	00000014r		 push	 copierDC
1  8651	0000161E  FF 35	00000024r		 push	 bitmapDimensions.bm_bmHeight
1  8652	00001624  FF 35	00000020r		 push	 bitmapDimensions.bm_bmWidth
1  8653	0000162A  57				 push	 edi
1  8654	0000162B  51				 push	 ecx
1  8655	0000162C  FF 35	0000000Cr		 push	 actionDC
1  8656	00001632  E8 00000000e			 call	 TransparentBlt
1  8657
1  8658	00001637			 scenery_dontdrawme:
1  8659	00001637  83 C6	1A			 add	 esi, Object_Len
1  8660	0000163A  E9 FFFFFF30			 jmp	 scenery_scanloop
1  8661
1  8662	0000163F			 scenery_scanover:
1  8663	0000163F  61				 popa
2  8664	00001640  C9				 LEAVED
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 153
JANE.ASM



2  8665	00001641  C2 0004			 RET	 00004h
1  8666	00001644			 PaintScenery		 endp
   8667					 INCLUDE Gfx-Enemy.inc
1  8668	00001644			 GfxDrawEnemy		 proc	 STDCALL, EnemyNum:DWORD
1  8669
2  8670	00001644  C8 0000 00			 ENTERD	 00000h,0
2  8671	00001648  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  8672	0000164D  B9 0000002A			 mov	 ecx, MapRoom_Len
1  8673	00001652  F7 E1				 mul	 ecx
1  8674	00001654  05 0000031Dr			 add	 eax, offset Jane_Map
1  8675	00001659  8B F0				 mov	 esi, eax					 ; esi -> map data
1  8676
1  8677	0000165B  8B 45	08			 mov	 eax, EnemyNum
1  8678						 .IF eax == 1
2  8679	0000165E  83 F8	01			 cmp	 eax,1
2  8680	00001661  75 09				 jnz	 @C0250
1  8681	00001663  0F B7	46 0A				 movzx	 eax, [esi].enemy1_Frameset
1  8682	00001667  8D 76	02				 lea	 esi, [esi].enemy1_ScreenX
1  8683						 .ELSE
2  8684	0000166A  EB 07				 jmp	 @C0249
2  8685	0000166C			 @C0250:
1  8686	0000166C  0F B7	46 1C				 movzx	 eax, [esi].enemy2_Frameset
1  8687	00001670  8D 76	14				 lea	 esi, [esi].enemy2_ScreenX
1  8688						 .ENDIF
2  8689	00001673			 @C0249:
1  8690
1  8691	00001673  56				 push	 esi
1  8692	00001674  50				 push	 eax
1  8693
1  8694	00001675  C1 E0	02			 shl	 eax, 2h
1  8695	00001678  05 000000D8r			 add	 eax, offset bmp_Skins			 ; eax -> bitmap handle
1  8696
1  8697	0000167D  FF 30				 push	 dword ptr [eax]
1  8698	0000167F  FF 35	00000014r		 push	 copierDC
1  8699	00001685  E8 00000000e			 call	 SelectObject
1  8700
1  8701	0000168A  58				 pop	 eax
1  8702
1  8703						 .IF eax == 2h						 ; Unarmed
2  8704	0000168B  83 F8	02			 cmp	 eax,2H
2  8705	0000168E  75 07				 jnz	 @C0252
1  8706	00001690  BE 000000F0r				 mov	 esi, offset Animation_EmptyHand_Enemy
1  8707						 .ELSEIF eax ==	3h					 ; Sword
2  8708	00001695  EB 0A				 jmp	 @C0251
2  8709	00001697			 @C0252:
2  8710	00001697  83 F8	03			 cmp	 eax,3H
2  8711	0000169A  75 05				 jnz	 @C0253
1  8712	0000169C  BE 00000140r				 mov	 esi, offset Animation_SwordHand_Enemy
1  8713						 .ENDIF
2  8714	000016A1			 @C0253:
2  8715	000016A1			 @C0251:
1  8716
1  8717	000016A1  5B				 pop	 ebx
1  8718	000016A2  53				 push	 ebx
1  8719
1  8720	000016A3  8B 45	08			 mov	 eax, EnemyNum
1  8721	000016A6  0F B6	4B 0E			 movzx	 ecx, [ebx].enemy_Facing
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 154
JANE.ASM



1  8722	000016AA  51				 push	 ecx
1  8723	000016AB  8B 45	08			 mov	 eax, EnemyNum
1  8724	000016AE  0F B6	43 0C			 movzx	 eax, [ebx].enemy_State
1  8725	000016B2  50				 push	 eax
1  8726	000016B3  E8 FFFFFE07			 call	 CalcEnemyFrame
1  8727
1  8728	000016B8  5B				 pop	 ebx
1  8729
1  8730	000016B9  8B 45	08			 mov	 eax, EnemyNum
1  8731	000016BC  0F B7	43 0A			 movzx	 eax, [ebx].enemy_FrameIdx
1  8732
1  8733	000016C0  03 F0				 add	 esi, eax
1  8734	000016C2  0F B6	06			 movzx	 eax, byte ptr [esi]				 ; eax == frame	number
1  8735	000016C5  B9 00000050			 mov	 ecx, NINJA_FRAME_WIDTH
1  8736	000016CA  F7 E1				 mul	 ecx
1  8737	000016CC  8B F8				 mov	 edi, eax					 ; edx == Left in frames
1  8738
1  8739	000016CE  68 00FFFFFF			 push	 COLOURS_NINJA_TRANS
1  8740	000016D3  B8 00000064			 mov	 eax, NINJA_FRAME_HEIGHT
1  8741	000016D8  50				 push	 eax
1  8742	000016D9  6A 50				 push	 NINJA_FRAME_WIDTH
1  8743	000016DB  8B 55	08			 mov	 edx, EnemyNum
1  8744	000016DE  0F B6	4B 0E			 movzx	 ecx, [ebx].enemy_Facing
1  8745	000016E2  F7 E1				 mul	 ecx
1  8746	000016E4  50				 push	 eax						 ; eax -> Top of frame
1  8747	000016E5  57				 push	 edi
1  8748	000016E6  FF 35	00000014r		 push	 copierDC
1  8749	000016EC  6A 64				 push	 NINJA_FRAME_HEIGHT
1  8750	000016EE  6A 50				 push	 NINJA_FRAME_WIDTH
1  8751	000016F0  8B 55	08			 mov	 edx, EnemyNum
1  8752	000016F3  8B 43	04			 mov	 eax, [ebx].enemy_ScreenY
1  8753	000016F6  50				 push	 eax
1  8754	000016F7  8B 55	08			 mov	 edx, EnemyNum
1  8755	000016FA  8B 03				 mov	 eax, [ebx].enemy_ScreenX
1  8756
1  8757							 .IF [ebx].enemy_ActiveInventory == ENEMY_INVENTORY_SWORD
2  8758	000016FC  80 7B	11 01			 cmp	 [ebx].	enemy_ActiveInventory,ENEMY_INVENTORY_SWORD
2  8759	00001700  0F 85	000000D5		 jnz	 @C0255
1  8760	00001706  10*(90)					 db	 10h dup (90h)
1  8761
1  8762								 .IF byte ptr [esi] == 09h
2  8763	00001716  80 3E	09			 cmp	 byte ptr[esi],09H
2  8764	00001719  75 2F				 jnz	 @C0257
1  8765									 .IF [ebx].enemy_Facing	== NINJA_FACING_NORTH
2  8766	0000171B  80 7B	0E 00			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_NORTH
2  8767	0000171F  75 05				 jnz	 @C0259
1  8768	00001721  83 C0	14							 add	 eax, 20
1  8769									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_EAST
2  8770	00001724  EB 1F				 jmp	 @C0258
2  8771	00001726			 @C0259:
2  8772	00001726  80 7B	0E 01			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_EAST
2  8773	0000172A  75 05				 jnz	 @C0260
1  8774	0000172C  83 C0	14							 add	 eax, 20
1  8775									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_SOUTH
2  8776	0000172F  EB 14				 jmp	 @C0258
2  8777	00001731			 @C0260:
2  8778	00001731  80 7B	0E 02			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_SOUTH
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 155
JANE.ASM



2  8779	00001735  75 05				 jnz	 @C0261
1  8780	00001737  83 C0	EC							 add	 eax, -20
1  8781									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_WEST
2  8782	0000173A  EB 09				 jmp	 @C0258
2  8783	0000173C			 @C0261:
2  8784	0000173C  80 7B	0E 03			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_WEST
2  8785	00001740  75 03				 jnz	 @C0262
1  8786	00001742  83 C0	EC							 add	 eax, -20
1  8787									 .ENDIF
2  8788	00001745			 @C0262:
2  8789	00001745			 @C0258:
1  8790
1  8791								 .ELSEIF byte ptr [esi]	== 0Fh
2  8792	00001745  E9 00000091			 jmp	 @C0256
2  8793	0000174A			 @C0257:
2  8794	0000174A  80 3E	0F			 cmp	 byte ptr[esi],0FH
2  8795	0000174D  75 2C				 jnz	 @C0263
1  8796									 .IF [ebx].enemy_Facing	== NINJA_FACING_NORTH
2  8797	0000174F  80 7B	0E 00			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_NORTH
2  8798	00001753  75 05				 jnz	 @C0265
1  8799	00001755  83 C0	14							 add	 eax, 20
1  8800									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_EAST
2  8801	00001758  EB 1F				 jmp	 @C0264
2  8802	0000175A			 @C0265:
2  8803	0000175A  80 7B	0E 01			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_EAST
2  8804	0000175E  75 05				 jnz	 @C0266
1  8805	00001760  83 C0	14							 add	 eax, 20
1  8806									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_SOUTH
2  8807	00001763  EB 14				 jmp	 @C0264
2  8808	00001765			 @C0266:
2  8809	00001765  80 7B	0E 02			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_SOUTH
2  8810	00001769  75 05				 jnz	 @C0267
1  8811	0000176B  83 C0	EC							 add	 eax, -20
1  8812									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_WEST
2  8813	0000176E  EB 09				 jmp	 @C0264
2  8814	00001770			 @C0267:
2  8815	00001770  80 7B	0E 03			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_WEST
2  8816	00001774  75 03				 jnz	 @C0268
1  8817	00001776  83 C0	EC							 add	 eax, -20
1  8818									 .ENDIF
2  8819	00001779			 @C0268:
2  8820	00001779			 @C0264:
1  8821
1  8822								 .ELSEIF byte ptr [esi]	== 10h
2  8823	00001779  EB 60				 jmp	 @C0256
2  8824	0000177B			 @C0263:
2  8825	0000177B  80 3E	10			 cmp	 byte ptr[esi],10H
2  8826	0000177E  75 2C				 jnz	 @C0269
1  8827									 .IF [ebx].enemy_Facing	== NINJA_FACING_NORTH
2  8828	00001780  80 7B	0E 00			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_NORTH
2  8829	00001784  75 05				 jnz	 @C0271
1  8830	00001786  83 C0	14							 add	 eax, 20
1  8831									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_EAST
2  8832	00001789  EB 1F				 jmp	 @C0270
2  8833	0000178B			 @C0271:
2  8834	0000178B  80 7B	0E 01			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_EAST
2  8835	0000178F  75 05				 jnz	 @C0272
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 156
JANE.ASM



1  8836	00001791  83 C0	14							 add	 eax, 20
1  8837									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_SOUTH
2  8838	00001794  EB 14				 jmp	 @C0270
2  8839	00001796			 @C0272:
2  8840	00001796  80 7B	0E 02			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_SOUTH
2  8841	0000179A  75 05				 jnz	 @C0273
1  8842	0000179C  83 C0	EC							 add	 eax, -20
1  8843									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_WEST
2  8844	0000179F  EB 09				 jmp	 @C0270
2  8845	000017A1			 @C0273:
2  8846	000017A1  80 7B	0E 03			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_WEST
2  8847	000017A5  75 03				 jnz	 @C0274
1  8848	000017A7  83 C0	EC							 add	 eax, -20
1  8849									 .ENDIF
2  8850	000017AA			 @C0274:
2  8851	000017AA			 @C0270:
1  8852
1  8853								 .ELSEIF byte ptr [esi]	== 11h
2  8854	000017AA  EB 2F				 jmp	 @C0256
2  8855	000017AC			 @C0269:
2  8856	000017AC  80 3E	11			 cmp	 byte ptr[esi],11H
2  8857	000017AF  75 2A				 jnz	 @C0275
1  8858									 .IF [ebx].enemy_Facing	== NINJA_FACING_NORTH
2  8859	000017B1  80 7B	0E 00			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_NORTH
2  8860	000017B5  75 05				 jnz	 @C0277
1  8861	000017B7  83 C0	14							 add	 eax, 20
1  8862									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_EAST
2  8863	000017BA  EB 1F				 jmp	 @C0276
2  8864	000017BC			 @C0277:
2  8865	000017BC  80 7B	0E 01			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_EAST
2  8866	000017C0  75 05				 jnz	 @C0278
1  8867	000017C2  83 C0	14							 add	 eax, 20
1  8868									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_SOUTH
2  8869	000017C5  EB 14				 jmp	 @C0276
2  8870	000017C7			 @C0278:
2  8871	000017C7  80 7B	0E 02			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_SOUTH
2  8872	000017CB  75 05				 jnz	 @C0279
1  8873	000017CD  83 C0	EC							 add	 eax, -20
1  8874									 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_WEST
2  8875	000017D0  EB 09				 jmp	 @C0276
2  8876	000017D2			 @C0279:
2  8877	000017D2  80 7B	0E 03			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_WEST
2  8878	000017D6  75 03				 jnz	 @C0280
1  8879	000017D8  83 C0	EC							 add	 eax, -20
1  8880									 .ENDIF
2  8881	000017DB			 @C0280:
2  8882	000017DB			 @C0276:
1  8883
1  8884								 .ENDIF
2  8885	000017DB			 @C0275:
2  8886	000017DB			 @C0256:
1  8887							 .ENDIF
2  8888	000017DB			 @C0255:
2  8889	000017DB			 @C0254:
1  8890
1  8891	000017DB  50				 push	 eax
1  8892	000017DC  FF 35	0000000Cr		 push	 actionDC
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 157
JANE.ASM



1  8893	000017E2  E8 00000000e			 call	 TransparentBlt
1  8894
2  8895	000017E7  C9				 LEAVED
2  8896	000017E8  C2 0004			 RET	 00004h
1  8897	000017EB			 GfxDrawEnemy		 endp
1  8898
1  8899	000017EB			 GfxDrawEnemyBelow	 proc	 STDCALL, startY:DWORD
2  8900	000017EB  C8 0000 00			 ENTERD	 00000h,0
2  8901	000017EF  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  8902	000017F4  B9 0000002A			 mov	 ecx, MapRoom_Len
1  8903	000017F9  F7 E1				 mul	 ecx
1  8904	000017FB  05 0000031Dr			 add	 eax, offset Jane_Map			 ; eax -> MapRoom structure
1  8905	00001800  8B F0				 mov	 esi, eax				 ; esi -> MapRoom structure
1  8906
1  8907	00001802  8B 45	08			 mov	 eax, startY
1  8908	00001805  80 7E	0F FF			 cmp	 [esi].enemy1_LivesLeft, 0FFh
1  8909	00001809  74 19				 je	 gfxenemy_noenemyone
1  8910
1  8911	0000180B  8B 5E	06			 mov	 ebx, [esi].enemy1_ScreenY
1  8912	0000180E  83 C3	58			 add	 ebx, NINJA_FRAME_OFFSET_Y
1  8913	00001811  3B C3				 cmp	 eax, ebx
1  8914	00001813  7F 0F				 jg	 gfxenemy_noenemyone
1  8915
1  8916	00001815  56				 push	 esi
1  8917
1  8918	00001816  6A 01				 push	 1
1  8919	00001818  E8 FFFFFE27			 call	 GfxDrawEnemy
1  8920
1  8921	0000181D  5E				 pop	 esi
1  8922	0000181E  8B 46	06			 mov	 eax, [esi].enemy1_ScreenY
1  8923	00001821  83 C0	58			 add	 eax, NINJA_FRAME_OFFSET_Y
1  8924
1  8925	00001824			 gfxenemy_noenemyone:
1  8926
1  8927	00001824  80 7E	21 FF			 cmp	 [esi].enemy2_LivesLeft, 0FFh
1  8928	00001828  74 1C				 je	 gfxenemy_noenemytwo
1  8929
1  8930	0000182A  8B 45	08			 mov	 eax, startY
1  8931	0000182D  8B 5E	18			 mov	 ebx, [esi].enemy2_ScreenY
1  8932	00001830  83 C3	58			 add	 ebx, NINJA_FRAME_OFFSET_Y
1  8933	00001833  3B C3				 cmp	 eax, ebx
1  8934	00001835  7F 0F				 jg	 gfxenemy_noenemytwo
1  8935
1  8936	00001837  56				 push	 esi
1  8937
1  8938	00001838  6A 02				 push	 2
1  8939	0000183A  E8 FFFFFE05			 call	 GfxDrawEnemy
1  8940
1  8941	0000183F  5E				 pop	 esi
1  8942	00001840  8B 46	18			 mov	 eax, [esi].enemy2_ScreenY
1  8943	00001843  83 C0	58			 add	 eax, NINJA_FRAME_OFFSET_Y
1  8944
1  8945	00001846			 gfxenemy_noenemytwo:
1  8946
2  8947	00001846  C9				 LEAVED
2  8948	00001847  C2 0004			 RET	 00004h
1  8949	0000184A			 GfxDrawEnemyBelow	 endp
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 158
JANE.ASM



   8950
   8951					 INCLUDE Collision.inc
1  8952	0000184A				 .data
1  8953	00000D34  ????????		 tmpCollision		 dd	 ?
1  8954	00000D38  ????????		 tmpCollection		 dd	 ?
1  8955
1  8956	00000D3C				 .code
1  8957
1  8958	0000184A			 CollisionType		 proc	 STDCALL, locationX:DWORD, locationY:DWORD
1  8959
2  8960	0000184A  C8 0000 00			 ENTERD	 00000h,0
2  8961	0000184E  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  8962	00001853  B9 0000002A			 mov	 ecx, MapRoom_Len
1  8963	00001858  F7 E1				 mul	 ecx
1  8964	0000185A  05 0000031Dr			 add	 eax, offset Jane_Map			 ; eax -> MapRoom structure
1  8965
1  8966	0000185F  0F B7	00			 movzx	 eax, [eax].BackgroundGfx
1  8967	00001862  C1 E0	02			 shl	 eax, 2h
1  8968	00001865  05 00000120r			 add	 eax, offset bmp_MapScreens		 ; eax -> bitmap handle
1  8969
1  8970	0000186A  FF 30				 push	 dword ptr [eax]
1  8971	0000186C  FF 35	00000014r		 push	 copierDC
1  8972	00001872  E8 00000000e			 call	 SelectObject
1  8973
1  8974	00001877  8B 45	0C			 mov	 eax, locationY
1  8975	0000187A  05 00000120			 add	 eax, GAME_ACTION_HEIGHT
1  8976	0000187F  83 E8	64			 sub	 eax, NINJA_FRAME_HEIGHT
1  8977	00001882  83 C0	58			 add	 eax, NINJA_FRAME_OFFSET_Y
1  8978	00001885  8B 5D	08			 mov	 ebx, locationX
1  8979	00001888  83 EB	50			 sub	 ebx, NINJA_FRAME_WIDTH
1  8980	0000188B  83 C3	28			 add	 ebx, NINJA_FRAME_OFFSET_X
1  8981	0000188E  50				 push	 eax
1  8982	0000188F  53				 push	 ebx
1  8983	00001890  FF 35	00000014r		 push	 copierDC
1  8984	00001896  E8 00000000e			 call	 GetPixel
1  8985
2  8986	0000189B  C9				 LEAVED
2  8987	0000189C  C2 0008			 RET	 00008h
1  8988	0000189F			 CollisionType		 endp
1  8989
1  8990	0000189F			 MoveNinja		 proc	 STDCALL, direction:DWORD
2  8991	0000189F  C8 0000 00			 ENTERD	 00000h,0
2  8992	000018A3  8B 45	08			 mov	 eax, direction
1  8993	000018A6  60				 pusha
1  8994
1  8995	000018A7  8B 15	000002EDr		 mov	 edx, CurrentNinja.ScreenX
1  8996	000018AD  8B 1D	000002F1r		 mov	 ebx, CurrentNinja.ScreenY
1  8997
1  8998						 .IF eax == NINJA_CONTROL_UP
2  8999	000018B3  83 F8	01			 cmp	 eax,NINJA_CONTROL_UP
2  9000	000018B6  75 0B				 jnz	 @C0282
1  9001	000018B8  83 EB	02				 sub	 ebx, 02h
1  9002	000018BB  83 C2	08				 add	 edx, 08h
1  9003						 .ELSEIF eax ==	NINJA_CONTROL_RIGHT
2  9004	000018BE  E9 00000158			 jmp	 @C0281
2  9005	000018C3			 @C0282:
2  9006	000018C3  83 F8	02			 cmp	 eax,NINJA_CONTROL_RIGHT
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 159
JANE.ASM



2  9007	000018C6  75 0B				 jnz	 @C0283
1  9008	000018C8  83 C3	02				 add	 ebx, 02h
1  9009	000018CB  83 C2	08				 add	 edx, 08h
1  9010						 .ELSEIF eax ==	NINJA_CONTROL_LEFT
2  9011	000018CE  E9 00000148			 jmp	 @C0281
2  9012	000018D3			 @C0283:
2  9013	000018D3  83 F8	08			 cmp	 eax,NINJA_CONTROL_LEFT
2  9014	000018D6  75 0B				 jnz	 @C0284
1  9015	000018D8  83 EB	02				 sub	 ebx, 02h
1  9016	000018DB  83 EA	08				 sub	 edx, 08h
1  9017						 .ELSEIF eax ==	NINJA_CONTROL_DOWN
2  9018	000018DE  E9 00000138			 jmp	 @C0281
2  9019	000018E3			 @C0284:
2  9020	000018E3  83 F8	04			 cmp	 eax,NINJA_CONTROL_DOWN
2  9021	000018E6  75 0B				 jnz	 @C0285
1  9022	000018E8  83 C3	02				 add	 ebx, 02h
1  9023	000018EB  83 EA	08				 sub	 edx, 08h
1  9024						 .ELSEIF eax ==	NINJA_CONTROL_DOWN + NINJA_CONTROL_LEFT
2  9025	000018EE  E9 00000128			 jmp	 @C0281
2  9026	000018F3			 @C0285:
2  9027	000018F3  83 F8	0C			 cmp	 eax,NINJA_CONTROL_DOWN+NINJA_CONTROL_LEFT
2  9028	000018F6  75 47				 jnz	 @C0286
1  9029							 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
2  9030	000018F8  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  9031	000018FF  75 08				 jnz	 @C0288
1  9032	00001901  83 C3	01					 add	 ebx, 01h
1  9033	00001904  83 EA	08					 sub	 edx, 08h
1  9034							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
2  9035	00001907  EB 31				 jmp	 @C0287
2  9036	00001909			 @C0288:
2  9037	00001909  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  9038	00001910  75 08				 jnz	 @C0289
1  9039	00001912  83 EB	01					 sub	 ebx, 01h
1  9040	00001915  83 EA	08					 sub	 edx, 08h
1  9041							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
2  9042	00001918  EB 20				 jmp	 @C0287
2  9043	0000191A			 @C0289:
2  9044	0000191A  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  9045	00001921  75 08				 jnz	 @C0290
1  9046	00001923  83 C3	01					 add	 ebx, 01h
1  9047	00001926  83 EA	08					 sub	 edx, 08h
1  9048							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
2  9049	00001929  EB 0F				 jmp	 @C0287
2  9050	0000192B			 @C0290:
2  9051	0000192B  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  9052	00001932  75 06				 jnz	 @C0291
1  9053	00001934  83 EB	01					 sub	 ebx, 01h
1  9054	00001937  83 EA	08					 sub	 edx, 08h
1  9055							 .ENDIF
2  9056	0000193A			 @C0291:
2  9057	0000193A			 @C0287:
1  9058						 .ELSEIF eax ==	NINJA_CONTROL_UP + NINJA_CONTROL_RIGHT
2  9059	0000193A  E9 000000DC			 jmp	 @C0281
2  9060	0000193F			 @C0286:
2  9061	0000193F  83 F8	03			 cmp	 eax,NINJA_CONTROL_UP+NINJA_CONTROL_RIGHT
2  9062	00001942  75 47				 jnz	 @C0292
1  9063							 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 160
JANE.ASM



2  9064	00001944  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  9065	0000194B  75 08				 jnz	 @C0294
1  9066	0000194D  83 EB	01					 sub	 ebx, 01h
1  9067	00001950  83 C2	08					 add	 edx, 08h
1  9068							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
2  9069	00001953  EB 31				 jmp	 @C0293
2  9070	00001955			 @C0294:
2  9071	00001955  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  9072	0000195C  75 08				 jnz	 @C0295
1  9073	0000195E  83 C3	01					 add	 ebx, 01h
1  9074	00001961  83 C2	08					 add	 edx, 08h
1  9075							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
2  9076	00001964  EB 20				 jmp	 @C0293
2  9077	00001966			 @C0295:
2  9078	00001966  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  9079	0000196D  75 08				 jnz	 @C0296
1  9080	0000196F  83 EB	01					 sub	 ebx, 01h
1  9081	00001972  83 C2	08					 add	 edx, 08h
1  9082							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
2  9083	00001975  EB 0F				 jmp	 @C0293
2  9084	00001977			 @C0296:
2  9085	00001977  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  9086	0000197E  75 06				 jnz	 @C0297
1  9087	00001980  83 C3	01					 add	 ebx, 01h
1  9088	00001983  83 C2	08					 add	 edx, 08h
1  9089							 .ENDIF
2  9090	00001986			 @C0297:
2  9091	00001986			 @C0293:
1  9092						 .ELSEIF eax ==	NINJA_CONTROL_DOWN + NINJA_CONTROL_RIGHT
2  9093	00001986  E9 00000090			 jmp	 @C0281
2  9094	0000198B			 @C0292:
2  9095	0000198B  83 F8	06			 cmp	 eax,NINJA_CONTROL_DOWN+NINJA_CONTROL_RIGHT
2  9096	0000198E  75 44				 jnz	 @C0298
1  9097							 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
2  9098	00001990  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  9099	00001997  75 08				 jnz	 @C0300
1  9100	00001999  83 C3	04					 add	 ebx, 04h
1  9101	0000199C  83 EA	08					 sub	 edx, 08h
1  9102							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
2  9103	0000199F  EB 31				 jmp	 @C0299
2  9104	000019A1			 @C0300:
2  9105	000019A1  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  9106	000019A8  75 08				 jnz	 @C0301
1  9107	000019AA  83 C3	04					 add	 ebx, 04h
1  9108	000019AD  83 C2	08					 add	 edx, 08h
1  9109							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
2  9110	000019B0  EB 20				 jmp	 @C0299
2  9111	000019B2			 @C0301:
2  9112	000019B2  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  9113	000019B9  75 08				 jnz	 @C0302
1  9114	000019BB  83 C3	04					 add	 ebx, 04h
1  9115	000019BE  83 EA	08					 sub	 edx, 08h
1  9116							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
2  9117	000019C1  EB 0F				 jmp	 @C0299
2  9118	000019C3			 @C0302:
2  9119	000019C3  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  9120	000019CA  75 06				 jnz	 @C0303
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 161
JANE.ASM



1  9121	000019CC  83 C3	04					 add	 ebx, 04h
1  9122	000019CF  83 C2	08					 add	 edx, 08h
1  9123							 .ENDIF
2  9124	000019D2			 @C0303:
2  9125	000019D2			 @C0299:
1  9126						 .ELSEIF eax ==	NINJA_CONTROL_UP + NINJA_CONTROL_LEFT
2  9127	000019D2  EB 47				 jmp	 @C0281
2  9128	000019D4			 @C0298:
2  9129	000019D4  83 F8	09			 cmp	 eax,NINJA_CONTROL_UP+NINJA_CONTROL_LEFT
2  9130	000019D7  75 42				 jnz	 @C0304
1  9131							 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
2  9132	000019D9  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  9133	000019E0  75 08				 jnz	 @C0306
1  9134	000019E2  83 EB	04					 sub	 ebx, 04h
1  9135	000019E5  83 C2	08					 add	 edx, 08h
1  9136							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
2  9137	000019E8  EB 31				 jmp	 @C0305
2  9138	000019EA			 @C0306:
2  9139	000019EA  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  9140	000019F1  75 08				 jnz	 @C0307
1  9141	000019F3  83 EB	04					 sub	 ebx, 04h
1  9142	000019F6  83 EA	08					 sub	 edx, 08h
1  9143							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
2  9144	000019F9  EB 20				 jmp	 @C0305
2  9145	000019FB			 @C0307:
2  9146	000019FB  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  9147	00001A02  75 08				 jnz	 @C0308
1  9148	00001A04  83 EB	04					 sub	 ebx, 04h
1  9149	00001A07  83 C2	08					 add	 edx, 08h
1  9150							 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
2  9151	00001A0A  EB 0F				 jmp	 @C0305
2  9152	00001A0C			 @C0308:
2  9153	00001A0C  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  9154	00001A13  75 06				 jnz	 @C0309
1  9155	00001A15  83 EB	04					 sub	 ebx, 04h
1  9156	00001A18  83 EA	08					 sub	 edx, 08h
1  9157							 .ENDIF
2  9158	00001A1B			 @C0309:
2  9159	00001A1B			 @C0305:
1  9160						 .ENDIF
2  9161	00001A1B			 @C0304:
2  9162	00001A1B			 @C0281:
1  9163
1  9164	00001A1B  60				 pusha
1  9165	00001A1C  53				 push	 ebx
1  9166	00001A1D  52				 push	 edx
1  9167	00001A1E  E8 FFFFFE27			 call	 CollisionType
1  9168	00001A23  A3 00000D34r			 mov	 tmpCollision, eax
1  9169	00001A28  61				 popa
1  9170
1  9171						 .IF tmpCollision != COLOURS_MAP_NOWALK
2  9172	00001A29  81 3D	00000D34r     +		 cmp	 tmpCollision,COLOURS_MAP_NOWALK
   9173		  00006600
2  9174	00001A33  74 4D				 jz	 @C0311
1  9175							 .IF tmpCollision == COLOURS_MAP_TRANSITION
2  9176	00001A35  83 3D	00000D34r FF		 cmp	 tmpCollision,COLOURS_MAP_TRANSITION
2  9177	00001A3C  75 0C				 jnz	 @C0313
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 162
JANE.ASM



1  9178	00001A3E  68 000000FF					 push	 NINJA_STATE_TRANSITION
1  9179	00001A43  E8 FFFFF435					 call	 SetNinjaState
1  9180							 .ELSEIF tmpCollision == COLOURS_MAP_WATER
2  9181	00001A48  EB 38				 jmp	 @C0312
2  9182	00001A4A			 @C0313:
2  9183	00001A4A  81 3D	00000D34r     +		 cmp	 tmpCollision,COLOURS_MAP_WATER
   9184		  00FF6600
2  9185	00001A54  75 20				 jnz	 @C0314
1  9186								 .IF CurrentNinja.State	!= NINJA_STATE_JUMPING
2  9187	00001A56  80 3D	000002F9r 02		 cmp	 CurrentNinja .	State,NINJA_STATE_JUMPING
2  9188	00001A5D  74 09				 jz	 @C0316
1  9189	00001A5F  6A 0A							 push	 NINJA_STATE_DROWNING
1  9190	00001A61  E8 FFFFF417						 call	 SetNinjaState
1  9191								 .ELSE
2  9192	00001A66  EB 0C				 jmp	 @C0315
2  9193	00001A68			 @C0316:
1  9194	00001A68  89 15	000002EDr					 mov	 CurrentNinja.ScreenX, edx
1  9195	00001A6E  89 1D	000002F1r					 mov	 CurrentNinja.ScreenY, ebx
1  9196								 .ENDIF
2  9197	00001A74			 @C0315:
1  9198							 .ELSE
2  9199	00001A74  EB 0C				 jmp	 @C0312
2  9200	00001A76			 @C0314:
1  9201	00001A76  89 15	000002EDr				 mov	 CurrentNinja.ScreenX, edx
1  9202	00001A7C  89 1D	000002F1r				 mov	 CurrentNinja.ScreenY, ebx
1  9203							 .ENDIF
2  9204	00001A82			 @C0312:
1  9205						 .ENDIF
2  9206	00001A82			 @C0311:
2  9207	00001A82			 @C0310:
1  9208
1  9209	00001A82  61				 popa
2  9210	00001A83  C9				 LEAVED
2  9211	00001A84  C2 0004			 RET	 00004h
1  9212	00001A87			 MoveNinja		 endp
1  9213
1  9214
1  9215	00001A87			 MoveEnemy		 proc	 STDCALL, enemyPtr:DWORD
2  9216	00001A87  C8 0000 00			 ENTERD	 00000h,0
2  9217	00001A8B  8B 45	08			 mov	 eax, enemyPtr
1  9218	00001A8E  60				 pusha
1  9219
1  9220	00001A8F  8B 10				 mov	 edx, [eax].enemy_ScreenX
1  9221	00001A91  8B 58	04			 mov	 ebx, [eax].enemy_ScreenY
1  9222
1  9223						 .IF [eax].enemy_Facing	== NINJA_FACING_NORTH
2  9224	00001A94  80 78	0E 00			 cmp	 [eax].	enemy_Facing,NINJA_FACING_NORTH
2  9225	00001A98  75 08				 jnz	 @C0318
1  9226	00001A9A  83 EB	02				 sub	 ebx, 02h
1  9227	00001A9D  83 C2	08				 add	 edx, 08h
1  9228						 .ELSEIF [eax].enemy_Facing == NINJA_FACING_EAST
2  9229	00001AA0  EB 28				 jmp	 @C0317
2  9230	00001AA2			 @C0318:
2  9231	00001AA2  80 78	0E 01			 cmp	 [eax].	enemy_Facing,NINJA_FACING_EAST
2  9232	00001AA6  75 08				 jnz	 @C0319
1  9233	00001AA8  83 C3	02				 add	 ebx, 02h
1  9234	00001AAB  83 C2	08				 add	 edx, 08h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 163
JANE.ASM



1  9235						 .ELSEIF [eax].enemy_Facing == NINJA_FACING_WEST
2  9236	00001AAE  EB 1A				 jmp	 @C0317
2  9237	00001AB0			 @C0319:
2  9238	00001AB0  80 78	0E 03			 cmp	 [eax].	enemy_Facing,NINJA_FACING_WEST
2  9239	00001AB4  75 08				 jnz	 @C0320
1  9240	00001AB6  83 EB	02				 sub	 ebx, 02h
1  9241	00001AB9  83 EA	08				 sub	 edx, 08h
1  9242						 .ELSEIF [eax].enemy_Facing == NINJA_FACING_SOUTH
2  9243	00001ABC  EB 0C				 jmp	 @C0317
2  9244	00001ABE			 @C0320:
2  9245	00001ABE  80 78	0E 02			 cmp	 [eax].	enemy_Facing,NINJA_FACING_SOUTH
2  9246	00001AC2  75 06				 jnz	 @C0321
1  9247	00001AC4  83 C3	02				 add	 ebx, 02h
1  9248	00001AC7  83 EA	08				 sub	 edx, 08h
1  9249						 .ENDIF
2  9250	00001ACA			 @C0321:
2  9251	00001ACA			 @C0317:
1  9252
1  9253	00001ACA  60				 pusha
1  9254	00001ACB  53				 push	 ebx
1  9255	00001ACC  52				 push	 edx
1  9256	00001ACD  E8 FFFFFD78			 call	 CollisionType
1  9257	00001AD2  A3 00000D34r			 mov	 tmpCollision, eax
1  9258	00001AD7  61				 popa
1  9259
1  9260						 .IF tmpCollision == COLOURS_MAP_WALK
2  9261	00001AD8  81 3D	00000D34r     +		 cmp	 tmpCollision,COLOURS_MAP_WALK
   9262		  0099CCCC
2  9263	00001AE2  75 07				 jnz	 @C0323
1  9264	00001AE4  89 10					 mov	 [eax].enemy_ScreenX, edx
1  9265	00001AE6  89 58	04				 mov	 [eax].enemy_ScreenY, ebx
1  9266						 .ELSE
2  9267	00001AE9  EB 2E				 jmp	 @C0322
2  9268	00001AEB			 @C0323:
1  9269							 .IF [eax].enemy_Facing	== NINJA_FACING_NORTH
2  9270	00001AEB  80 78	0E 00			 cmp	 [eax].	enemy_Facing,NINJA_FACING_NORTH
2  9271	00001AEF  75 06				 jnz	 @C0325
1  9272	00001AF1  C6 40	0E 02					 mov	 [eax].enemy_Facing, NINJA_FACING_SOUTH
1  9273							 .ELSEIF [eax].enemy_Facing == NINJA_FACING_EAST
2  9274	00001AF5  EB 22				 jmp	 @C0324
2  9275	00001AF7			 @C0325:
2  9276	00001AF7  80 78	0E 01			 cmp	 [eax].	enemy_Facing,NINJA_FACING_EAST
2  9277	00001AFB  75 06				 jnz	 @C0326
1  9278	00001AFD  C6 40	0E 03					 mov	 [eax].enemy_Facing, NINJA_FACING_WEST
1  9279							 .ELSEIF [eax].enemy_Facing == NINJA_FACING_WEST
2  9280	00001B01  EB 16				 jmp	 @C0324
2  9281	00001B03			 @C0326:
2  9282	00001B03  80 78	0E 03			 cmp	 [eax].	enemy_Facing,NINJA_FACING_WEST
2  9283	00001B07  75 06				 jnz	 @C0327
1  9284	00001B09  C6 40	0E 01					 mov	 [eax].enemy_Facing, NINJA_FACING_EAST
1  9285							 .ELSEIF [eax].enemy_Facing == NINJA_FACING_SOUTH
2  9286	00001B0D  EB 0A				 jmp	 @C0324
2  9287	00001B0F			 @C0327:
2  9288	00001B0F  80 78	0E 02			 cmp	 [eax].	enemy_Facing,NINJA_FACING_SOUTH
2  9289	00001B13  75 04				 jnz	 @C0328
1  9290	00001B15  C6 40	0E 00					 mov	 [eax].enemy_Facing, NINJA_FACING_NORTH
1  9291							 .ENDIF
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 164
JANE.ASM



2  9292	00001B19			 @C0328:
2  9293	00001B19			 @C0324:
1  9294						 .ENDIF
2  9295	00001B19			 @C0322:
1  9296
1  9297	00001B19  61				 popa
2  9298	00001B1A  C9				 LEAVED
2  9299	00001B1B  C2 0004			 RET	 00004h
1  9300	00001B1E			 MoveEnemy		 endp
1  9301
1  9302
1  9303	00001B1E			 AttackCollisionNinja		 proc	 STDCALL
1  9304
1  9305	00001B1E  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  9306	00001B23  B9 0000002A			 mov	 ecx, MapRoom_Len
1  9307	00001B28  F7 E1				 mul	 ecx
1  9308	00001B2A  05 0000031Dr			 add	 eax, offset Jane_Map			 ; eax -> screen data
1  9309	00001B2F  8B 48	26			 mov	 ecx, [eax].screen_ObjectList	 ; ecx -> list of scenery
1  9310
1  9311	00001B32  8B 35	000002EDr		 mov	 esi, CurrentNinja.ScreenX
1  9312	00001B38  83 EE	50			 sub	 esi, NINJA_FRAME_WIDTH
1  9313	00001B3B  8B 3D	000002F1r		 mov	 edi, CurrentNinja.ScreenY
1  9314						 .IF CurrentNinja.State	== NINJA_STATE_JABING
2  9315	00001B41  80 3D	000002F9r 0C		 cmp	 CurrentNinja .	State,NINJA_STATE_JABING
2  9316	00001B48  75 05				 jnz	 @C0330
1  9317	00001B4A  83 EF	64				 sub	 edi, NINJA_FRAME_HEIGHT
1  9318						 .ELSE
2  9319	00001B4D  EB 03				 jmp	 @C0329
2  9320	00001B4F			 @C0330:
1  9321	00001B4F  83 EF	32				 sub	 edi, NINJA_FRAME_HEIGHT / 2
1  9322						 .ENDIF
2  9323	00001B52			 @C0329:
1  9324
1  9325						 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
2  9326	00001B52  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  9327	00001B59  75 05				 jnz	 @C0332
1  9328	00001B5B  83 C6	46				 add	 esi, NINJA_FRAME_WIDTH	- 10
1  9329						 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
2  9330	00001B5E  EB 28				 jmp	 @C0331
2  9331	00001B60			 @C0332:
2  9332	00001B60  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  9333	00001B67  75 05				 jnz	 @C0333
1  9334	00001B69  83 C6	46				 add	 esi, NINJA_FRAME_WIDTH	- 10
1  9335						 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
2  9336	00001B6C  EB 1A				 jmp	 @C0331
2  9337	00001B6E			 @C0333:
2  9338	00001B6E  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  9339	00001B75  75 05				 jnz	 @C0334
1  9340	00001B77  83 C6	0A				 add	 esi, 10
1  9341						 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
2  9342	00001B7A  EB 0C				 jmp	 @C0331
2  9343	00001B7C			 @C0334:
2  9344	00001B7C  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  9345	00001B83  75 03				 jnz	 @C0335
1  9346	00001B85  83 C6	0A				 add	 esi, 10
1  9347						 .ENDIF
2  9348	00001B88			 @C0335:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 165
JANE.ASM



2  9349	00001B88			 @C0331:
1  9350
1  9351	00001B88			 attackcollision_rescan:
1  9352	00001B88  60				 pusha
1  9353
1  9354	00001B89  57				 push	 edi
1  9355	00001B8A  56				 push	 esi
1  9356	00001B8B  51				 push	 ecx
1  9357	00001B8C  E8 000000E6			 call	 IsObjectInColiision
1  9358	00001B91  0B C0				 or	 eax,eax
1  9359	00001B93  74 0F				 jz	 attackcollision_none
1  9360
1  9361	00001B95  61				 popa
1  9362
1  9363						 .IF [ecx].AttackFunction != 0
2  9364	00001B96  83 79	08 00			 cmp	 [ecx].	AttackFunction,0
2  9365	00001B9A  74 07				 jz	 @C0337
1  9366
1  9367	00001B9C  8B 41	08				 mov	 eax, [ecx].AttackFunction
1  9368	00001B9F  60					 pusha
1  9369	00001BA0  FF D0					 call	 eax
1  9370	00001BA2  61					 popa
1  9371
1  9372						 .ENDIF
2  9373	00001BA3			 @C0337:
2  9374	00001BA3			 @C0336:
1  9375	00001BA3  60				 pusha
1  9376
1  9377	00001BA4			 attackcollision_none:
1  9378	00001BA4  61				 popa
1  9379	00001BA5  83 C1	1A			 add	 ecx, Object_Len
1  9380	00001BA8  80 39	00			 cmp	 byte ptr [ecx], 00h
1  9381	00001BAB  75 DB				 jne	 attackcollision_rescan
1  9382
1  9383	00001BAD			 attackcollision_leave:
1  9384	00001BAD  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  9385	00001BB2  B9 0000002A			 mov	 ecx, MapRoom_Len
1  9386	00001BB7  F7 E1				 mul	 ecx
1  9387	00001BB9  05 0000031Dr			 add	 eax, offset Jane_Map
1  9388	00001BBE  50				 push	 eax
1  9389	00001BBF  8D 58	02			 lea	 ebx, [eax].enemy1_ScreenX
1  9390
1  9391						 .IF [ebx].enemy_LivesLeft != 0FFh
2  9392	00001BC2  80 7B	0D FF			 cmp	 [ebx].	enemy_LivesLeft,0FFH
2  9393	00001BC6  74 06				 jz	 @C0339
1  9394	00001BC8  53					 push	 ebx
1  9395	00001BC9  E8 00000141				 call	 IsEnemyCollision
1  9396						 .ENDIF
2  9397	00001BCE			 @C0339:
2  9398	00001BCE			 @C0338:
1  9399
1  9400	00001BCE  58				 pop	 eax
1  9401	00001BCF  8D 58	14			 lea	 ebx, [eax].enemy2_ScreenX
1  9402
1  9403						 .IF [ebx].enemy_LivesLeft != 0FFh
2  9404	00001BD2  80 7B	0D FF			 cmp	 [ebx].	enemy_LivesLeft,0FFH
2  9405	00001BD6  74 06				 jz	 @C0341
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 166
JANE.ASM



1  9406	00001BD8  53					 push	 ebx
1  9407	00001BD9  E8 00000131				 call	 IsEnemyCollision
1  9408						 .ENDIF
2  9409	00001BDE			 @C0341:
2  9410	00001BDE			 @C0340:
1  9411
2  9412	00001BDE  C3				 RET	 00000h
1  9413	00001BDF			 AttackCollisionNinja		 endp
1  9414
1  9415	00001BDF			 PickupCollisionNinja		 proc	 STDCALL
1  9416
1  9417	00001BDF  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  9418	00001BE4  B9 0000002A			 mov	 ecx, MapRoom_Len
1  9419	00001BE9  F7 E1				 mul	 ecx
1  9420	00001BEB  05 0000031Dr			 add	 eax, offset Jane_Map			 ; eax -> screen data
1  9421	00001BF0  8B 48	26			 mov	 ecx, [eax].screen_ObjectList	 ; ecx -> list of scenery
1  9422
1  9423	00001BF3  8B 35	000002EDr		 mov	 esi, CurrentNinja.ScreenX
1  9424	00001BF9  83 EE	50			 sub	 esi, NINJA_FRAME_WIDTH
1  9425	00001BFC  8B 3D	000002F1r		 mov	 edi, CurrentNinja.ScreenY
1  9426	00001C02  83 EF	32			 sub	 edi, NINJA_FRAME_HEIGHT / 2
1  9427
1  9428						 .IF CurrentNinja.Facing == NINJA_FACING_NORTH
2  9429	00001C05  80 3D	000002FBr 00		 cmp	 CurrentNinja .	Facing,NINJA_FACING_NORTH
2  9430	00001C0C  75 05				 jnz	 @C0343
1  9431	00001C0E  83 C6	46				 add	 esi, NINJA_FRAME_WIDTH	- 10
1  9432						 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_EAST
2  9433	00001C11  EB 28				 jmp	 @C0342
2  9434	00001C13			 @C0343:
2  9435	00001C13  80 3D	000002FBr 01		 cmp	 CurrentNinja .	Facing,NINJA_FACING_EAST
2  9436	00001C1A  75 05				 jnz	 @C0344
1  9437	00001C1C  83 C6	46				 add	 esi, NINJA_FRAME_WIDTH	- 10
1  9438						 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_SOUTH
2  9439	00001C1F  EB 1A				 jmp	 @C0342
2  9440	00001C21			 @C0344:
2  9441	00001C21  80 3D	000002FBr 02		 cmp	 CurrentNinja .	Facing,NINJA_FACING_SOUTH
2  9442	00001C28  75 05				 jnz	 @C0345
1  9443	00001C2A  83 C6	0A				 add	 esi, 10
1  9444						 .ELSEIF CurrentNinja.Facing ==	NINJA_FACING_WEST
2  9445	00001C2D  EB 0C				 jmp	 @C0342
2  9446	00001C2F			 @C0345:
2  9447	00001C2F  80 3D	000002FBr 03		 cmp	 CurrentNinja .	Facing,NINJA_FACING_WEST
2  9448	00001C36  75 03				 jnz	 @C0346
1  9449	00001C38  83 C6	0A				 add	 esi, 10
1  9450						 .ENDIF
2  9451	00001C3B			 @C0346:
2  9452	00001C3B			 @C0342:
1  9453
1  9454	00001C3B			 pickupcollision_rescan:
1  9455	00001C3B  60				 pusha
1  9456
1  9457	00001C3C  57				 push	 edi
1  9458	00001C3D  56				 push	 esi
1  9459	00001C3E  51				 push	 ecx
1  9460	00001C3F  E8 00000033			 call	 IsObjectInColiision
1  9461	00001C44  0B C0				 or	 eax,eax
1  9462	00001C46  74 25				 jz	 pickupcollision_none
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 167
JANE.ASM



1  9463
1  9464	00001C48  61				 popa
1  9465
1  9466						 ;;; Is	Item Pickup?! If so, collect!
1  9467						 .IF [ecx].Collect_Qty > 0
2  9468	00001C49  80 79	19 00			 cmp	 [ecx].	Collect_Qty,0
2  9469	00001C4D  76 1D				 jbe	 @C0348
1  9470
1  9471	00001C4F  0F B6	41 18				 movzx	 eax, [ecx].Collect_InvIdx
1  9472	00001C53  BB 00000006				 mov	 ebx, Inventory_Len
1  9473	00001C58  F7 E3					 mul	 ebx
1  9474	00001C5A  05 00000BA5r				 add	 eax, offset InventoryList	 ; eax -> Inventory Item
1  9475
1  9476	00001C5F  8A 59	19				 mov	 bl, [ecx].Collect_Qty
1  9477	00001C62  88 58	04				 mov	 [eax].QtyHeld,	bl		 ; Increase held qty
1  9478
1  9479	00001C65  C7 41	04 00000240			 mov	 [ecx].ScreenY,	GAME_ACTION_HEIGHT * 2		 ; Remove pickup
1  9480
1  9481						 .ENDIF
2  9482	00001C6C			 @C0348:
2  9483	00001C6C			 @C0347:
1  9484
1  9485	00001C6C  60				 pusha
1  9486
1  9487	00001C6D			 pickupcollision_none:
1  9488	00001C6D  61				 popa
1  9489	00001C6E  83 C1	1A			 add	 ecx, Object_Len
1  9490	00001C71  80 39	00			 cmp	 byte ptr [ecx], 00h
1  9491	00001C74  75 C5				 jne	 pickupcollision_rescan
1  9492
1  9493	00001C76			 pickupcollision_leave:
2  9494	00001C76  C3				 RET	 00000h
1  9495	00001C77			 PickupCollisionNinja		 endp
1  9496
1  9497	00001C77			 IsObjectInColiision		 proc	 STDCALL, offObject:DWORD, locationX:DWORD,	    +
   9498					 locationY:DWORD
2  9499	00001C77  C8 0000 00			 ENTERD	 00000h,0
2  9500	00001C7B  8B 75	08			 mov	 esi, offObject
1  9501	00001C7E  8B 5D	0C			 mov	 ebx, locationX
1  9502	00001C81  8B 55	10			 mov	 edx, locationY
1  9503
1  9504	00001C84  0F B7	46 10			 movzx	 eax, [esi].ObjectGfx
1  9505	00001C88  C1 E0	02			 shl	 eax, 2h
1  9506	00001C8B  05 000000E8r			 add	 eax, offset bmp_Objects	 ; eax -> bitmap handle
1  9507
1  9508						 .IF edx >= [esi].ScreenY
2  9509	00001C90  3B 56	04			 cmp	 edx,[esi]. ScreenY
2  9510	00001C93  72 3A				 jb	 @C0350
1  9511	00001C95  60					 pusha
1  9512	00001C96  68 0000001Cr				 push	 offset	bitmapDimensions
1  9513	00001C9B  6A 18					 push	 BITMAP_
1  9514	00001C9D  FF 30					 push	 dword ptr [eax]
1  9515	00001C9F  E8 00000000e				 call	 GetObject				 ; bitmapDimensions holds   +
   9516					 dimensions
1  9517	00001CA4  61					 popa
1  9518
1  9519	00001CA5  2B 15	00000024r			 sub	 edx, bitmapDimensions.bm_bmHeight
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 168
JANE.ASM



1  9520
1  9521							 .IF edx <= [esi].ScreenY
2  9522	00001CAB  3B 56	04			 cmp	 edx,[esi]. ScreenY
2  9523	00001CAE  77 1B				 ja	 @C0352
1  9524
1  9525								 ; Item	is within Y range, now check X range
1  9526								 .IF ebx >= [esi].ScreenX
2  9527	00001CB0  3B 1E				 cmp	 ebx,[esi]. ScreenX
2  9528	00001CB2  72 13				 jb	 @C0354
1  9529	00001CB4  2B 1D	00000020r					 sub	 ebx, bitmapDimensions.bm_bmWidth
1  9530
1  9531									 .IF ebx <= [esi].ScreenX
2  9532	00001CBA  3B 1E				 cmp	 ebx,[esi]. ScreenX
2  9533	00001CBC  77 05				 ja	 @C0356
1  9534	00001CBE  33 C0								 xor	 eax, eax
1  9535	00001CC0  48								 dec	 eax
1  9536									 .ELSE
2  9537	00001CC1  EB 02				 jmp	 @C0355
2  9538	00001CC3			 @C0356:
1  9539	00001CC3  33 C0								 xor	 eax, eax
1  9540									 .ENDIF
2  9541	00001CC5			 @C0355:
1  9542								 .ELSE
2  9543	00001CC5  EB 02				 jmp	 @C0353
2  9544	00001CC7			 @C0354:
1  9545	00001CC7  33 C0							 xor	 eax, eax
1  9546								 .ENDIF
2  9547	00001CC9			 @C0353:
1  9548
1  9549							 .ELSE
2  9550	00001CC9  EB 02				 jmp	 @C0351
2  9551	00001CCB			 @C0352:
1  9552	00001CCB  33 C0						 xor	 eax, eax
1  9553							 .ENDIF
2  9554	00001CCD			 @C0351:
1  9555						 .ELSE
2  9556	00001CCD  EB 02				 jmp	 @C0349
2  9557	00001CCF			 @C0350:
1  9558	00001CCF  33 C0					 xor	 eax, eax
1  9559						 .ENDIF
2  9560	00001CD1			 @C0349:
1  9561
2  9562	00001CD1  C9				 LEAVED
2  9563	00001CD2  C2 000C			 RET	 0000Ch
1  9564	00001CD5			 IsObjectInColiision		 endp
1  9565
1  9566	00001CD5			 GiveDamage		 proc	 STDCALL, enemyStruc:DWORD, Amount:DWORD
2  9567	00001CD5  C8 0000 00			 ENTERD	 00000h,0
2  9568	00001CD9  60				 pusha
1  9569	00001CDA  8B 45	0C			 mov	 eax, Amount
1  9570	00001CDD  8B 7D	08			 mov	 edi, enemyStruc
1  9571	00001CE0  0F B7	5F 0F			 movzx	 ebx, [edi].enemy_Health
1  9572
1  9573						 .IF eax >= ebx
2  9574	00001CE4  3B C3				 cmp	 eax,ebx
2  9575	00001CE6  72 12				 jb	 @C0358
1  9576	00001CE8  66| C7 47 0F 0000			 mov	 [edi].enemy_Health, 00h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 169
JANE.ASM



1  9577	00001CEE  C6 47	0C 08				 mov	 [edi].enemy_State, NINJA_STATE_DYING
1  9578	00001CF2  66| C7 47 0A 0000			 mov	 [edi].enemy_FrameIdx, 00h
1  9579						 .ELSE
2  9580	00001CF8  EB 10				 jmp	 @C0357
2  9581	00001CFA			 @C0358:
1  9582	00001CFA  2B D8					 sub	 ebx, eax
1  9583	00001CFC  66| 89 5F 0F				 mov	 [edi].enemy_Health, bx
1  9584	00001D00  C6 47	0C 07				 mov	 [edi].enemy_State, NINJA_STATE_HURT
1  9585	00001D04  66| C7 47 0A 0000			 mov	 [edi].enemy_FrameIdx, 00h
1  9586						 .ENDIF
2  9587	00001D0A			 @C0357:
1  9588	00001D0A  61				 popa
2  9589	00001D0B  C9				 LEAVED
2  9590	00001D0C  C2 0008			 RET	 00008h
1  9591	00001D0F			 GiveDamage		 endp
1  9592
1  9593	00001D0F			 IsEnemyCollision	 proc	 STDCALL, enemyStruc:DWORD
2  9594	00001D0F  C8 0000 00			 ENTERD	 00000h,0
2  9595	00001D13  60				 pusha
1  9596	00001D14  8B 1D	000002EDr		 mov	 ebx, CurrentNinja.ScreenX
1  9597	00001D1A  8B 15	000002F1r		 mov	 edx, CurrentNinja.ScreenY
1  9598	00001D20  8A 2D	000002FBr		 mov	 ch, CurrentNinja.Facing
1  9599						 .IF CurrentNinja.ActiveInventory == 1		 ;Sword
2  9600	00001D26  80 3D	000002FEr 01		 cmp	 CurrentNinja .	ActiveInventory,1
2  9601	00001D2D  75 34				 jnz	 @C0360
1  9602							 .IF ch	== NINJA_FACING_NORTH
2  9603	00001D2F  80 FD	00			 cmp	 ch,NINJA_FACING_NORTH
2  9604	00001D32  75 08				 jnz	 @C0362
1  9605	00001D34  83 C3	30					 add	 ebx, 30h
1  9606	00001D37  83 EA	0C					 sub	 edx, 0Ch
1  9607							 .ELSEIF ch == NINJA_FACING_EAST
2  9608	00001D3A  EB 25				 jmp	 @C0361
2  9609	00001D3C			 @C0362:
2  9610	00001D3C  80 FD	01			 cmp	 ch,NINJA_FACING_EAST
2  9611	00001D3F  75 08				 jnz	 @C0363
1  9612	00001D41  83 C3	30					 add	 ebx, 30h
1  9613	00001D44  83 C2	0C					 add	 edx, 0Ch
1  9614							 .ELSEIF ch == NINJA_FACING_WEST
2  9615	00001D47  EB 18				 jmp	 @C0361
2  9616	00001D49			 @C0363:
2  9617	00001D49  80 FD	03			 cmp	 ch,NINJA_FACING_WEST
2  9618	00001D4C  75 08				 jnz	 @C0364
1  9619	00001D4E  83 EB	30					 sub	 ebx, 30h
1  9620	00001D51  83 EA	0C					 sub	 edx, 0Ch
1  9621							 .ELSEIF ch == NINJA_FACING_SOUTH
2  9622	00001D54  EB 0B				 jmp	 @C0361
2  9623	00001D56			 @C0364:
2  9624	00001D56  80 FD	02			 cmp	 ch,NINJA_FACING_SOUTH
2  9625	00001D59  75 06				 jnz	 @C0365
1  9626	00001D5B  83 EB	30					 sub	 ebx, 30h
1  9627	00001D5E  83 C2	0C					 add	 edx, 0Ch
1  9628							 .ENDIF
2  9629	00001D61			 @C0365:
2  9630	00001D61			 @C0361:
1  9631						 .ELSE
2  9632	00001D61  EB 32				 jmp	 @C0359
2  9633	00001D63			 @C0360:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 170
JANE.ASM



1  9634							 .IF ch	== NINJA_FACING_NORTH
2  9635	00001D63  80 FD	00			 cmp	 ch,NINJA_FACING_NORTH
2  9636	00001D66  75 08				 jnz	 @C0367
1  9637	00001D68  83 C3	20					 add	 ebx, 20h
1  9638	00001D6B  83 EA	08					 sub	 edx, 08h
1  9639							 .ELSEIF ch == NINJA_FACING_EAST
2  9640	00001D6E  EB 25				 jmp	 @C0366
2  9641	00001D70			 @C0367:
2  9642	00001D70  80 FD	01			 cmp	 ch,NINJA_FACING_EAST
2  9643	00001D73  75 08				 jnz	 @C0368
1  9644	00001D75  83 C3	20					 add	 ebx, 20h
1  9645	00001D78  83 C2	08					 add	 edx, 08h
1  9646							 .ELSEIF ch == NINJA_FACING_WEST
2  9647	00001D7B  EB 18				 jmp	 @C0366
2  9648	00001D7D			 @C0368:
2  9649	00001D7D  80 FD	03			 cmp	 ch,NINJA_FACING_WEST
2  9650	00001D80  75 08				 jnz	 @C0369
1  9651	00001D82  83 EB	20					 sub	 ebx, 20h
1  9652	00001D85  83 EA	08					 sub	 edx, 08h
1  9653							 .ELSEIF ch == NINJA_FACING_SOUTH
2  9654	00001D88  EB 0B				 jmp	 @C0366
2  9655	00001D8A			 @C0369:
2  9656	00001D8A  80 FD	02			 cmp	 ch,NINJA_FACING_SOUTH
2  9657	00001D8D  75 06				 jnz	 @C0370
1  9658	00001D8F  83 EB	20					 sub	 ebx, 20h
1  9659	00001D92  83 C2	08					 add	 edx, 08h
1  9660							 .ENDIF
2  9661	00001D95			 @C0370:
2  9662	00001D95			 @C0366:
1  9663						 .ENDIF
2  9664	00001D95			 @C0359:
1  9665
1  9666	00001D95  8B 45	08			 mov	 eax, enemyStruc
1  9667	00001D98  8B 48	04			 mov	 ecx, [eax].enemy_ScreenY
1  9668	00001D9B  83 E9	08			 sub	 ecx, 08h
1  9669						 .IF ecx <= edx
2  9670	00001D9E  3B CA				 cmp	 ecx,edx
2  9671	00001DA0  0F 87	000000AE		 ja	 @C0372
1  9672	00001DA6  83 C1	10				 add	 ecx, 10h
1  9673							 .IF ecx >= edx
2  9674	00001DA9  3B CA				 cmp	 ecx,edx
2  9675	00001DAB  0F 82	000000A3		 jb	 @C0374
1  9676	00001DB1  8B 08						 mov	 ecx, [eax].enemy_ScreenX
1  9677	00001DB3  83 E9	20					 sub	 ecx, 20h
1  9678								 .IF ecx <= ebx
2  9679	00001DB6  3B CB				 cmp	 ecx,ebx
2  9680	00001DB8  0F 87	00000096		 ja	 @C0376
1  9681	00001DBE  83 C1	40						 add	 ecx, 40h
1  9682									 .IF ecx >= ebx
2  9683	00001DC1  3B CB				 cmp	 ecx,ebx
2  9684	00001DC3  0F 82	0000008B		 jb	 @C0378
1  9685
1  9686										 .IF CurrentNinja.State	== NINJA_STATE_KICKING
2  9687	00001DC9  80 3D	000002F9r 03		 cmp	 CurrentNinja .	State,NINJA_STATE_KICKING
2  9688	00001DD0  75 0C				 jnz	 @C0380
1  9689	00001DD2  50									 push	 eax
1  9690	00001DD3  6A 04									 push	 04h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 171
JANE.ASM



1  9691	00001DD5  50									 push	 eax
1  9692	00001DD6  E8 FFFFFEFA								 call	 GiveDamage
1  9693	00001DDB  58									 pop	 eax
1  9694										 .ELSEIF CurrentNinja.State == NINJA_STATE_JABING
2  9695	00001DDC  EB 76				 jmp	 @C0379
2  9696	00001DDE			 @C0380:
2  9697	00001DDE  80 3D	000002F9r 0C		 cmp	 CurrentNinja .	State,NINJA_STATE_JABING
2  9698	00001DE5  75 1F				 jnz	 @C0381
1  9699	00001DE7  50									 push	 eax
1  9700											 .IF CurrentNinja.ActiveInventory == 1	    +
   9701					 ;Sword
2  9702	00001DE8  80 3D	000002FEr 01		 cmp	 CurrentNinja .	ActiveInventory,1
2  9703	00001DEF  75 0A				 jnz	 @C0383
1  9704	00001DF1  6A 04										 push	 04h
1  9705	00001DF3  50										 push	 eax
1  9706	00001DF4  E8 FFFFFEDC									 call	 GiveDamage
1  9707											 .ELSE
2  9708	00001DF9  EB 08				 jmp	 @C0382
2  9709	00001DFB			 @C0383:
1  9710	00001DFB  6A 02										 push	 02h
1  9711	00001DFD  50										 push	 eax
1  9712	00001DFE  E8 FFFFFED2									 call	 GiveDamage
1  9713											 .ENDIF
2  9714	00001E03			 @C0382:
1  9715	00001E03  58									 pop	 eax
1  9716										 .ELSEIF CurrentNinja.State == NINJA_STATE_SLASHING
2  9717	00001E04  EB 4E				 jmp	 @C0379
2  9718	00001E06			 @C0381:
2  9719	00001E06  80 3D	000002F9r 05		 cmp	 CurrentNinja .	State,NINJA_STATE_SLASHING
2  9720	00001E0D  75 1F				 jnz	 @C0384
1  9721	00001E0F  50									 push	 eax
1  9722											 .IF CurrentNinja.ActiveInventory == 1	    +
   9723					 ;Sword
2  9724	00001E10  80 3D	000002FEr 01		 cmp	 CurrentNinja .	ActiveInventory,1
2  9725	00001E17  75 0A				 jnz	 @C0386
1  9726	00001E19  6A 04										 push	 04h
1  9727	00001E1B  50										 push	 eax
1  9728	00001E1C  E8 FFFFFEB4									 call	 GiveDamage
1  9729											 .ELSE
2  9730	00001E21  EB 08				 jmp	 @C0385
2  9731	00001E23			 @C0386:
1  9732	00001E23  6A 02										 push	 02h
1  9733	00001E25  50										 push	 eax
1  9734	00001E26  E8 FFFFFEAA									 call	 GiveDamage
1  9735											 .ENDIF
2  9736	00001E2B			 @C0385:
1  9737	00001E2B  58									 pop	 eax
1  9738										 .ELSEIF CurrentNinja.State == NINJA_STATE_PUNCHING
2  9739	00001E2C  EB 26				 jmp	 @C0379
2  9740	00001E2E			 @C0384:
2  9741	00001E2E  80 3D	000002F9r 04		 cmp	 CurrentNinja .	State,NINJA_STATE_PUNCHING
2  9742	00001E35  75 1D				 jnz	 @C0387
1  9743	00001E37  50									 push	 eax
1  9744											 .IF CurrentNinja.ActiveInventory == 1	    +
   9745					 ;Sword
2  9746	00001E38  80 3D	000002FEr 01		 cmp	 CurrentNinja .	ActiveInventory,1
2  9747	00001E3F  75 0A				 jnz	 @C0389
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 172
JANE.ASM



1  9748	00001E41  6A 02										 push	 02h
1  9749	00001E43  50										 push	 eax
1  9750	00001E44  E8 FFFFFE8C									 call	 GiveDamage
1  9751											 .ELSE
2  9752	00001E49  EB 08				 jmp	 @C0388
2  9753	00001E4B			 @C0389:
1  9754	00001E4B  6A 01										 push	 01h
1  9755	00001E4D  50										 push	 eax
1  9756	00001E4E  E8 FFFFFE82									 call	 GiveDamage
1  9757											 .ENDIF
2  9758	00001E53			 @C0388:
1  9759	00001E53  58									 pop	 eax
1  9760										 .ENDIF
2  9761	00001E54			 @C0387:
2  9762	00001E54			 @C0379:
1  9763
1  9764									 .ENDIF
2  9765	00001E54			 @C0378:
2  9766	00001E54			 @C0377:
1  9767								 .ENDIF
2  9768	00001E54			 @C0376:
2  9769	00001E54			 @C0375:
1  9770
1  9771							 .ENDIF
2  9772	00001E54			 @C0374:
2  9773	00001E54			 @C0373:
1  9774						 .ENDIF
2  9775	00001E54			 @C0372:
2  9776	00001E54			 @C0371:
1  9777
1  9778	00001E54  61				 popa
2  9779	00001E55  C9				 LEAVED
2  9780	00001E56  C2 0004			 RET	 00004h
1  9781	00001E59			 IsEnemyCollision	 endp
   9782
   9783					 INCLUDE Object-Code.inc
1  9784	00001E59				 .code
1  9785
1  9786	00001E59			 PostHit proc	 STDCALL
1  9787
1  9788	00001E59  C7 05	000006D3r     +			 mov	 posto.AttackFunction, 0h
   9789		  00000000
1  9790
1  9791	00001E63  A1 000006CBr				 mov	 eax, posto.ScreenX
1  9792	00001E68  83 C0	10				 add	 eax, 10h
1  9793	00001E6B  A3 000006CBr				 mov	 posto.ScreenX,	eax
1  9794
1  9795	00001E70  A1 000006CFr				 mov	 eax, posto.ScreenY
1  9796	00001E75  48					 dec	 eax
1  9797	00001E76  48					 dec	 eax
1  9798	00001E77  48					 dec	 eax
1  9799	00001E78  48					 dec	 eax
1  9800	00001E79  A3 000006CFr				 mov	 posto.ScreenY,	eax
1  9801
1  9802	00001E7E  C6 05	00000046r 01			 mov	 logic_switch_A, 1h
1  9803
1  9804							 .IF logic_switch_B == 1h
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 173
JANE.ASM



2  9805	00001E85  80 3D	00000047r 01		 cmp	 logic_switch_B,1H
2  9806	00001E8C  75 05				 jnz	 @C0391
1  9807	00001E8E  E8 0000003C					 call	 LogicActivate
1  9808							 .ENDIF
2  9809	00001E93			 @C0391:
2  9810	00001E93			 @C0390:
2  9811	00001E93  C3				 RET	 00000h
1  9812	00001E94			 PostHit endp
1  9813
1  9814	00001E94			 PostHitB	 proc	 STDCALL
1  9815
1  9816	00001E94  C7 05	00000AD0r     +			 mov	 postb.AttackFunction, 0h
   9817		  00000000
1  9818
1  9819	00001E9E  A1 00000AC8r				 mov	 eax, postb.ScreenX
1  9820	00001EA3  83 E8	10				 sub	 eax, 10h
1  9821	00001EA6  A3 00000AC8r				 mov	 postb.ScreenX,	eax
1  9822
1  9823	00001EAB  A1 00000ACCr				 mov	 eax, postb.ScreenY
1  9824	00001EB0  48					 dec	 eax
1  9825	00001EB1  48					 dec	 eax
1  9826	00001EB2  48					 dec	 eax
1  9827	00001EB3  48					 dec	 eax
1  9828	00001EB4  A3 00000ACCr				 mov	 postb.ScreenY,	eax
1  9829
1  9830	00001EB9  C6 05	00000047r 01			 mov	 logic_switch_B, 1h
1  9831
1  9832							 .IF logic_switch_A == 1h
2  9833	00001EC0  80 3D	00000046r 01		 cmp	 logic_switch_A,1H
2  9834	00001EC7  75 05				 jnz	 @C0393
1  9835	00001EC9  E8 00000001					 call	 LogicActivate
1  9836							 .ENDIF
2  9837	00001ECE			 @C0393:
2  9838	00001ECE			 @C0392:
2  9839	00001ECE  C3				 RET	 00000h
1  9840	00001ECF			 PostHitB	 endp
1  9841
1  9842	00001ECF			 LogicActivate	 proc	 STDCALL
1  9843	00001ECF  66| C7 05 00000419r +		 mov	 room_water.BackgroundGfx, 5		 ; Jumpable water
   9844		  0005
2  9845	00001ED8  C3				 RET	 00000h
1  9846	00001ED9			 LogicActivate	 endp
   9847
   9848					 INCLUDE AI-Enemy.inc
1  9849	00001ED9				 .data
1  9850
1  9851	00000D3C  ??			 debugGargoyle		 db	 ?
1  9852	00000D3D  ????????		 ptrEnemy		 dd	 ?
1  9853
1  9854	00000D41				 .code
1  9855
1  9856	00001ED9			 ControlEnemy		 proc	 STDCALL, iEnemyNum:DWORD
2  9857	00001ED9  C8 0000 00			 ENTERD	 00000h,0
2  9858	00001EDD  A0 00000D3Cr			 mov	 al, debugGargoyle
1  9859	00001EE2  0A C0				 or	 al, al
1  9860	00001EE4  0F 85	000001D4		 jnz	 control_gargoyleactive		 ;Debug	mode Gargoyle
1  9861
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 174
JANE.ASM



1  9862
1  9863	00001EEA  A1 000002F5r			 mov	 eax, CurrentNinja.ScreenID
1  9864	00001EEF  B9 0000002A			 mov	 ecx, MapRoom_Len
1  9865	00001EF4  F7 E1				 mul	 ecx
1  9866	00001EF6  05 0000031Dr			 add	 eax, offset Jane_Map			 ; eax -> Screen
1  9867	00001EFB  8B 4D	08			 mov	 ecx, iEnemyNum
1  9868						 .IF ecx == 1
2  9869	00001EFE  83 F9	01			 cmp	 ecx,1
2  9870	00001F01  75 0B				 jnz	 @C0395
1  9871	00001F03  8D 58	02				 lea	 ebx, [eax].enemy1_ScreenX
1  9872	00001F06  89 1D	00000D3Dr			 mov	 ptrEnemy, ebx
1  9873						 .ELSE
2  9874	00001F0C  EB 09				 jmp	 @C0394
2  9875	00001F0E			 @C0395:
1  9876	00001F0E  8D 58	14				 lea	 ebx, [eax].enemy2_ScreenX
1  9877	00001F11  89 1D	00000D3Dr			 mov	 ptrEnemy, ebx
1  9878						 .ENDIF
2  9879	00001F17			 @C0394:
1  9880
1  9881	00001F17  53				 push	 ebx
1  9882
1  9883						 ;;; Move/Attack/Animate!
1  9884	00001F18  8B 45	08			 mov	 eax, iEnemyNum
1  9885	00001F1B  50				 push	 eax
1  9886	00001F1C  E8 FFFFF35B			 call	 AnimationIncreaseFrameEnemy
1  9887
1  9888	00001F21  5B				 pop	 ebx
1  9889
1  9890						 .IF [ebx].enemy_State == NINJA_STATE_WALKING
2  9891	00001F22  80 7B	0C 00			 cmp	 [ebx].	enemy_State,NINJA_STATE_WALKING
2  9892	00001F26  0F 85	0000016F		 jnz	 @C0397
1  9893
1  9894							 ; If Ninja in attack distance,	pick attack
1  9895	00001F2C  8B 0D	000002EDr			 mov	 ecx, CurrentNinja.ScreenX
1  9896	00001F32  8B 13					 mov	 edx, [ebx].enemy_ScreenX
1  9897							 .IF ecx > edx
2  9898	00001F34  3B CA				 cmp	 ecx,edx
2  9899	00001F36  76 02				 jbe	 @C0399
1  9900	00001F38  87 CA						 xchg	 ecx, edx
1  9901							 .ENDIF
2  9902	00001F3A			 @C0399:
2  9903	00001F3A			 @C0398:
1  9904	00001F3A  2B D1					 sub	 edx, ecx				 ; edx == X distance between
1  9905
1  9906	00001F3C  52					 push	 edx
1  9907
1  9908	00001F3D  8B 0D	000002F1r			 mov	 ecx, CurrentNinja.ScreenY
1  9909	00001F43  8B 53	04				 mov	 edx, [ebx].enemy_ScreenY
1  9910							 .IF ecx > edx
2  9911	00001F46  3B CA				 cmp	 ecx,edx
2  9912	00001F48  76 02				 jbe	 @C0401
1  9913	00001F4A  87 CA						 xchg	 ecx, edx
1  9914							 .ENDIF
2  9915	00001F4C			 @C0401:
2  9916	00001F4C			 @C0400:
1  9917	00001F4C  2B D1					 sub	 edx, ecx				 ; edx == Y distance between
1  9918	00001F4E  59					 pop	 ecx					 ; ecx == X distance between
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 175
JANE.ASM



1  9919
1  9920	00001F4F  83 F9	28				 cmp	 ecx, NINJA_FRAME_WIDTH	/ 2
1  9921	00001F52  7F 5F					 jg	 control_notcloseforattack
1  9922	00001F54  83 FA	32				 cmp	 edx, NINJA_FRAME_HEIGHT / 2
1  9923	00001F57  7F 5A					 jg	 control_notcloseforattack
1  9924
1  9925							 ;;; Try attack
1  9926	00001F59  53					 push	 ebx
1  9927	00001F5A  9C					 pushfd
1  9928
1  9929	00001F5B  53					 push	 ebx
1  9930	00001F5C  E8 FFFFE286				 call	 RandomNumber
1  9931	00001F61  33 D2					 xor	 edx, edx
1  9932	00001F63  B9 00000007				 mov	 ecx, 07h
1  9933	00001F68  F7 F1					 div	 ecx
1  9934
1  9935	00001F6A  9D					 popfd
1  9936	00001F6B  5B					 pop	 ebx
1  9937
1  9938							 .IF edx == 00h
2  9939	00001F6C  83 FA	00			 cmp	 edx,00H
2  9940	00001F6F  75 0C				 jnz	 @C0403
1  9941	00001F71  C6 43	0C 03					 mov	 [ebx].enemy_State, NINJA_STATE_KICKING
1  9942	00001F75  66| C7 43 0A 0000				 mov	 [ebx].enemy_FrameIdx, 00h
1  9943							 .ELSEIF edx ==	01h
2  9944	00001F7B  EB 31				 jmp	 @C0402
2  9945	00001F7D			 @C0403:
2  9946	00001F7D  83 FA	01			 cmp	 edx,01H
2  9947	00001F80  75 0C				 jnz	 @C0404
1  9948	00001F82  C6 43	0C 04					 mov	 [ebx].enemy_State, NINJA_STATE_PUNCHING
1  9949	00001F86  66| C7 43 0A 0000				 mov	 [ebx].enemy_FrameIdx, 00h
1  9950							 .ELSEIF edx ==	02h
2  9951	00001F8C  EB 20				 jmp	 @C0402
2  9952	00001F8E			 @C0404:
2  9953	00001F8E  83 FA	02			 cmp	 edx,02H
2  9954	00001F91  75 0C				 jnz	 @C0405
1  9955	00001F93  C6 43	0C 0C					 mov	 [ebx].enemy_State, NINJA_STATE_JABING
1  9956	00001F97  66| C7 43 0A 0000				 mov	 [ebx].enemy_FrameIdx, 00h
1  9957							 .ELSEIF edx ==	03h
2  9958	00001F9D  EB 0F				 jmp	 @C0402
2  9959	00001F9F			 @C0405:
2  9960	00001F9F  83 FA	03			 cmp	 edx,03H
2  9961	00001FA2  75 0A				 jnz	 @C0406
1  9962	00001FA4  C6 43	0C 05					 mov	 [ebx].enemy_State, NINJA_STATE_SLASHING
1  9963	00001FA8  66| C7 43 0A 0000				 mov	 [ebx].enemy_FrameIdx, 00h
1  9964							 .ENDIF
2  9965	00001FAE			 @C0406:
2  9966	00001FAE			 @C0402:
1  9967	00001FAE  E9 000000E6				 jmp	 control_skipmoveenemy
1  9968
1  9969	00001FB3			 control_notcloseforattack:
1  9970							 ; If not, move	in a random direction
1  9971
1  9972	00001FB3  53					 push	 ebx
1  9973	00001FB4  9C					 pushfd
1  9974
1  9975	00001FB5  53					 push	 ebx
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 176
JANE.ASM



1  9976	00001FB6  E8 FFFFE22C				 call	 RandomNumber
1  9977
1  9978	00001FBB  33 D2					 xor	 edx, edx
1  9979	00001FBD  B9 00000020				 mov	 ecx, 20h
1  9980	00001FC2  F7 F1					 div	 ecx					 ; edx == NINJA_FACING_*
1  9981
1  9982	00001FC4  9D					 popfd
1  9983	00001FC5  5B					 pop	 ebx
1  9984
1  9985							 .IF [ebx].enemy_Facing	== NINJA_FACING_NORTH
2  9986	00001FC6  80 7B	0E 00			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_NORTH
2  9987	00001FCA  75 30				 jnz	 @C0408
1  9988								 ;;; If	facing ninja, keep facing that direction
1  9989	00001FCC  8B 0D	000002EDr				 mov	 ecx, CurrentNinja.ScreenX
1  9990								 .IF ecx > [ebx].enemy_ScreenX
2  9991	00001FD2  3B 0B				 cmp	 ecx,[ebx]. enemy_ScreenX
2  9992	00001FD4  76 0D				 jbe	 @C0410
1  9993	00001FD6  8B 0D	000002F1r					 mov	 ecx, CurrentNinja.ScreenY
1  9994									 .IF ecx < [ebx].enemy_ScreenY
2  9995	00001FDC  3B 4B	04			 cmp	 ecx,[ebx]. enemy_ScreenY
2  9996	00001FDF  73 02				 jae	 @C0412
1  9997	00001FE1  33 D2								 xor	 edx, edx
1  9998									 .ENDIF
2  9999	00001FE3			 @C0412:
2 10000	00001FE3			 @C0411:
1 10001								 .ENDIF
2 10002	00001FE3			 @C0410:
2 10003	00001FE3			 @C0409:
1 10004
1 10005								 .IF edx == 1
2 10006	00001FE3  83 FA	01			 cmp	 edx,1
2 10007	00001FE6  75 06				 jnz	 @C0414
1 10008	00001FE8  C6 43	0E 01						 mov	 [ebx].enemy_Facing, NINJA_FACING_EAST
1 10009								 .ELSEIF edx ==	2
2 10010	00001FEC  EB 09				 jmp	 @C0413
2 10011	00001FEE			 @C0414:
2 10012	00001FEE  83 FA	02			 cmp	 edx,2
2 10013	00001FF1  75 04				 jnz	 @C0415
1 10014	00001FF3  C6 43	0E 03						 mov	 [ebx].enemy_Facing, NINJA_FACING_WEST
1 10015								 .ENDIF
2 10016	00001FF7			 @C0415:
2 10017	00001FF7			 @C0413:
1 10018							 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_EAST
2 10019	00001FF7  E9 00000097			 jmp	 @C0407
2 10020	00001FFC			 @C0408:
2 10021	00001FFC  80 7B	0E 01			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_EAST
2 10022	00002000  75 2D				 jnz	 @C0416
1 10023								 ;;; If	facing ninja, keep facing that direction
1 10024	00002002  8B 0D	000002EDr				 mov	 ecx, CurrentNinja.ScreenX
1 10025								 .IF ecx > [ebx].enemy_ScreenX
2 10026	00002008  3B 0B				 cmp	 ecx,[ebx]. enemy_ScreenX
2 10027	0000200A  76 0D				 jbe	 @C0418
1 10028	0000200C  8B 0D	000002F1r					 mov	 ecx, CurrentNinja.ScreenY
1 10029									 .IF ecx > [ebx].enemy_ScreenY
2 10030	00002012  3B 4B	04			 cmp	 ecx,[ebx]. enemy_ScreenY
2 10031	00002015  76 02				 jbe	 @C0420
1 10032	00002017  33 D2								 xor	 edx, edx
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 177
JANE.ASM



1 10033									 .ENDIF
2 10034	00002019			 @C0420:
2 10035	00002019			 @C0419:
1 10036								 .ENDIF
2 10037	00002019			 @C0418:
2 10038	00002019			 @C0417:
1 10039
1 10040								 .IF edx == 1
2 10041	00002019  83 FA	01			 cmp	 edx,1
2 10042	0000201C  75 06				 jnz	 @C0422
1 10043	0000201E  C6 43	0E 00						 mov	 [ebx].enemy_Facing, NINJA_FACING_NORTH
1 10044								 .ELSEIF edx ==	2
2 10045	00002022  EB 09				 jmp	 @C0421
2 10046	00002024			 @C0422:
2 10047	00002024  83 FA	02			 cmp	 edx,2
2 10048	00002027  75 04				 jnz	 @C0423
1 10049	00002029  C6 43	0E 02						 mov	 [ebx].enemy_Facing, NINJA_FACING_SOUTH
1 10050								 .ENDIF
2 10051	0000202D			 @C0423:
2 10052	0000202D			 @C0421:
1 10053							 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_SOUTH
2 10054	0000202D  EB 64				 jmp	 @C0407
2 10055	0000202F			 @C0416:
2 10056	0000202F  80 7B	0E 02			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_SOUTH
2 10057	00002033  75 2D				 jnz	 @C0424
1 10058								 ;;; If	facing ninja, keep facing that direction
1 10059	00002035  8B 0D	000002EDr				 mov	 ecx, CurrentNinja.ScreenX
1 10060								 .IF ecx < [ebx].enemy_ScreenX
2 10061	0000203B  3B 0B				 cmp	 ecx,[ebx]. enemy_ScreenX
2 10062	0000203D  73 0D				 jae	 @C0426
1 10063	0000203F  8B 0D	000002F1r					 mov	 ecx, CurrentNinja.ScreenY
1 10064									 .IF ecx > [ebx].enemy_ScreenY
2 10065	00002045  3B 4B	04			 cmp	 ecx,[ebx]. enemy_ScreenY
2 10066	00002048  76 02				 jbe	 @C0428
1 10067	0000204A  33 D2								 xor	 edx, edx
1 10068									 .ENDIF
2 10069	0000204C			 @C0428:
2 10070	0000204C			 @C0427:
1 10071								 .ENDIF
2 10072	0000204C			 @C0426:
2 10073	0000204C			 @C0425:
1 10074
1 10075								 .IF edx == 1
2 10076	0000204C  83 FA	01			 cmp	 edx,1
2 10077	0000204F  75 06				 jnz	 @C0430
1 10078	00002051  C6 43	0E 01						 mov	 [ebx].enemy_Facing, NINJA_FACING_EAST
1 10079								 .ELSEIF edx ==	2
2 10080	00002055  EB 09				 jmp	 @C0429
2 10081	00002057			 @C0430:
2 10082	00002057  83 FA	02			 cmp	 edx,2
2 10083	0000205A  75 04				 jnz	 @C0431
1 10084	0000205C  C6 43	0E 03						 mov	 [ebx].enemy_Facing, NINJA_FACING_WEST
1 10085								 .ENDIF
2 10086	00002060			 @C0431:
2 10087	00002060			 @C0429:
1 10088							 .ELSEIF [ebx].enemy_Facing == NINJA_FACING_WEST
2 10089	00002060  EB 31				 jmp	 @C0407
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 178
JANE.ASM



2 10090	00002062			 @C0424:
2 10091	00002062  80 7B	0E 03			 cmp	 [ebx].	enemy_Facing,NINJA_FACING_WEST
2 10092	00002066  75 2B				 jnz	 @C0432
1 10093								 ;;; If	facing ninja, keep facing that direction
1 10094	00002068  8B 0D	000002EDr				 mov	 ecx, CurrentNinja.ScreenX
1 10095								 .IF ecx < [ebx].enemy_ScreenX
2 10096	0000206E  3B 0B				 cmp	 ecx,[ebx]. enemy_ScreenX
2 10097	00002070  73 0D				 jae	 @C0434
1 10098	00002072  8B 0D	000002F1r					 mov	 ecx, CurrentNinja.ScreenY
1 10099									 .IF ecx < [ebx].enemy_ScreenY
2 10100	00002078  3B 4B	04			 cmp	 ecx,[ebx]. enemy_ScreenY
2 10101	0000207B  73 02				 jae	 @C0436
1 10102	0000207D  33 D2								 xor	 edx, edx
1 10103									 .ENDIF
2 10104	0000207F			 @C0436:
2 10105	0000207F			 @C0435:
1 10106								 .ENDIF
2 10107	0000207F			 @C0434:
2 10108	0000207F			 @C0433:
1 10109
1 10110								 .IF edx == 1
2 10111	0000207F  83 FA	01			 cmp	 edx,1
2 10112	00002082  75 06				 jnz	 @C0438
1 10113	00002084  C6 43	0E 00						 mov	 [ebx].enemy_Facing, NINJA_FACING_NORTH
1 10114								 .ELSEIF edx ==	2
2 10115	00002088  EB 09				 jmp	 @C0437
2 10116	0000208A			 @C0438:
2 10117	0000208A  83 FA	02			 cmp	 edx,2
2 10118	0000208D  75 04				 jnz	 @C0439
1 10119	0000208F  C6 43	0E 02						 mov	 [ebx].enemy_Facing, NINJA_FACING_SOUTH
1 10120								 .ENDIF
2 10121	00002093			 @C0439:
2 10122	00002093			 @C0437:
1 10123							 .ENDIF
2 10124	00002093			 @C0432:
2 10125	00002093			 @C0407:
1 10126	00002093  53					 push	 ebx
1 10127	00002094  E8 FFFFF9EE				 call	 MoveEnemy
1 10128	00002099			 control_skipmoveenemy:
1 10129						 .ELSE
2 10130	00002099  EB 23				 jmp	 @C0396
2 10131	0000209B			 @C0397:
1 10132	0000209B  80 7B	0C 04				 cmp	 [ebx].enemy_State, NINJA_STATE_PUNCHING
1 10133	0000209F  74 12					 je	 control_attackingmode
1 10134	000020A1  80 7B	0C 05				 cmp	 [ebx].enemy_State, NINJA_STATE_SLASHING
1 10135	000020A5  74 0C					 je	 control_attackingmode
1 10136	000020A7  80 7B	0C 0C				 cmp	 [ebx].enemy_State, NINJA_STATE_JABING
1 10137	000020AB  74 06					 je	 control_attackingmode
1 10138	000020AD  80 7B	0C 03				 cmp	 [ebx].enemy_State, NINJA_STATE_KICKING
1 10139	000020B1  75 0B					 jne	 control_donecontrol
1 10140	000020B3			 control_attackingmode:
1 10141	000020B3  FF 35	00000D3Dr			 push	 ptrEnemy
1 10142	000020B9  E8 00000004				 call	 ControlCollision
1 10143	000020BE			 control_donecontrol:
1 10144						 .ENDIF
2 10145	000020BE			 @C0396:
1 10146
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 179
JANE.ASM



1 10147	000020BE			 control_gargoyleactive:
2 10148	000020BE  C9				 LEAVED
2 10149	000020BF  C2 0004			 RET	 00004h
1 10150	000020C2			 ControlEnemy		 endp
1 10151
1 10152	000020C2			 ControlCollision	 proc	 STDCALL, enemyStruc:DWORD
2 10153	000020C2  C8 0000 00			 ENTERD	 00000h,0
2 10154	000020C6  60				 pusha
1 10155	000020C7  8B 45	08			 mov	 eax, enemyStruc
1 10156	000020CA  8B 18				 mov	 ebx, [eax].enemy_ScreenX
1 10157	000020CC  8B 50	04			 mov	 edx, [eax].enemy_ScreenY
1 10158	000020CF  8A 68	0E			 mov	 ch, [eax].enemy_Facing
1 10159						 .IF [eax].enemy_ActiveInventory == ENEMY_INVENTORY_SWORD		 ;Sword
2 10160	000020D2  80 78	11 01			 cmp	 [eax].	enemy_ActiveInventory,ENEMY_INVENTORY_SWORD
2 10161	000020D6  75 34				 jnz	 @C0441
1 10162							 .IF ch	== NINJA_FACING_NORTH
2 10163	000020D8  80 FD	00			 cmp	 ch,NINJA_FACING_NORTH
2 10164	000020DB  75 08				 jnz	 @C0443
1 10165	000020DD  83 C3	30					 add	 ebx, 30h
1 10166	000020E0  83 EA	0C					 sub	 edx, 0Ch
1 10167							 .ELSEIF ch == NINJA_FACING_EAST
2 10168	000020E3  EB 25				 jmp	 @C0442
2 10169	000020E5			 @C0443:
2 10170	000020E5  80 FD	01			 cmp	 ch,NINJA_FACING_EAST
2 10171	000020E8  75 08				 jnz	 @C0444
1 10172	000020EA  83 C3	30					 add	 ebx, 30h
1 10173	000020ED  83 C2	0C					 add	 edx, 0Ch
1 10174							 .ELSEIF ch == NINJA_FACING_WEST
2 10175	000020F0  EB 18				 jmp	 @C0442
2 10176	000020F2			 @C0444:
2 10177	000020F2  80 FD	03			 cmp	 ch,NINJA_FACING_WEST
2 10178	000020F5  75 08				 jnz	 @C0445
1 10179	000020F7  83 EB	30					 sub	 ebx, 30h
1 10180	000020FA  83 EA	0C					 sub	 edx, 0Ch
1 10181							 .ELSEIF ch == NINJA_FACING_SOUTH
2 10182	000020FD  EB 0B				 jmp	 @C0442
2 10183	000020FF			 @C0445:
2 10184	000020FF  80 FD	02			 cmp	 ch,NINJA_FACING_SOUTH
2 10185	00002102  75 06				 jnz	 @C0446
1 10186	00002104  83 EB	30					 sub	 ebx, 30h
1 10187	00002107  83 C2	0C					 add	 edx, 0Ch
1 10188							 .ENDIF
2 10189	0000210A			 @C0446:
2 10190	0000210A			 @C0442:
1 10191						 .ELSE
2 10192	0000210A  EB 32				 jmp	 @C0440
2 10193	0000210C			 @C0441:
1 10194							 .IF ch	== NINJA_FACING_NORTH
2 10195	0000210C  80 FD	00			 cmp	 ch,NINJA_FACING_NORTH
2 10196	0000210F  75 08				 jnz	 @C0448
1 10197	00002111  83 C3	20					 add	 ebx, 20h
1 10198	00002114  83 EA	08					 sub	 edx, 08h
1 10199							 .ELSEIF ch == NINJA_FACING_EAST
2 10200	00002117  EB 25				 jmp	 @C0447
2 10201	00002119			 @C0448:
2 10202	00002119  80 FD	01			 cmp	 ch,NINJA_FACING_EAST
2 10203	0000211C  75 08				 jnz	 @C0449
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 180
JANE.ASM



1 10204	0000211E  83 C3	20					 add	 ebx, 20h
1 10205	00002121  83 C2	08					 add	 edx, 08h
1 10206							 .ELSEIF ch == NINJA_FACING_WEST
2 10207	00002124  EB 18				 jmp	 @C0447
2 10208	00002126			 @C0449:
2 10209	00002126  80 FD	03			 cmp	 ch,NINJA_FACING_WEST
2 10210	00002129  75 08				 jnz	 @C0450
1 10211	0000212B  83 EB	20					 sub	 ebx, 20h
1 10212	0000212E  83 EA	08					 sub	 edx, 08h
1 10213							 .ELSEIF ch == NINJA_FACING_SOUTH
2 10214	00002131  EB 0B				 jmp	 @C0447
2 10215	00002133			 @C0450:
2 10216	00002133  80 FD	02			 cmp	 ch,NINJA_FACING_SOUTH
2 10217	00002136  75 06				 jnz	 @C0451
1 10218	00002138  83 EB	20					 sub	 ebx, 20h
1 10219	0000213B  83 C2	08					 add	 edx, 08h
1 10220							 .ENDIF
2 10221	0000213E			 @C0451:
2 10222	0000213E			 @C0447:
1 10223						 .ENDIF
2 10224	0000213E			 @C0440:
1 10225
1 10226	0000213E  8B 0D	000002F1r		 mov	 ecx, CurrentNinja.ScreenY
1 10227	00002144  83 E9	08			 sub	 ecx, 08h
1 10228						 .IF ecx <= edx
2 10229	00002147  3B CA				 cmp	 ecx,edx
2 10230	00002149  0F 87	00000082		 ja	 @C0453
1 10231	0000214F  83 C1	10				 add	 ecx, 10h
1 10232							 .IF ecx >= edx
2 10233	00002152  3B CA				 cmp	 ecx,edx
2 10234	00002154  72 7B				 jb	 @C0455
1 10235	00002156  8B 0D	000002EDr				 mov	 ecx, CurrentNinja.ScreenX
1 10236	0000215C  83 E9	20					 sub	 ecx, 20h
1 10237								 .IF ecx <= ebx
2 10238	0000215F  3B CB				 cmp	 ecx,ebx
2 10239	00002161  77 6E				 ja	 @C0457
1 10240	00002163  83 C1	40						 add	 ecx, 40h
1 10241									 .IF ecx >= ebx
2 10242	00002166  3B CB				 cmp	 ecx,ebx
2 10243	00002168  72 67				 jb	 @C0459
1 10244
1 10245										 .IF [eax].enemy_State == NINJA_STATE_KICKING
2 10246	0000216A  80 78	0C 03			 cmp	 [eax].	enemy_State,NINJA_STATE_KICKING
2 10247	0000216E  75 09				 jnz	 @C0461
1 10248	00002170  6A 04									 push	 04h
1 10249	00002172  E8 FFFFEC15								 call	 OnTakeDamage
1 10250										 .ELSEIF [eax].enemy_State == NINJA_STATE_JABING
2 10251	00002177  EB 58				 jmp	 @C0460
2 10252	00002179			 @C0461:
2 10253	00002179  80 78	0C 0C			 cmp	 [eax].	enemy_State,NINJA_STATE_JABING
2 10254	0000217D  75 18				 jnz	 @C0462
1 10255											 .IF [eax].enemy_ActiveInventory ==	    +
  10256					 ENEMY_INVENTORY_SWORD		      ;Sword
2 10257	0000217F  80 78	11 01			 cmp	 [eax].	enemy_ActiveInventory,ENEMY_INVENTORY_SWORD
2 10258	00002183  75 09				 jnz	 @C0464
1 10259	00002185  6A 04										 push	 04h
1 10260	00002187  E8 FFFFEC00									 call	 OnTakeDamage
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 181
JANE.ASM



1 10261											 .ELSE
2 10262	0000218C  EB 07				 jmp	 @C0463
2 10263	0000218E			 @C0464:
1 10264	0000218E  6A 02										 push	 02h
1 10265	00002190  E8 FFFFEBF7									 call	 OnTakeDamage
1 10266											 .ENDIF
2 10267	00002195			 @C0463:
1 10268										 .ELSEIF [eax].enemy_State == NINJA_STATE_SLASHING
2 10269	00002195  EB 3A				 jmp	 @C0460
2 10270	00002197			 @C0462:
2 10271	00002197  80 78	0C 05			 cmp	 [eax].	enemy_State,NINJA_STATE_SLASHING
2 10272	0000219B  75 18				 jnz	 @C0465
1 10273											 .IF [eax].enemy_ActiveInventory ==	    +
  10274					 ENEMY_INVENTORY_SWORD
2 10275	0000219D  80 78	11 01			 cmp	 [eax].	enemy_ActiveInventory,ENEMY_INVENTORY_SWORD
2 10276	000021A1  75 09				 jnz	 @C0467
1 10277	000021A3  6A 04										 push	 04h
1 10278	000021A5  E8 FFFFEBE2									 call	 OnTakeDamage
1 10279											 .ELSE
2 10280	000021AA  EB 07				 jmp	 @C0466
2 10281	000021AC			 @C0467:
1 10282	000021AC  6A 02										 push	 02h
1 10283	000021AE  E8 FFFFEBD9									 call	 OnTakeDamage
1 10284											 .ENDIF
2 10285	000021B3			 @C0466:
1 10286										 .ELSEIF [eax].enemy_State == NINJA_STATE_PUNCHING
2 10287	000021B3  EB 1C				 jmp	 @C0460
2 10288	000021B5			 @C0465:
2 10289	000021B5  80 78	0C 04			 cmp	 [eax].	enemy_State,NINJA_STATE_PUNCHING
2 10290	000021B9  75 16				 jnz	 @C0468
1 10291											 .IF [eax].enemy_ActiveInventory ==	    +
  10292					 ENEMY_INVENTORY_SWORD
2 10293	000021BB  80 78	11 01			 cmp	 [eax].	enemy_ActiveInventory,ENEMY_INVENTORY_SWORD
2 10294	000021BF  75 09				 jnz	 @C0470
1 10295	000021C1  6A 02										 push	 02h
1 10296	000021C3  E8 FFFFEBC4									 call	 OnTakeDamage
1 10297											 .ELSE
2 10298	000021C8  EB 07				 jmp	 @C0469
2 10299	000021CA			 @C0470:
1 10300	000021CA  6A 01										 push	 01h
1 10301	000021CC  E8 FFFFEBBB									 call	 OnTakeDamage
1 10302											 .ENDIF
2 10303	000021D1			 @C0469:
1 10304										 .ENDIF
2 10305	000021D1			 @C0468:
2 10306	000021D1			 @C0460:
1 10307
1 10308									 .ENDIF
2 10309	000021D1			 @C0459:
2 10310	000021D1			 @C0458:
1 10311								 .ENDIF
2 10312	000021D1			 @C0457:
2 10313	000021D1			 @C0456:
1 10314
1 10315							 .ENDIF
2 10316	000021D1			 @C0455:
2 10317	000021D1			 @C0454:
Turbo Assembler	 Version 5.0	    08-31-04 19:40:21	    Page 182
JANE.ASM



1 10318						 .ENDIF
2 10319	000021D1			 @C0453:
2 10320	000021D1			 @C0452:
1 10321	000021D1  61				 popa
2 10322	000021D2  C9				 LEAVED
2 10323	000021D3  C2 0004			 RET	 00004h
1 10324	000021D6			 ControlCollision	 endp
  10325
  10326
  10327		  =OFFSET 21D6		 TOTAL_ENGINE_CODE_SIZE	 equ	 offset	$ - engine_count_code
  10328						 end	 start
